{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/Meadow/source/css/iconfont.css","path":"css/iconfont.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/Meadow/source/css/mdui.min.v0.4.3.css","path":"css/mdui.min.v0.4.3.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/css/mdui.min.v0.4.3.css.map","path":"css/mdui.min.v0.4.3.css.map","modified":0,"renderable":1},{"_id":"themes/Meadow/source/css/mdui.min.v1.0.0.css","path":"css/mdui.min.v1.0.0.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/css/mdui.min.v1.0.0.css.map","path":"css/mdui.min.v1.0.0.css.map","modified":0,"renderable":1},{"_id":"themes/Meadow/source/icons/avatar.gif","path":"icons/avatar.gif","modified":0,"renderable":1},{"_id":"themes/Meadow/source/icons/favicon.ico","path":"icons/favicon.ico","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/mdui.min.v0.4.3.js","path":"js/mdui.min.v0.4.3.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/mdui.min.v0.4.3.js.map","path":"js/mdui.min.v0.4.3.js.map","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/mdui.min.v1.0.0.js","path":"js/mdui.min.v1.0.0.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/mdui.min.v1.0.0.js.map","path":"js/mdui.min.v1.0.0.js.map","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/meadow.js","path":"js/meadow.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Black.woff","path":"fonts/roboto/Roboto-Black.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Black.woff2","path":"fonts/roboto/Roboto-Black.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BlackItalic.woff","path":"fonts/roboto/Roboto-BlackItalic.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BlackItalic.woff2","path":"fonts/roboto/Roboto-BlackItalic.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Bold.woff","path":"fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Bold.woff2","path":"fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BoldItalic.woff","path":"fonts/roboto/Roboto-BoldItalic.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BoldItalic.woff2","path":"fonts/roboto/Roboto-BoldItalic.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Light.woff","path":"fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Light.woff2","path":"fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-LightItalic.woff","path":"fonts/roboto/Roboto-LightItalic.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-LightItalic.woff2","path":"fonts/roboto/Roboto-LightItalic.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Medium.woff","path":"fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Medium.woff2","path":"fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-MediumItalic.woff","path":"fonts/roboto/Roboto-MediumItalic.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-MediumItalic.woff2","path":"fonts/roboto/Roboto-MediumItalic.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Regular.woff","path":"fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Regular.woff2","path":"fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-RegularItalic.woff","path":"fonts/roboto/Roboto-RegularItalic.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-RegularItalic.woff2","path":"fonts/roboto/Roboto-RegularItalic.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Thin.woff","path":"fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Thin.woff2","path":"fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-ThinItalic.woff","path":"fonts/roboto/Roboto-ThinItalic.woff","modified":0,"renderable":1},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-ThinItalic.woff2","path":"fonts/roboto/Roboto-ThinItalic.woff2","modified":0,"renderable":1},{"_id":"source/resume/001.jpg","path":"resume/001.jpg","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_001.png","path":"gallery/wallpaper/wp_001.png","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_004.png","path":"gallery/wallpaper/wp_004.png","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_005.jpg","path":"gallery/wallpaper/wp_005.jpg","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_003.png","path":"gallery/wallpaper/wp_003.png","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_002.png","path":"gallery/wallpaper/wp_002.png","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_007.jpg","path":"gallery/wallpaper/wp_007.jpg","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_008.jpg","path":"gallery/wallpaper/wp_008.jpg","modified":0,"renderable":0},{"_id":"source/gallery/wallpaper/wp_006.jpg","path":"gallery/wallpaper/wp_006.jpg","modified":0,"renderable":0},{"_id":"themes/Meadow/source/js/wrapImage.js","path":"js/wrapImage.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/README.md","path":"js/fancybox/README.md","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/bower.json","path":"js/fancybox/bower.json","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/gulpfile.js","path":"js/fancybox/gulpfile.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/package.json","path":"js/fancybox/package.json","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.css","path":"js/fancybox/dist/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.js","path":"js/fancybox/dist/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.min.css","path":"js/fancybox/dist/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.min.js","path":"js/fancybox/dist/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/docs/index.html","path":"js/fancybox/docs/index.html","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/css/core.css","path":"js/fancybox/src/css/core.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/css/fullscreen.css","path":"js/fancybox/src/css/fullscreen.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/css/share.css","path":"js/fancybox/src/css/share.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/css/slideshow.css","path":"js/fancybox/src/css/slideshow.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/css/thumbs.css","path":"js/fancybox/src/css/thumbs.css","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/core.js","path":"js/fancybox/src/js/core.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/fullscreen.js","path":"js/fancybox/src/js/fullscreen.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/guestures.js","path":"js/fancybox/src/js/guestures.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/hash.js","path":"js/fancybox/src/js/hash.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/media.js","path":"js/fancybox/src/js/media.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/share.js","path":"js/fancybox/src/js/share.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/slideshow.js","path":"js/fancybox/src/js/slideshow.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/thumbs.js","path":"js/fancybox/src/js/thumbs.js","modified":0,"renderable":1},{"_id":"themes/Meadow/source/js/fancybox/src/js/wheel.js","path":"js/fancybox/src/js/wheel.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/Meadow/1.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1713624328288},{"_id":"themes/Meadow/2.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1713624328288},{"_id":"themes/Meadow/LICENSE","hash":"b4d7662bb6b0b804c8fc94f7bc81f59dce0c36f3","modified":1713618528709},{"_id":"themes/Meadow/_config.yml","hash":"c473b23aebb4d571964d690d7e954ac5e5f9ca28","modified":1713677918630},{"_id":"themes/Meadow/languages/en.yml","hash":"1137d18ac257adac58afefd903ab92d1a68a6d3b","modified":1713618528709},{"_id":"themes/Meadow/languages/zh-CN.yml","hash":"2dbec9f39a924d49f6c4a58541333f55352bb344","modified":1713618528709},{"_id":"themes/Meadow/layout/archive.ejs","hash":"7b07fa8bcc36828d016aa0dce0b463b9738ae641","modified":1713618528713},{"_id":"themes/Meadow/layout/category.ejs","hash":"b802885669103479703bc75579cf2863caf0d44b","modified":1713618528713},{"_id":"themes/Meadow/layout/index.ejs","hash":"d5d91a2d914018303fbe68c6b55e6f0370ff2cc7","modified":1713618528713},{"_id":"themes/Meadow/README.md","hash":"c8ac99654be081eca05fe21c75da38d711b56cfd","modified":1713618528709},{"_id":"themes/Meadow/layout/layout.ejs","hash":"a5d35f0f656e9a372fa29c8c62422d6e00abfebf","modified":1713618528713},{"_id":"themes/Meadow/layout/page.ejs","hash":"099a6b6bc1032b20cdc618aa9b1f2d43dd930f5a","modified":1713618528713},{"_id":"themes/Meadow/layout/post.ejs","hash":"9f916bc8338279f5f845d942fc14b480482e6e16","modified":1713618528713},{"_id":"themes/Meadow/layout/tag.ejs","hash":"a5ba9b441e6932748f89a4926ab1403cccb5ce50","modified":1713618528713},{"_id":"themes/Meadow/layout/_adsense/banner.ejs","hash":"195d2f233ed521bb78a9a3bff2321cf9cf36e1ab","modified":1713618528709},{"_id":"themes/Meadow/layout/_adsense/footer.ejs","hash":"716d126c0522c875652ad7a72a61bb27de154765","modified":1713618528709},{"_id":"themes/Meadow/layout/_adsense/sidebar.ejs","hash":"e9c790b43e942e7da17a4fa5df288755978b4654","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/article.ejs","hash":"ade7474dbad1925fd314f2d0a3cd418c9c11743e","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/bodyload.ejs","hash":"3ceb496d8da8b35895698b4126038649610e86e0","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/footer.ejs","hash":"44b110c990e30a13492ba5ea5067d614f8af34a2","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/head.ejs","hash":"e511299c3b3ba72311eef52cfe9e5c22caacdf37","modified":1713679928601},{"_id":"themes/Meadow/layout/_partial/header.ejs","hash":"b352f61914ca2f0609aca75ea8e1663a5d872211","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/headload.ejs","hash":"4cce3370c685832b586bd83e5d5134bcd08fc473","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/pagination.ejs","hash":"0f0c772dec65ef07a07c2beacf06f89b035cf265","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/sidebar.ejs","hash":"93442c981c5e6a0f6217186ef580062fbea6667b","modified":1713627727712},{"_id":"themes/Meadow/source/css/iconfont.css","hash":"a8d1c687062f7f2adbdb5e4bdd8b53107047e23a","modified":1713618528713},{"_id":"themes/Meadow/source/css/main.styl","hash":"7d51c8db174a5876a6d40511428f8285e78615d6","modified":1713618528713},{"_id":"themes/Meadow/source/icons/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1713618528725},{"_id":"themes/Meadow/source/icons/favicon.ico","hash":"fb79fb50e5a9da722f4de142a45c996ef437476d","modified":1713618528725},{"_id":"themes/Meadow/source/js/mdui.min.v0.4.3.js","hash":"f64fd49e8cc1bb0679dd00cd1f11e9d111aac826","modified":1713618528725},{"_id":"themes/Meadow/source/js/meadow.js","hash":"3fdfab667c0697354fc1ef96f6bc89d7331e404c","modified":1713618528725},{"_id":"themes/Meadow/layout/_partial/page/categories.ejs","hash":"c6c1508f8bd86db7dd2dde630ad4ceb0c8337b36","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/page/collapse.ejs","hash":"3272955985f12755549fcf4af5a7ddeca9468843","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/page/tags.ejs","hash":"1ff3383ebff78d378b9a3f8f2efbb17e3033d836","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/post/post-header.ejs","hash":"75d3b5125a2554ad7cd4ba389e522c70a807cf28","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/post/post-share.ejs","hash":"0b6f444fea25679ed811d720f2dbf66f23dbd81c","modified":1713618528709},{"_id":"themes/Meadow/layout/_partial/post/post-tag.ejs","hash":"3290b073a46c32a80687ae45ef3ae1dd7ff00324","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/analytics/baidu-analytics.ejs","hash":"eb3b16d53b191c724853a76a671f001bf2146b44","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/analytics/cnzz-analytics.ejs","hash":"3c94798a0031383fabefbf847be5cb42f2ff5573","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/analytics/google-analytics.ejs","hash":"204d526b1c58b8ce36f73cc2057f970e70618357","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/analytics/tencent-analytics.ejs","hash":"99c9077c5d83d002d97d568211b8c03f291af288","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/comment/changyan.ejs","hash":"3a954d86a2a0ea96621e183cf89f16c99c387a3b","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/comment/disqus.ejs","hash":"a8422c9bd22c24e8c09c1c188f71c46687b14211","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/comment/gitalk.ejs","hash":"e2effdf5593a201e1d13379449fdd10f1cb77777","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/comment/index.ejs","hash":"11b317c72f025f25c50c5f92551957e739a50d4c","modified":1713618528709},{"_id":"themes/Meadow/layout/_plugin/comment/livere.ejs","hash":"abeada8bef10dd50134e7319271f3e942acf9cbb","modified":1713618528713},{"_id":"themes/Meadow/layout/_plugin/comment/valine.ejs","hash":"3e7635e2f93ddd366c4b47f2066bcd81ce184a5e","modified":1713618528713},{"_id":"themes/Meadow/layout/_plugin/math/mathjax.ejs","hash":"9d7af5c07e333d1313484728becb7cc6cb64953f","modified":1713618528713},{"_id":"themes/Meadow/layout/_plugin/math/katex.ejs","hash":"bf414ee8b9cadfeacc544c683ec01881c10e0430","modified":1713618528713},{"_id":"themes/Meadow/source/css/_partial/highlight.styl","hash":"7580c2dfac5ac1b680d656541b8dd793c9882f9e","modified":1713618528713},{"_id":"themes/Meadow/source/css/_partial/page.styl","hash":"ae7ef4045c821343496dab977c80cc18ab1bde6b","modified":1713618528713},{"_id":"themes/Meadow/source/css/_partial/post.styl","hash":"b71429b515dd888b17d72d0fffe8ec9748406e5a","modified":1713618528713},{"_id":"themes/Meadow/source/css/_partial/search.styl","hash":"83c42be8b8a0ce784cc7aa7cf09c90f825c87fd1","modified":1713618528713},{"_id":"themes/Meadow/source/css/_partial/sidebar.styl","hash":"c24846ad5bef515e8ee90d4c7beb7b29581b8c2f","modified":1713618528713},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Black.woff2","hash":"36dd174e41242ff6318083409f7e6c700b25eba2","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Bold.woff2","hash":"9074123ec9d4d6a7e21c2bee3f0110ca9a73733d","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Light.woff2","hash":"df835660087fc7421a7667d8b68d759e0e1dbbf8","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Medium.woff2","hash":"9f358fd5f441565282b54e8dc072a7d68f71a2fc","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Regular.woff2","hash":"a18bcf95ada923da31f176137b8add02b0ba60f3","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Thin.woff2","hash":"0592332e221316fd8331110568df461e87689cca","modified":1713618528721},{"_id":"themes/Meadow/source/js/mdui.min.v1.0.0.js","hash":"178ecc7437f1ec342762b0da74cbde3dd10342cd","modified":1713618528725},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Black.woff","hash":"100a2d03d89a0e3e027a1500e4f4d715d1ed52a0","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BlackItalic.woff","hash":"d2f8acc7e66ff51cc180bd998056e68dec30b8c6","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BlackItalic.woff2","hash":"45dc6a6ae29b2522ac98fc130d300d1c3ceee9b4","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Bold.woff","hash":"274d0176d3b2e324111d0f836625960bdf24a29a","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BoldItalic.woff","hash":"83739a927323a1c00a5e61ef6da84fff9e15fbc8","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-BoldItalic.woff2","hash":"99eaed1b19b50aeb3866d9ce568c290d15c965fb","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Light.woff","hash":"d6d654d36c6cf9053675860d00125d6c543560d8","modified":1713618528717},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-LightItalic.woff","hash":"184f1fc46df99866d5dbe03b57f3f6d9b9981ea0","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-LightItalic.woff2","hash":"d72aa4d470b5923b3f614dd8ca25fd230dda8206","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Medium.woff","hash":"d3564215ac8f29bbf8c3d0602e1299ebcbe26ea9","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-MediumItalic.woff","hash":"b1afeefecbee33ad50452ce3f728dfcf781c9d49","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-MediumItalic.woff2","hash":"2fbd77f1d63c3d339167aa754e716451d129e23f","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Regular.woff","hash":"db6450746e5df1eb0636bc84f21aae94e1cafea4","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-RegularItalic.woff","hash":"f3c32fd38c2f5fe34e54bdab2f238e469f48501a","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-RegularItalic.woff2","hash":"bd9360a27d99a093c2f06857c21fd6e98b57a8c0","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-Thin.woff","hash":"2d1c0c4d3ff8f91941499790d4fd63866e7c4852","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-ThinItalic.woff","hash":"ea71e1a7f20df5de8048e06c70d0b756b83f867e","modified":1713618528721},{"_id":"themes/Meadow/source/fonts/roboto/Roboto-ThinItalic.woff2","hash":"cf2e6e6e462a4ff1c980d2c0fdc7b9675a30c82b","modified":1713618528725},{"_id":"source/resume.md","hash":"bddc2ed5a7fa96f9a5a35e7ad45f88c4af41a514","modified":1713618528705},{"_id":"source/gallery/index.md","hash":"6dc8a416b3125a39a1a831d34a6c98f8808a2976","modified":1713618528705},{"_id":"source/gallery/job/index.md","hash":"46ce6343804d73357b49b4f887b37b954864c1ea","modified":1713618528705},{"_id":"source/gallery/wallpaper/wallpaper.md","hash":"22fc7b6407a463c97998f43905eed6b8bffc78ea","modified":1713626682017},{"_id":"source/_posts/wallpaper/wallpaper.md","hash":"bd3709a8d4e360e7d5d228c097510b3882beb3ec","modified":1713625625855},{"_id":"source/_posts/note/general/recording.md","hash":"288877031e28c7088ada9deefba7621366c94cc3","modified":1713625382763},{"_id":"source/_posts/note/general/tutorial_linux.md","hash":"33cf315b3af2604d2bec58020087b9e844492f81","modified":1713622617532},{"_id":"source/_posts/note/professional/convTranspose2d/convTranspose2d.md","hash":"72bd9e156c421b9e4fb854f891df16943135ab0e","modified":1713623994850},{"_id":"themes/Meadow/source/css/mdui.min.v0.4.3.css","hash":"7356f5d95c9d90254ea074ecaecae24e6a5a124e","modified":1713618528713},{"_id":"themes/Meadow/source/css/mdui.min.v1.0.0.css","hash":"5da28cd08e3bd4f759ee947e7e302e35a53831c2","modified":1713618528717},{"_id":"themes/Meadow/source/js/mdui.min.v0.4.3.js.map","hash":"7a92572e30f7b9bd09350efb04fd21f7b6230177","modified":1713618528725},{"_id":"source/resume/001.jpg","hash":"8ed37027997b8288442bc04640394dde6e66c6a1","modified":1713618528705},{"_id":"themes/Meadow/source/js/mdui.min.v1.0.0.js.map","hash":"29dbca6a99d7798fb46dcec4c9632e5c0ead4319","modified":1713618528725},{"_id":"themes/Meadow/source/css/mdui.min.v0.4.3.css.map","hash":"925eb00f83a5d7b19304a426ea574dd4de69acd1","modified":1713618528713},{"_id":"themes/Meadow/source/css/mdui.min.v1.0.0.css.map","hash":"96acfc653f0205b4127c309bab1c1d8f5180fd77","modified":1713618528717},{"_id":"source/_posts/note/general/tutorial_linux/001.png","hash":"a6afa485770c5682245b17769333f6193e15b46c","modified":1713618528705},{"_id":"source/_posts/wallpaper/wallpaper/wp_008.jpg","hash":"9fc7ec6b30ee34c471da20887dd1cadb5b3c63c6","modified":1713625625855},{"_id":"source/gallery/wallpaper/wallpaper/wp_008.jpg","hash":"9fc7ec6b30ee34c471da20887dd1cadb5b3c63c6","modified":1612698684960},{"_id":"source/_posts/wallpaper/wallpaper/wp_006.jpg","hash":"9b4651047219b6ca1ebbb2c8f28607a5a01fb05f","modified":1713625625851},{"_id":"source/gallery/wallpaper/wallpaper/wp_006.jpg","hash":"9b4651047219b6ca1ebbb2c8f28607a5a01fb05f","modified":1573807552000},{"_id":"source/gallery/wallpaper/wallpaper/wp_007.jpg","hash":"170d04da944be81d28d2684020cc4b987f281499","modified":1612698462091},{"_id":"source/_posts/wallpaper/wallpaper/wp_007.jpg","hash":"170d04da944be81d28d2684020cc4b987f281499","modified":1713625625851},{"_id":"source/_posts/wallpaper/wallpaper/wp_005.jpg","hash":"8a87df6b8c4a0736445536afeeb02e1a05ac5491","modified":1713625625843},{"_id":"source/gallery/wallpaper/wallpaper/wp_005.jpg","hash":"8a87df6b8c4a0736445536afeeb02e1a05ac5491","modified":1573814446000},{"_id":"source/_posts/wallpaper/wallpaper/wp_001.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1713625625803},{"_id":"source/_posts/note/general/recording/001_wp.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1713620067293},{"_id":"source/gallery/wallpaper/wallpaper/wp_001.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1709956866582},{"_id":"source/_posts/wallpaper/wallpaper/wp_004.png","hash":"717cffe1ceb9244c92ec26638ed865a330376c51","modified":1713625625835},{"_id":"source/gallery/wallpaper/wallpaper/wp_004.png","hash":"717cffe1ceb9244c92ec26638ed865a330376c51","modified":1621688637086},{"_id":"source/_posts/wallpaper/wallpaper/wp_003.png","hash":"24153005f64787a4babefc13093aefbcdd2b0c58","modified":1713625625827},{"_id":"source/gallery/wallpaper/wallpaper/wp_003.png","hash":"24153005f64787a4babefc13093aefbcdd2b0c58","modified":1701599341744},{"_id":"source/_posts/wallpaper/wallpaper/wp_002.png","hash":"198e5aaeae033fcc997475bfdd98b4ed18e9c45a","modified":1713625625819},{"_id":"source/gallery/wallpaper/wallpaper/wp_002.png","hash":"198e5aaeae033fcc997475bfdd98b4ed18e9c45a","modified":1593155449884},{"_id":"public/gallery/wallpaper/wallpaper.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1713625905235},{"_id":"public/resume.html","hash":"5584aff21f694e1b952b797b96892dbf867c66b5","modified":1713627782566},{"_id":"public/gallery/index.html","hash":"7aad7d23f0044425ff4c773bf213b95b3688ca0d","modified":1713679935140},{"_id":"public/gallery/job/index.html","hash":"4478447e7e26828459b8f6b1c9880dff29565736","modified":1713679935140},{"_id":"public/2024/04/20/note/professional/convTranspose2d/convTranspose2d/index.html","hash":"ebfad5ff3fd143f7a6c02ceea8f46283f6971d41","modified":1713679935140},{"_id":"public/2024/04/20/note/general/tutorial_linux/index.html","hash":"88d833955bf7a8c2f7cc46e3b24677b38a304222","modified":1713679935140},{"_id":"public/2024/04/16/note/general/recording/index.html","hash":"b301921668f7ecbd1e6743e83621c1c3b54fc873","modified":1713679935140},{"_id":"public/2023/04/19/wallpaper/wallpaper/index.html","hash":"fa8fbc3f1000842d432aef4cd264c6c9e6da5742","modified":1713626158969},{"_id":"public/archives/index.html","hash":"7e5b1d95a4ab434e9b1c3a6a6461d1d0486b3fae","modified":1713679935140},{"_id":"public/archives/2023/index.html","hash":"13f56e64c7e24922bcf89d5c491dbce845bfc163","modified":1713626158969},{"_id":"public/archives/2023/04/index.html","hash":"13f56e64c7e24922bcf89d5c491dbce845bfc163","modified":1713626158969},{"_id":"public/archives/2024/index.html","hash":"7e5b1d95a4ab434e9b1c3a6a6461d1d0486b3fae","modified":1713679935140},{"_id":"public/archives/2024/04/index.html","hash":"7e5b1d95a4ab434e9b1c3a6a6461d1d0486b3fae","modified":1713679935140},{"_id":"public/categories/Note/index.html","hash":"4623753cb9b5379008040a65f916d1aad074d858","modified":1713679935140},{"_id":"public/index.html","hash":"e4b3f03e8e9a3efa088260ac94a1ad4ad507ff97","modified":1713679935140},{"_id":"public/tags/dxm-recording/index.html","hash":"fb47e4f70b0ae4834eecfa7130104e9d6d93e72d","modified":1713679935140},{"_id":"public/tags/conv2d/index.html","hash":"6e3d58a000ef76f243d7cb10947ed0fc5b612f74","modified":1713679935140},{"_id":"public/tags/convTranspose2d/index.html","hash":"7a0e26d67bab78677eb516c06d17d21e3114f05b","modified":1713679935140},{"_id":"public/tags/Linux/index.html","hash":"8ea14ee9341daa7c2789885e48a19df7555f4a67","modified":1713679935140},{"_id":"public/tags/Vim/index.html","hash":"6eebb8532381df2d379d02cd63cbbc166837d271","modified":1713679935140},{"_id":"public/tags/Git/index.html","hash":"a729423fb729d94b66fc4de01beca7e06907153c","modified":1713679935140},{"_id":"public/icons/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1713625905235},{"_id":"public/icons/favicon.ico","hash":"fb79fb50e5a9da722f4de142a45c996ef437476d","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Black.woff2","hash":"36dd174e41242ff6318083409f7e6c700b25eba2","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Bold.woff2","hash":"9074123ec9d4d6a7e21c2bee3f0110ca9a73733d","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Light.woff2","hash":"df835660087fc7421a7667d8b68d759e0e1dbbf8","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Medium.woff2","hash":"9f358fd5f441565282b54e8dc072a7d68f71a2fc","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Regular.woff2","hash":"a18bcf95ada923da31f176137b8add02b0ba60f3","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Thin.woff2","hash":"0592332e221316fd8331110568df461e87689cca","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Black.woff","hash":"100a2d03d89a0e3e027a1500e4f4d715d1ed52a0","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-BlackItalic.woff","hash":"d2f8acc7e66ff51cc180bd998056e68dec30b8c6","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-BlackItalic.woff2","hash":"45dc6a6ae29b2522ac98fc130d300d1c3ceee9b4","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Bold.woff","hash":"274d0176d3b2e324111d0f836625960bdf24a29a","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-BoldItalic.woff","hash":"83739a927323a1c00a5e61ef6da84fff9e15fbc8","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-BoldItalic.woff2","hash":"99eaed1b19b50aeb3866d9ce568c290d15c965fb","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Light.woff","hash":"d6d654d36c6cf9053675860d00125d6c543560d8","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-LightItalic.woff","hash":"184f1fc46df99866d5dbe03b57f3f6d9b9981ea0","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-LightItalic.woff2","hash":"d72aa4d470b5923b3f614dd8ca25fd230dda8206","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Medium.woff","hash":"d3564215ac8f29bbf8c3d0602e1299ebcbe26ea9","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-MediumItalic.woff","hash":"b1afeefecbee33ad50452ce3f728dfcf781c9d49","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-MediumItalic.woff2","hash":"2fbd77f1d63c3d339167aa754e716451d129e23f","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Regular.woff","hash":"db6450746e5df1eb0636bc84f21aae94e1cafea4","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-RegularItalic.woff","hash":"f3c32fd38c2f5fe34e54bdab2f238e469f48501a","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-RegularItalic.woff2","hash":"bd9360a27d99a093c2f06857c21fd6e98b57a8c0","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-Thin.woff","hash":"2d1c0c4d3ff8f91941499790d4fd63866e7c4852","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-ThinItalic.woff","hash":"ea71e1a7f20df5de8048e06c70d0b756b83f867e","modified":1713625905235},{"_id":"public/fonts/roboto/Roboto-ThinItalic.woff2","hash":"cf2e6e6e462a4ff1c980d2c0fdc7b9675a30c82b","modified":1713625905235},{"_id":"public/css/iconfont.css","hash":"a8d1c687062f7f2adbdb5e4bdd8b53107047e23a","modified":1713625905235},{"_id":"public/css/main.css","hash":"d063752e4b7ebdae407436daa696bb1235fa6cc1","modified":1713625905235},{"_id":"public/css/mdui.min.v0.4.3.css","hash":"7356f5d95c9d90254ea074ecaecae24e6a5a124e","modified":1713625905235},{"_id":"public/js/mdui.min.v0.4.3.js","hash":"f64fd49e8cc1bb0679dd00cd1f11e9d111aac826","modified":1713625905235},{"_id":"public/js/mdui.min.v1.0.0.js","hash":"178ecc7437f1ec342762b0da74cbde3dd10342cd","modified":1713625905235},{"_id":"public/js/meadow.js","hash":"3fdfab667c0697354fc1ef96f6bc89d7331e404c","modified":1713625905235},{"_id":"public/css/mdui.min.v1.0.0.css","hash":"5da28cd08e3bd4f759ee947e7e302e35a53831c2","modified":1713625905235},{"_id":"public/resume/001.jpg","hash":"8ed37027997b8288442bc04640394dde6e66c6a1","modified":1713625905235},{"_id":"public/js/mdui.min.v0.4.3.js.map","hash":"7a92572e30f7b9bd09350efb04fd21f7b6230177","modified":1713625905235},{"_id":"public/js/mdui.min.v1.0.0.js.map","hash":"29dbca6a99d7798fb46dcec4c9632e5c0ead4319","modified":1713625905235},{"_id":"public/css/mdui.min.v0.4.3.css.map","hash":"925eb00f83a5d7b19304a426ea574dd4de69acd1","modified":1713625905235},{"_id":"public/css/mdui.min.v1.0.0.css.map","hash":"96acfc653f0205b4127c309bab1c1d8f5180fd77","modified":1713625905235},{"_id":"public/2024/04/20/note/general/tutorial_linux/001.png","hash":"a6afa485770c5682245b17769333f6193e15b46c","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_008.jpg","hash":"9fc7ec6b30ee34c471da20887dd1cadb5b3c63c6","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_008.jpg","hash":"9fc7ec6b30ee34c471da20887dd1cadb5b3c63c6","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_006.jpg","hash":"9b4651047219b6ca1ebbb2c8f28607a5a01fb05f","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_006.jpg","hash":"9b4651047219b6ca1ebbb2c8f28607a5a01fb05f","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_007.jpg","hash":"170d04da944be81d28d2684020cc4b987f281499","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_007.jpg","hash":"170d04da944be81d28d2684020cc4b987f281499","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_005.jpg","hash":"8a87df6b8c4a0736445536afeeb02e1a05ac5491","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_005.jpg","hash":"8a87df6b8c4a0736445536afeeb02e1a05ac5491","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_001.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_001.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1713625905235},{"_id":"public/2024/04/16/note/general/recording/001_wp.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_004.png","hash":"717cffe1ceb9244c92ec26638ed865a330376c51","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_004.png","hash":"717cffe1ceb9244c92ec26638ed865a330376c51","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_003.png","hash":"24153005f64787a4babefc13093aefbcdd2b0c58","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_003.png","hash":"24153005f64787a4babefc13093aefbcdd2b0c58","modified":1713625905235},{"_id":"public/gallery/wallpaper/wallpaper/wp_002.png","hash":"198e5aaeae033fcc997475bfdd98b4ed18e9c45a","modified":1713625905235},{"_id":"public/2023/04/19/wallpaper/wallpaper/wp_002.png","hash":"198e5aaeae033fcc997475bfdd98b4ed18e9c45a","modified":1713625905235},{"_id":"source/gallery/wallpaper/index.md","hash":"062381227d655ee66abf3860e243c9527c56439e","modified":1713627777301},{"_id":"source/gallery/wallpaper/wp_008.jpg","hash":"9fc7ec6b30ee34c471da20887dd1cadb5b3c63c6","modified":1612698684960},{"_id":"source/gallery/wallpaper/wp_006.jpg","hash":"9b4651047219b6ca1ebbb2c8f28607a5a01fb05f","modified":1573807552000},{"_id":"source/gallery/wallpaper/wp_007.jpg","hash":"170d04da944be81d28d2684020cc4b987f281499","modified":1612698462091},{"_id":"source/gallery/wallpaper/wp_005.jpg","hash":"8a87df6b8c4a0736445536afeeb02e1a05ac5491","modified":1573814446000},{"_id":"source/gallery/wallpaper/wp_001.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1709956866582},{"_id":"source/gallery/wallpaper/wp_004.png","hash":"717cffe1ceb9244c92ec26638ed865a330376c51","modified":1621688637086},{"_id":"source/gallery/wallpaper/wp_003.png","hash":"24153005f64787a4babefc13093aefbcdd2b0c58","modified":1701599341744},{"_id":"source/gallery/wallpaper/wp_002.png","hash":"198e5aaeae033fcc997475bfdd98b4ed18e9c45a","modified":1593155449884},{"_id":"public/gallery/wallpaper/index.html","hash":"fecb5ca80077b8a42dd162dd850f930a1974bb6e","modified":1713679935140},{"_id":"public/gallery/wallpaper/wp_008.jpg","hash":"9fc7ec6b30ee34c471da20887dd1cadb5b3c63c6","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_006.jpg","hash":"9b4651047219b6ca1ebbb2c8f28607a5a01fb05f","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_007.jpg","hash":"170d04da944be81d28d2684020cc4b987f281499","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_005.jpg","hash":"8a87df6b8c4a0736445536afeeb02e1a05ac5491","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_001.png","hash":"35bc4d504d1400fe2a83a6c9a98fcdb108f601f6","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_004.png","hash":"717cffe1ceb9244c92ec26638ed865a330376c51","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_003.png","hash":"24153005f64787a4babefc13093aefbcdd2b0c58","modified":1713627782566},{"_id":"public/gallery/wallpaper/wp_002.png","hash":"198e5aaeae033fcc997475bfdd98b4ed18e9c45a","modified":1713627782566},{"_id":"source/resume/resume.md","hash":"bddc2ed5a7fa96f9a5a35e7ad45f88c4af41a514","modified":1713628148370},{"_id":"source/resume/index.md","hash":"39c6be9adc97551eb9d5110cfc82080269bc281c","modified":1713629526187},{"_id":"public/resume/index.html","hash":"25cec200e3d72e7d5062996bf4ee50754e8720b2","modified":1713679935140},{"_id":"themes/Meadow/source/fancybox/.gitignore","hash":"7ca689ee76b1ec3f8b20acdfae66dc26d6daa935","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/bower.json","hash":"c61c3e8237a3a477c6acc2e5ae0fc250fb1a45b1","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/README.md","hash":"1240fece19c94fe5ed42e07e7c5f5cc70c80fe00","modified":1713677668785},{"_id":"themes/Meadow/source/fancybox/gulpfile.js","hash":"2e89df2547aeb2051dc533d3149fb0d248e8bd59","modified":1677132035000},{"_id":"themes/Meadow/source/js/wrapImage.js","hash":"0a79caafd3dc09de2cb82b33aa6554561aa878e3","modified":1713678025780},{"_id":"themes/Meadow/source/fancybox/package.json","hash":"b264c2e3bae8ba6f96f9a30be68521d8793d6cae","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/dist/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/dist/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/css/core.css","hash":"6ef6c892ff82025f43d65ca2cea153a967d1d2f8","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/css/slideshow.css","hash":"9de2d1153325c43775ab22d5ee738ec1cd343c2c","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/.github/ISSUE_TEMPLATE/question.md","hash":"b2c7bf433a6b94f3daa3b54b8c92c6cf93c15557","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/css/fullscreen.css","hash":"6f22c856c83b1b41549722735d2676d39fa1614d","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/css/share.css","hash":"4c68819bcec091ba43bc1dcdf12777c425479153","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/css/thumbs.css","hash":"3673ba1f616738f588fe887863846a958343b970","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/hash.js","hash":"07f62c45414ee823557c4304a9fb729f6b6554b7","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/fullscreen.js","hash":"b1aca48211545f0c7432fc78fbb81ec80f328be8","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/share.js","hash":"b1fb4502d080ed611aeafb4753f2a2fab1c4cfa6","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/slideshow.js","hash":"78211955e523b69ff7f5cdd43e44fc9b191a3abc","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/media.js","hash":"16aad9f298d85b865f161e37da4d0494fef3a496","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/guestures.js","hash":"e5fc027422110519b3d9dd7eac689d0fd08764da","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/thumbs.js","hash":"1dacca749bad458211a886d3bcbbeb4600aaceac","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/wheel.js","hash":"90f018763692796a855b986ad053071ea48dcca4","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/dist/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/docs/index.html","hash":"e6936b8b22a7cfd1927398d1d7b694cc23d94f15","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/src/js/core.js","hash":"60cedf446953553e60f776cb9277a122eace3942","modified":1677132035000},{"_id":"themes/Meadow/source/fancybox/dist/jquery.fancybox.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1677132035000},{"_id":"public/js/wrapImage.js","hash":"0a79caafd3dc09de2cb82b33aa6554561aa878e3","modified":1713678396641},{"_id":"public/fancybox/README.html","hash":"d07d55b447143e1039f5f259f697818f25fe29f1","modified":1713678396641},{"_id":"public/fancybox/gulpfile.js","hash":"2e89df2547aeb2051dc533d3149fb0d248e8bd59","modified":1713678396641},{"_id":"public/fancybox/dist/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1713678396641},{"_id":"public/fancybox/package.json","hash":"294e08628cec1eb11f7bcd51bb39d3c4cc7f03a8","modified":1713678396641},{"_id":"public/fancybox/dist/jquery.fancybox.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1713678396641},{"_id":"public/fancybox/dist/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1713678396641},{"_id":"public/fancybox/docs/index.html","hash":"e6936b8b22a7cfd1927398d1d7b694cc23d94f15","modified":1713678396641},{"_id":"public/fancybox/src/css/core.css","hash":"6ef6c892ff82025f43d65ca2cea153a967d1d2f8","modified":1713678396641},{"_id":"public/fancybox/src/css/slideshow.css","hash":"9de2d1153325c43775ab22d5ee738ec1cd343c2c","modified":1713678396641},{"_id":"public/fancybox/src/css/fullscreen.css","hash":"6f22c856c83b1b41549722735d2676d39fa1614d","modified":1713678396641},{"_id":"public/fancybox/src/css/share.css","hash":"4c68819bcec091ba43bc1dcdf12777c425479153","modified":1713678396641},{"_id":"public/fancybox/dist/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1713678396641},{"_id":"public/fancybox/src/css/thumbs.css","hash":"3673ba1f616738f588fe887863846a958343b970","modified":1713678396641},{"_id":"public/fancybox/src/js/guestures.js","hash":"e5fc027422110519b3d9dd7eac689d0fd08764da","modified":1713678396641},{"_id":"public/fancybox/src/js/core.js","hash":"60cedf446953553e60f776cb9277a122eace3942","modified":1713678396641},{"_id":"public/fancybox/src/js/fullscreen.js","hash":"b1aca48211545f0c7432fc78fbb81ec80f328be8","modified":1713678396641},{"_id":"public/fancybox/src/js/hash.js","hash":"07f62c45414ee823557c4304a9fb729f6b6554b7","modified":1713678396641},{"_id":"public/fancybox/src/js/share.js","hash":"b1fb4502d080ed611aeafb4753f2a2fab1c4cfa6","modified":1713678396641},{"_id":"public/fancybox/src/js/slideshow.js","hash":"78211955e523b69ff7f5cdd43e44fc9b191a3abc","modified":1713678396641},{"_id":"public/fancybox/src/js/media.js","hash":"16aad9f298d85b865f161e37da4d0494fef3a496","modified":1713678396641},{"_id":"public/fancybox/src/js/thumbs.js","hash":"1dacca749bad458211a886d3bcbbeb4600aaceac","modified":1713678396641},{"_id":"public/fancybox/bower.json","hash":"b56f8d54336de6ce1aaba2717de28cced311e57b","modified":1713678396641},{"_id":"public/fancybox/src/js/wheel.js","hash":"90f018763692796a855b986ad053071ea48dcca4","modified":1713678396641},{"_id":"themes/Meadow/source/js/fancybox/.gitignore","hash":"7ca689ee76b1ec3f8b20acdfae66dc26d6daa935","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/README.md","hash":"1240fece19c94fe5ed42e07e7c5f5cc70c80fe00","modified":1713677668785},{"_id":"themes/Meadow/source/js/fancybox/bower.json","hash":"c61c3e8237a3a477c6acc2e5ae0fc250fb1a45b1","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/gulpfile.js","hash":"2e89df2547aeb2051dc533d3149fb0d248e8bd59","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/package.json","hash":"b264c2e3bae8ba6f96f9a30be68521d8793d6cae","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/css/core.css","hash":"6ef6c892ff82025f43d65ca2cea153a967d1d2f8","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/.github/ISSUE_TEMPLATE/question.md","hash":"b2c7bf433a6b94f3daa3b54b8c92c6cf93c15557","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/css/fullscreen.css","hash":"6f22c856c83b1b41549722735d2676d39fa1614d","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/css/share.css","hash":"4c68819bcec091ba43bc1dcdf12777c425479153","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/css/slideshow.css","hash":"9de2d1153325c43775ab22d5ee738ec1cd343c2c","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/css/thumbs.css","hash":"3673ba1f616738f588fe887863846a958343b970","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/fullscreen.js","hash":"b1aca48211545f0c7432fc78fbb81ec80f328be8","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/guestures.js","hash":"e5fc027422110519b3d9dd7eac689d0fd08764da","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/hash.js","hash":"07f62c45414ee823557c4304a9fb729f6b6554b7","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/media.js","hash":"16aad9f298d85b865f161e37da4d0494fef3a496","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/share.js","hash":"b1fb4502d080ed611aeafb4753f2a2fab1c4cfa6","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/slideshow.js","hash":"78211955e523b69ff7f5cdd43e44fc9b191a3abc","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/thumbs.js","hash":"1dacca749bad458211a886d3bcbbeb4600aaceac","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/wheel.js","hash":"90f018763692796a855b986ad053071ea48dcca4","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/docs/index.html","hash":"e6936b8b22a7cfd1927398d1d7b694cc23d94f15","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/src/js/core.js","hash":"60cedf446953553e60f776cb9277a122eace3942","modified":1677132035000},{"_id":"themes/Meadow/source/js/fancybox/dist/jquery.fancybox.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1677132035000},{"_id":"public/js/fancybox/README.html","hash":"d07d55b447143e1039f5f259f697818f25fe29f1","modified":1713678682513},{"_id":"public/js/fancybox/bower.json","hash":"b56f8d54336de6ce1aaba2717de28cced311e57b","modified":1713678682513},{"_id":"public/js/fancybox/package.json","hash":"294e08628cec1eb11f7bcd51bb39d3c4cc7f03a8","modified":1713678682513},{"_id":"public/js/fancybox/gulpfile.js","hash":"2e89df2547aeb2051dc533d3149fb0d248e8bd59","modified":1713678682513},{"_id":"public/js/fancybox/dist/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1713678682513},{"_id":"public/js/fancybox/dist/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1713678682513},{"_id":"public/js/fancybox/src/css/core.css","hash":"6ef6c892ff82025f43d65ca2cea153a967d1d2f8","modified":1713678682513},{"_id":"public/js/fancybox/src/css/fullscreen.css","hash":"6f22c856c83b1b41549722735d2676d39fa1614d","modified":1713678682513},{"_id":"public/js/fancybox/src/css/share.css","hash":"4c68819bcec091ba43bc1dcdf12777c425479153","modified":1713678682513},{"_id":"public/js/fancybox/src/css/slideshow.css","hash":"9de2d1153325c43775ab22d5ee738ec1cd343c2c","modified":1713678682513},{"_id":"public/js/fancybox/src/css/thumbs.css","hash":"3673ba1f616738f588fe887863846a958343b970","modified":1713678682513},{"_id":"public/js/fancybox/docs/index.html","hash":"e6936b8b22a7cfd1927398d1d7b694cc23d94f15","modified":1713678682513},{"_id":"public/js/fancybox/src/js/fullscreen.js","hash":"b1aca48211545f0c7432fc78fbb81ec80f328be8","modified":1713678682513},{"_id":"public/js/fancybox/src/js/guestures.js","hash":"e5fc027422110519b3d9dd7eac689d0fd08764da","modified":1713678682513},{"_id":"public/js/fancybox/src/js/hash.js","hash":"07f62c45414ee823557c4304a9fb729f6b6554b7","modified":1713678682513},{"_id":"public/js/fancybox/src/js/media.js","hash":"16aad9f298d85b865f161e37da4d0494fef3a496","modified":1713678682513},{"_id":"public/js/fancybox/src/js/core.js","hash":"60cedf446953553e60f776cb9277a122eace3942","modified":1713678682513},{"_id":"public/js/fancybox/src/js/share.js","hash":"b1fb4502d080ed611aeafb4753f2a2fab1c4cfa6","modified":1713678682513},{"_id":"public/js/fancybox/src/js/slideshow.js","hash":"78211955e523b69ff7f5cdd43e44fc9b191a3abc","modified":1713678682513},{"_id":"public/js/fancybox/src/js/thumbs.js","hash":"1dacca749bad458211a886d3bcbbeb4600aaceac","modified":1713678682513},{"_id":"public/js/fancybox/src/js/wheel.js","hash":"90f018763692796a855b986ad053071ea48dcca4","modified":1713678682513},{"_id":"public/js/fancybox/dist/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1713678682513},{"_id":"public/js/fancybox/dist/jquery.fancybox.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1713678682513}],"Category":[{"name":"Note","_id":"clv88mb07000787uf1qus9u6m"}],"Data":[],"Page":[{"title":"Gallery","date":"2023-04-18T16:00:00.000Z","layout":"page","_content":"\nWelcome to our gallery. Explore our collections:\n\n- [Wallpaper Gallery](/gallery/wallpaper/)\n- [Job Opportunities](/gallery/job/)\n","source":"gallery/index.md","raw":"---\ntitle: Gallery\ndate: 2023-04-19\nlayout: page\n---\n\nWelcome to our gallery. Explore our collections:\n\n- [Wallpaper Gallery](/gallery/wallpaper/)\n- [Job Opportunities](/gallery/job/)\n","updated":"2024-04-20T13:08:48.705Z","path":"gallery/index.html","comments":1,"_id":"clv88mb04000287ufdl1i4yq3","content":"<p>Welcome to our gallery. Explore our collections:</p>\n<ul>\n<li><a href=\"/gallery/wallpaper/\">Wallpaper Gallery</a></li>\n<li><a href=\"/gallery/job/\">Job Opportunities</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to our gallery. Explore our collections:</p>\n<ul>\n<li><a href=\"/gallery/wallpaper/\">Wallpaper Gallery</a></li>\n<li><a href=\"/gallery/job/\">Job Opportunities</a></li>\n</ul>\n"},{"title":"Job Opportunities","date":"2023-04-18T16:00:00.000Z","layout":"page","_content":"\nExplore exciting job opportunities.\n\n![Job Image](/path/to/job_image.jpg)  # 确保替换为实际的图片路径\n","source":"gallery/job/index.md","raw":"---\ntitle: Job Opportunities\ndate: 2023-04-19\nlayout: page\n---\n\nExplore exciting job opportunities.\n\n![Job Image](/path/to/job_image.jpg)  # 确保替换为实际的图片路径\n","updated":"2024-04-20T13:08:48.705Z","path":"gallery/job/index.html","comments":1,"_id":"clv88mb05000387uf1y0fe9t9","content":"<p>Explore exciting job opportunities.</p>\n<p><img src=\"/path/to/job_image.jpg\" alt=\"Job Image\">  # 确保替换为实际的图片路径</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Explore exciting job opportunities.</p>\n<p><img src=\"/path/to/job_image.jpg\" alt=\"Job Image\">  # 确保替换为实际的图片路径</p>\n"},{"title":"Gallery","date":"2023-04-18T16:00:00.000Z","layout":"page","_content":"\n<style>\nimg {\n    max-width: 100%;\n    height: auto;\n}\n</style>\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    使一颗心免于哀伤\n</div>\n\n![wp_001](gallery/wallpaper/wp_001.png)\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    我什么都做不到.jpg\n</div>\n\n![wp_002](gallery/wallpaper/wp_002.png)\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    雷电将军\n</div>\n\n![wp_003](gallery/wallpaper/wp_003.png)\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    太阳系\n</div>\n\n![wp_008](gallery/wallpaper/wp_008.jpg)\n","source":"gallery/wallpaper/index.md","raw":"---\ntitle: Gallery\ndate: 2023-04-19\nlayout: page\n---\n\n<style>\nimg {\n    max-width: 100%;\n    height: auto;\n}\n</style>\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    使一颗心免于哀伤\n</div>\n\n![wp_001](gallery/wallpaper/wp_001.png)\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    我什么都做不到.jpg\n</div>\n\n![wp_002](gallery/wallpaper/wp_002.png)\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    雷电将军\n</div>\n\n![wp_003](gallery/wallpaper/wp_003.png)\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    太阳系\n</div>\n\n![wp_008](gallery/wallpaper/wp_008.jpg)\n","updated":"2024-04-20T15:42:57.301Z","path":"gallery/wallpaper/index.html","_id":"clv894gum000021uf8s4t2rfj","comments":1,"content":"<style>\nimg {\n    max-width: 100%;\n    height: auto;\n}\n</style>\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    使一颗心免于哀伤\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_001.png\" alt=\"wp_001\"></p>\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    我什么都做不到.jpg\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_002.png\" alt=\"wp_002\"></p>\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    雷电将军\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_003.png\" alt=\"wp_003\"></p>\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    太阳系\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_008.jpg\" alt=\"wp_008\"></p>\n","site":{"data":{}},"excerpt":"","more":"<style>\nimg {\n    max-width: 100%;\n    height: auto;\n}\n</style>\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    使一颗心免于哀伤\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_001.png\" alt=\"wp_001\"></p>\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    我什么都做不到.jpg\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_002.png\" alt=\"wp_002\"></p>\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    雷电将军\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_003.png\" alt=\"wp_003\"></p>\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    太阳系\n</div>\n\n<p><img src=\"/gallery/wallpaper/wp_008.jpg\" alt=\"wp_008\"></p>\n"},{"date":"2024-04-19T15:49:45.000Z","layout":"page","tags":null,"_content":"\n<div style=\"width: 80%; margin: auto; text-align: left;\">\n  <h1 style=\"text-align: center;\">个人简历</h1>\n  <div style=\"display: flex; align-items: center; padding-top: 10px; padding-bottom: 10px;\">\n    <img src=\"/resume/001.jpg\" style=\"width: 160px; height: 160px;\">\n    <div style=\"margin-left: 20px;\">\n      <h1 style=\"font-size: 24px; margin-top: 5px; margin-bottom: 20px;\">姓名：杜根</h1>\n      <div style=\"display: flex; flex-wrap: wrap;\">\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">出生年月：1998.5.7</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">联系电话：18642856913</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 10px;\">地区：杭州市</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 0;\">邮箱：1695963186@qq.com</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>教育背景</h2>\n    <div style=\"margin-left: 20px;\">\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2020.9-2023.4</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">南京理工大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">机械工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">硕士学位</span>\n      </div>\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 5px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2016.9-2020.6</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">大连交通大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">车辆工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">学士学位</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>求职意向</h2>\n    <div style=\"margin-left: 20px;\">\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">工作性质：全职</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标地点：杭州</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">求职岗位：算子开发工程师</span>\n    </div>\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">到岗时间：月内到岗</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标薪资：面议</span>\n    </div>\n  </div>\n</div>\n\n## 专业技能\n\n- **C++**：熟悉 C++ 语法和标准库，具备设计和实现复杂数据结构和算法的能力。\n- **PyTorch**：熟悉 PyTorch 算子的底层实现，具备 convTranspose2d、resize、rotate 等算子在自研 NPU 平台上的移植和优化经验。\n- **Linux 系统和命令行工具**：熟练使用 Linux 系统和常用命令行工具进行开发和调试工作，包括 vim、grep、shell script 等。\n- **Git**：熟悉 Git Flow 工作流，熟练使用 Git 进行版本控制，能在团队中高效地进行协作开发。\n- **GDB**：熟练使用 GDB 调试工具，能进行高效的 debug 和 root cause 定位，快速解决软件问题。\n\n## 工作经验\n\n- **理想汽车有限公司** （2023年4月 - 至今）\n  - 职位：算子研发工程师\n  - 主要职责：\n    - 负责高性能算子的设计、开发和优化，确保其在 NPU 平台上的高效运行。\n    - 对算子进行深度性能分析，定位并解决性能瓶颈，有效提升系统运行效率。\n\n## 项目经验\n\n### 项目一：开发和优化 convTranspose2d 算子\n\n- **项目描述**：针对 FPN、UniBEV 等网络中图像上采样需求，在自研 NPU 平台上实现和优化 convTranspose2d 算子。\n- 主要职责：\n  - **算子开发**：负责在自研 NPU 平台上开发 convTranspose2d 算子，实现图像的上采样功能。\n  - **性能优化**：通过拆分权重的方式，将 convTranspose2d 拆分为多个 conv2d 计算。这种优化策略在 2 倍上采样的情况下，成功将激活数据内存消耗降低为 input 膨胀方案的 25%，并提升了近 3 倍的计算性能。\n\n### 项目二：开发和优化 resize、rotate 算子\n\n- **项目描述**：支持 UniBEV、BEVFusion 网络中的图像放缩、旋转功能，实现 bilinear、nearest mode 的 resize、rotate 算子。\n- 主要职责：\n  - **算子开发**：负责在自研 NPU 上开发 resize、rotate 算子，实现图像的放缩、旋转功能。\n  - **性能优化**：通过采用 sync variable、pingpong buffer 构建 pipeline，成功地实现了接近理论性能的 90% 。\n  - **精度分析**：分析 IPU 模块在 normalize + denormalize 过程中的精度损失问题，定位并排查 fp24 精度计算不足问题。\n\n## 个人评价\n\n- **学习能力**：热衷于技术挑战，能快速学习并应用新知识。\n- **独立工作能力**：能独立完成任务，具备出色的时间管理和项目管理能力。\n- **团队协作**：具备良好的团队协作和沟通能力，性格开朗。","source":"resume/index.md","raw":"---\ndate: 2024-04-19 23:49:45\nlayout: page\ntags:\n---\n\n<div style=\"width: 80%; margin: auto; text-align: left;\">\n  <h1 style=\"text-align: center;\">个人简历</h1>\n  <div style=\"display: flex; align-items: center; padding-top: 10px; padding-bottom: 10px;\">\n    <img src=\"/resume/001.jpg\" style=\"width: 160px; height: 160px;\">\n    <div style=\"margin-left: 20px;\">\n      <h1 style=\"font-size: 24px; margin-top: 5px; margin-bottom: 20px;\">姓名：杜根</h1>\n      <div style=\"display: flex; flex-wrap: wrap;\">\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">出生年月：1998.5.7</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">联系电话：18642856913</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 10px;\">地区：杭州市</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 0;\">邮箱：1695963186@qq.com</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>教育背景</h2>\n    <div style=\"margin-left: 20px;\">\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2020.9-2023.4</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">南京理工大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">机械工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">硕士学位</span>\n      </div>\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 5px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2016.9-2020.6</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">大连交通大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">车辆工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">学士学位</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>求职意向</h2>\n    <div style=\"margin-left: 20px;\">\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">工作性质：全职</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标地点：杭州</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">求职岗位：算子开发工程师</span>\n    </div>\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">到岗时间：月内到岗</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标薪资：面议</span>\n    </div>\n  </div>\n</div>\n\n## 专业技能\n\n- **C++**：熟悉 C++ 语法和标准库，具备设计和实现复杂数据结构和算法的能力。\n- **PyTorch**：熟悉 PyTorch 算子的底层实现，具备 convTranspose2d、resize、rotate 等算子在自研 NPU 平台上的移植和优化经验。\n- **Linux 系统和命令行工具**：熟练使用 Linux 系统和常用命令行工具进行开发和调试工作，包括 vim、grep、shell script 等。\n- **Git**：熟悉 Git Flow 工作流，熟练使用 Git 进行版本控制，能在团队中高效地进行协作开发。\n- **GDB**：熟练使用 GDB 调试工具，能进行高效的 debug 和 root cause 定位，快速解决软件问题。\n\n## 工作经验\n\n- **理想汽车有限公司** （2023年4月 - 至今）\n  - 职位：算子研发工程师\n  - 主要职责：\n    - 负责高性能算子的设计、开发和优化，确保其在 NPU 平台上的高效运行。\n    - 对算子进行深度性能分析，定位并解决性能瓶颈，有效提升系统运行效率。\n\n## 项目经验\n\n### 项目一：开发和优化 convTranspose2d 算子\n\n- **项目描述**：针对 FPN、UniBEV 等网络中图像上采样需求，在自研 NPU 平台上实现和优化 convTranspose2d 算子。\n- 主要职责：\n  - **算子开发**：负责在自研 NPU 平台上开发 convTranspose2d 算子，实现图像的上采样功能。\n  - **性能优化**：通过拆分权重的方式，将 convTranspose2d 拆分为多个 conv2d 计算。这种优化策略在 2 倍上采样的情况下，成功将激活数据内存消耗降低为 input 膨胀方案的 25%，并提升了近 3 倍的计算性能。\n\n### 项目二：开发和优化 resize、rotate 算子\n\n- **项目描述**：支持 UniBEV、BEVFusion 网络中的图像放缩、旋转功能，实现 bilinear、nearest mode 的 resize、rotate 算子。\n- 主要职责：\n  - **算子开发**：负责在自研 NPU 上开发 resize、rotate 算子，实现图像的放缩、旋转功能。\n  - **性能优化**：通过采用 sync variable、pingpong buffer 构建 pipeline，成功地实现了接近理论性能的 90% 。\n  - **精度分析**：分析 IPU 模块在 normalize + denormalize 过程中的精度损失问题，定位并排查 fp24 精度计算不足问题。\n\n## 个人评价\n\n- **学习能力**：热衷于技术挑战，能快速学习并应用新知识。\n- **独立工作能力**：能独立完成任务，具备出色的时间管理和项目管理能力。\n- **团队协作**：具备良好的团队协作和沟通能力，性格开朗。","updated":"2024-04-20T16:12:06.187Z","path":"resume/index.html","_id":"clv89z1ch00002wufdpuf5vlr","title":"","comments":1,"content":"<div style=\"width: 80%; margin: auto; text-align: left;\">\n  <h1 style=\"text-align: center;\">个人简历</h1>\n  <div style=\"display: flex; align-items: center; padding-top: 10px; padding-bottom: 10px;\">\n    <img src=\"/resume/001.jpg\" style=\"width: 160px; height: 160px;\">\n    <div style=\"margin-left: 20px;\">\n      <h1 style=\"font-size: 24px; margin-top: 5px; margin-bottom: 20px;\">姓名：杜根</h1>\n      <div style=\"display: flex; flex-wrap: wrap;\">\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">出生年月：1998.5.7</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">联系电话：18642856913</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 10px;\">地区：杭州市</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 0;\">邮箱：1695963186@qq.com</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>教育背景</h2>\n    <div style=\"margin-left: 20px;\">\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2020.9-2023.4</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">南京理工大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">机械工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">硕士学位</span>\n      </div>\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 5px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2016.9-2020.6</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">大连交通大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">车辆工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">学士学位</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>求职意向</h2>\n    <div style=\"margin-left: 20px;\">\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">工作性质：全职</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标地点：杭州</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">求职岗位：算子开发工程师</span>\n    </div>\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">到岗时间：月内到岗</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标薪资：面议</span>\n    </div>\n  </div>\n</div>\n\n<h2 id=\"专业技能\"><a href=\"#专业技能\" class=\"headerlink\" title=\"专业技能\"></a>专业技能</h2><ul>\n<li>**C++**：熟悉 C++ 语法和标准库，具备设计和实现复杂数据结构和算法的能力。</li>\n<li><strong>PyTorch</strong>：熟悉 PyTorch 算子的底层实现，具备 convTranspose2d、resize、rotate 等算子在自研 NPU 平台上的移植和优化经验。</li>\n<li><strong>Linux 系统和命令行工具</strong>：熟练使用 Linux 系统和常用命令行工具进行开发和调试工作，包括 vim、grep、shell script 等。</li>\n<li><strong>Git</strong>：熟悉 Git Flow 工作流，熟练使用 Git 进行版本控制，能在团队中高效地进行协作开发。</li>\n<li><strong>GDB</strong>：熟练使用 GDB 调试工具，能进行高效的 debug 和 root cause 定位，快速解决软件问题。</li>\n</ul>\n<h2 id=\"工作经验\"><a href=\"#工作经验\" class=\"headerlink\" title=\"工作经验\"></a>工作经验</h2><ul>\n<li><strong>理想汽车有限公司</strong> （2023年4月 - 至今）<ul>\n<li>职位：算子研发工程师</li>\n<li>主要职责：<ul>\n<li>负责高性能算子的设计、开发和优化，确保其在 NPU 平台上的高效运行。</li>\n<li>对算子进行深度性能分析，定位并解决性能瓶颈，有效提升系统运行效率。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\"项目经验\"></a>项目经验</h2><h3 id=\"项目一：开发和优化-convTranspose2d-算子\"><a href=\"#项目一：开发和优化-convTranspose2d-算子\" class=\"headerlink\" title=\"项目一：开发和优化 convTranspose2d 算子\"></a>项目一：开发和优化 convTranspose2d 算子</h3><ul>\n<li><strong>项目描述</strong>：针对 FPN、UniBEV 等网络中图像上采样需求，在自研 NPU 平台上实现和优化 convTranspose2d 算子。</li>\n<li>主要职责：<ul>\n<li><strong>算子开发</strong>：负责在自研 NPU 平台上开发 convTranspose2d 算子，实现图像的上采样功能。</li>\n<li><strong>性能优化</strong>：通过拆分权重的方式，将 convTranspose2d 拆分为多个 conv2d 计算。这种优化策略在 2 倍上采样的情况下，成功将激活数据内存消耗降低为 input 膨胀方案的 25%，并提升了近 3 倍的计算性能。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"项目二：开发和优化-resize、rotate-算子\"><a href=\"#项目二：开发和优化-resize、rotate-算子\" class=\"headerlink\" title=\"项目二：开发和优化 resize、rotate 算子\"></a>项目二：开发和优化 resize、rotate 算子</h3><ul>\n<li><strong>项目描述</strong>：支持 UniBEV、BEVFusion 网络中的图像放缩、旋转功能，实现 bilinear、nearest mode 的 resize、rotate 算子。</li>\n<li>主要职责：<ul>\n<li><strong>算子开发</strong>：负责在自研 NPU 上开发 resize、rotate 算子，实现图像的放缩、旋转功能。</li>\n<li><strong>性能优化</strong>：通过采用 sync variable、pingpong buffer 构建 pipeline，成功地实现了接近理论性能的 90% 。</li>\n<li><strong>精度分析</strong>：分析 IPU 模块在 normalize + denormalize 过程中的精度损失问题，定位并排查 fp24 精度计算不足问题。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"个人评价\"><a href=\"#个人评价\" class=\"headerlink\" title=\"个人评价\"></a>个人评价</h2><ul>\n<li><strong>学习能力</strong>：热衷于技术挑战，能快速学习并应用新知识。</li>\n<li><strong>独立工作能力</strong>：能独立完成任务，具备出色的时间管理和项目管理能力。</li>\n<li><strong>团队协作</strong>：具备良好的团队协作和沟通能力，性格开朗。</li>\n</ul>\n</div>","site":{"data":{}},"excerpt":"","more":"<div style=\"width: 80%; margin: auto; text-align: left;\">\n  <h1 style=\"text-align: center;\">个人简历</h1>\n  <div style=\"display: flex; align-items: center; padding-top: 10px; padding-bottom: 10px;\">\n    <img src=\"/resume/001.jpg\" style=\"width: 160px; height: 160px;\">\n    <div style=\"margin-left: 20px;\">\n      <h1 style=\"font-size: 24px; margin-top: 5px; margin-bottom: 20px;\">姓名：杜根</h1>\n      <div style=\"display: flex; flex-wrap: wrap;\">\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">出生年月：1998.5.7</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">联系电话：18642856913</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 10px;\">地区：杭州市</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 0;\">邮箱：1695963186@qq.com</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>教育背景</h2>\n    <div style=\"margin-left: 20px;\">\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2020.9-2023.4</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">南京理工大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">机械工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">硕士学位</span>\n      </div>\n      <div style=\"display: flex; flex-wrap: wrap; margin-top: 5px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">2016.9-2020.6</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">大连交通大学</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">车辆工程</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">学士学位</span>\n      </div>\n    </div>\n  </div>\n  <div style=\"margin-top: 20px;\">\n    <h2>求职意向</h2>\n    <div style=\"margin-left: 20px;\">\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">工作性质：全职</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标地点：杭州</span>\n        <span style=\"display: inline-block; width: 50%; margin-bottom: 5px;\">求职岗位：算子开发工程师</span>\n    </div>\n    <div style=\"display: flex; flex-wrap: wrap; margin-top: 10px;\">\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">到岗时间：月内到岗</span>\n        <span style=\"display: inline-block; width: 25%; margin-bottom: 5px;\">目标薪资：面议</span>\n    </div>\n  </div>\n</div>\n\n<h2 id=\"专业技能\"><a href=\"#专业技能\" class=\"headerlink\" title=\"专业技能\"></a>专业技能</h2><ul>\n<li>**C++**：熟悉 C++ 语法和标准库，具备设计和实现复杂数据结构和算法的能力。</li>\n<li><strong>PyTorch</strong>：熟悉 PyTorch 算子的底层实现，具备 convTranspose2d、resize、rotate 等算子在自研 NPU 平台上的移植和优化经验。</li>\n<li><strong>Linux 系统和命令行工具</strong>：熟练使用 Linux 系统和常用命令行工具进行开发和调试工作，包括 vim、grep、shell script 等。</li>\n<li><strong>Git</strong>：熟悉 Git Flow 工作流，熟练使用 Git 进行版本控制，能在团队中高效地进行协作开发。</li>\n<li><strong>GDB</strong>：熟练使用 GDB 调试工具，能进行高效的 debug 和 root cause 定位，快速解决软件问题。</li>\n</ul>\n<h2 id=\"工作经验\"><a href=\"#工作经验\" class=\"headerlink\" title=\"工作经验\"></a>工作经验</h2><ul>\n<li><strong>理想汽车有限公司</strong> （2023年4月 - 至今）<ul>\n<li>职位：算子研发工程师</li>\n<li>主要职责：<ul>\n<li>负责高性能算子的设计、开发和优化，确保其在 NPU 平台上的高效运行。</li>\n<li>对算子进行深度性能分析，定位并解决性能瓶颈，有效提升系统运行效率。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"项目经验\"><a href=\"#项目经验\" class=\"headerlink\" title=\"项目经验\"></a>项目经验</h2><h3 id=\"项目一：开发和优化-convTranspose2d-算子\"><a href=\"#项目一：开发和优化-convTranspose2d-算子\" class=\"headerlink\" title=\"项目一：开发和优化 convTranspose2d 算子\"></a>项目一：开发和优化 convTranspose2d 算子</h3><ul>\n<li><strong>项目描述</strong>：针对 FPN、UniBEV 等网络中图像上采样需求，在自研 NPU 平台上实现和优化 convTranspose2d 算子。</li>\n<li>主要职责：<ul>\n<li><strong>算子开发</strong>：负责在自研 NPU 平台上开发 convTranspose2d 算子，实现图像的上采样功能。</li>\n<li><strong>性能优化</strong>：通过拆分权重的方式，将 convTranspose2d 拆分为多个 conv2d 计算。这种优化策略在 2 倍上采样的情况下，成功将激活数据内存消耗降低为 input 膨胀方案的 25%，并提升了近 3 倍的计算性能。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"项目二：开发和优化-resize、rotate-算子\"><a href=\"#项目二：开发和优化-resize、rotate-算子\" class=\"headerlink\" title=\"项目二：开发和优化 resize、rotate 算子\"></a>项目二：开发和优化 resize、rotate 算子</h3><ul>\n<li><strong>项目描述</strong>：支持 UniBEV、BEVFusion 网络中的图像放缩、旋转功能，实现 bilinear、nearest mode 的 resize、rotate 算子。</li>\n<li>主要职责：<ul>\n<li><strong>算子开发</strong>：负责在自研 NPU 上开发 resize、rotate 算子，实现图像的放缩、旋转功能。</li>\n<li><strong>性能优化</strong>：通过采用 sync variable、pingpong buffer 构建 pipeline，成功地实现了接近理论性能的 90% 。</li>\n<li><strong>精度分析</strong>：分析 IPU 模块在 normalize + denormalize 过程中的精度损失问题，定位并排查 fp24 精度计算不足问题。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"个人评价\"><a href=\"#个人评价\" class=\"headerlink\" title=\"个人评价\"></a>个人评价</h2><ul>\n<li><strong>学习能力</strong>：热衷于技术挑战，能快速学习并应用新知识。</li>\n<li><strong>独立工作能力</strong>：能独立完成任务，具备出色的时间管理和项目管理能力。</li>\n<li><strong>团队协作</strong>：具备良好的团队协作和沟通能力，性格开朗。</li>\n</ul>\n</div>"}],"Post":[{"title":"recording-blog","date":"2024-04-16T14:53:08.000Z","_content":"\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    TECH OTAKUS SAVE THE WORLD\n</div>\n\n![001_wp](001_wp.png)\n## 2024\n### 04\n#### 24.04.16：创建blog\n> Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n```bash\nhexo new post -p path/to/file/    # 在source/_posts/目录下创建同名文件/夹\nhexo generate                     # Generate static files\nhexo server                       # Run server\nhexo deploy                       # Deploy to remote sites\n```\n\n- More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a>\n- More info: [Server](https://hexo.io/docs/server.html)\n- More info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n```bash\n# 添加超链接的两种方式\nMore info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a>\nMore info: [Server](https://hexo.io/docs/server.html)\n```\n\n#### 24.04.17：hexo显示图片\n> <a href=\"https://zhuanlan.zhihu.com/p/645679541\">网页显示图片教程</a>\n```bash\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n#### 24.04.18：表格美化\n```bash\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Styled Table</title>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n    .custom-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    .custom-table th, .custom-table td {\n        padding: 8px;\n        text-align: center;\n        border-bottom: 1px solid #ddd;\n    }\n    .custom-table tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n    .custom-table tr:hover {\n        background-color: #f5f5f5;\n    }\n    .custom-table thead {\n        position: sticky;\n        top: 0;\n        background-color: #808080;\n        color: white;\n    }\n    .custom-table thead tr:hover {\n        background-color: #a9a9a9;\n        color: black;\n    }\n    .custom-table, .custom-table th, .custom-table td {\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<!-- 你的HTML内容将在这里，比如具体的表格数据 -->\n</body>\n</html>\n```\n\n#### 24.04.19：新增resume\n\n\n","source":"_posts/note/general/recording.md","raw":"---\ntitle: recording-blog \ndate: 2024-04-16 22:53:08\ncategories:\n- Note\ntags:\n- dxm_recording\n---\n\n<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    TECH OTAKUS SAVE THE WORLD\n</div>\n\n![001_wp](001_wp.png)\n## 2024\n### 04\n#### 24.04.16：创建blog\n> Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n```bash\nhexo new post -p path/to/file/    # 在source/_posts/目录下创建同名文件/夹\nhexo generate                     # Generate static files\nhexo server                       # Run server\nhexo deploy                       # Deploy to remote sites\n```\n\n- More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a>\n- More info: [Server](https://hexo.io/docs/server.html)\n- More info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n```bash\n# 添加超链接的两种方式\nMore info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a>\nMore info: [Server](https://hexo.io/docs/server.html)\n```\n\n#### 24.04.17：hexo显示图片\n> <a href=\"https://zhuanlan.zhihu.com/p/645679541\">网页显示图片教程</a>\n```bash\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n#### 24.04.18：表格美化\n```bash\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Styled Table</title>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n    .custom-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    .custom-table th, .custom-table td {\n        padding: 8px;\n        text-align: center;\n        border-bottom: 1px solid #ddd;\n    }\n    .custom-table tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n    .custom-table tr:hover {\n        background-color: #f5f5f5;\n    }\n    .custom-table thead {\n        position: sticky;\n        top: 0;\n        background-color: #808080;\n        color: white;\n    }\n    .custom-table thead tr:hover {\n        background-color: #a9a9a9;\n        color: black;\n    }\n    .custom-table, .custom-table th, .custom-table td {\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<!-- 你的HTML内容将在这里，比如具体的表格数据 -->\n</body>\n</html>\n```\n\n#### 24.04.19：新增resume\n\n\n","slug":"note/general/recording","published":1,"updated":"2024-04-20T15:03:02.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clv88mb06000587uf3x19adyt","content":"<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    TECH OTAKUS SAVE THE WORLD\n</div>\n\n<p><img src=\"/2024/04/16/note/general/recording/001_wp.png\" alt=\"001_wp\"></p>\n<h2 id=\"2024\"><a href=\"#2024\" class=\"headerlink\" title=\"2024\"></a>2024</h2><h3 id=\"04\"><a href=\"#04\" class=\"headerlink\" title=\"04\"></a>04</h3><h4 id=\"24-04-16：创建blog\"><a href=\"#24-04-16：创建blog\" class=\"headerlink\" title=\"24.04.16：创建blog\"></a>24.04.16：创建blog</h4><blockquote>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post -p path/to/file/    <span class=\"comment\"># 在source/_posts/目录下创建同名文件/夹</span></span><br><span class=\"line\">hexo generate                     <span class=\"comment\"># Generate static files</span></span><br><span class=\"line\">hexo server                       <span class=\"comment\"># Run server</span></span><br><span class=\"line\">hexo deploy                       <span class=\"comment\"># Deploy to remote sites</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></li>\n<li>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></li>\n<li>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加超链接的两种方式</span></span><br><span class=\"line\">More info: &lt;a href=<span class=\"string\">&quot;https://hexo.io/docs/generating.html&quot;</span>&gt;Generating&lt;/a&gt;</span><br><span class=\"line\">More info: [Server](https://hexo.io/docs/server.html)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-04-17：hexo显示图片\"><a href=\"#24-04-17：hexo显示图片\" class=\"headerlink\" title=\"24.04.17：hexo显示图片\"></a>24.04.17：hexo显示图片</h4><blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/645679541\">网页显示图片教程</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br><span class=\"line\">marked:</span><br><span class=\"line\">  prependRoot: <span class=\"literal\">true</span></span><br><span class=\"line\">  postAsset: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-04-18：表格美化\"><a href=\"#24-04-18：表格美化\" class=\"headerlink\" title=\"24.04.18：表格美化\"></a>24.04.18：表格美化</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"built_in\">head</span>&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">&quot;viewport&quot;</span> content=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class=\"line\">&lt;title&gt;Styled Table&lt;/title&gt;</span><br><span class=\"line\">&lt;<span class=\"built_in\">link</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span> href=<span class=\"string\">&quot;styles.css&quot;</span>&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    .custom-table &#123;</span><br><span class=\"line\">        width: 100%;</span><br><span class=\"line\">        border-collapse: collapse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table th, .custom-table td &#123;</span><br><span class=\"line\">        padding: 8px;</span><br><span class=\"line\">        text-align: center;</span><br><span class=\"line\">        border-bottom: 1px solid <span class=\"comment\">#ddd;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table <span class=\"built_in\">tr</span>:nth-child(even) &#123;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#f2f2f2;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table <span class=\"built_in\">tr</span>:hover &#123;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#f5f5f5;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table thead &#123;</span><br><span class=\"line\">        position: sticky;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#808080;</span></span><br><span class=\"line\">        color: white;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table thead <span class=\"built_in\">tr</span>:hover &#123;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#a9a9a9;</span></span><br><span class=\"line\">        color: black;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table, .custom-table th, .custom-table td &#123;</span><br><span class=\"line\">        border: 1px solid black;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;!-- 你的HTML内容将在这里，比如具体的表格数据 --&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-04-19：新增resume\"><a href=\"#24-04-19：新增resume\" class=\"headerlink\" title=\"24.04.19：新增resume\"></a>24.04.19：新增resume</h4>","site":{"data":{}},"excerpt":"","more":"<div style=\"text-align: center; font-size: 30px; font-weight: bold; font-family: 'Courier New', Courier, monospace; color: lightseagreen;\">\n    TECH OTAKUS SAVE THE WORLD\n</div>\n\n<p><img src=\"/2024/04/16/note/general/recording/001_wp.png\" alt=\"001_wp\"></p>\n<h2 id=\"2024\"><a href=\"#2024\" class=\"headerlink\" title=\"2024\"></a>2024</h2><h3 id=\"04\"><a href=\"#04\" class=\"headerlink\" title=\"04\"></a>04</h3><h4 id=\"24-04-16：创建blog\"><a href=\"#24-04-16：创建blog\" class=\"headerlink\" title=\"24.04.16：创建blog\"></a>24.04.16：创建blog</h4><blockquote>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post -p path/to/file/    <span class=\"comment\"># 在source/_posts/目录下创建同名文件/夹</span></span><br><span class=\"line\">hexo generate                     <span class=\"comment\"># Generate static files</span></span><br><span class=\"line\">hexo server                       <span class=\"comment\"># Run server</span></span><br><span class=\"line\">hexo deploy                       <span class=\"comment\"># Deploy to remote sites</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></li>\n<li>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></li>\n<li>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加超链接的两种方式</span></span><br><span class=\"line\">More info: &lt;a href=<span class=\"string\">&quot;https://hexo.io/docs/generating.html&quot;</span>&gt;Generating&lt;/a&gt;</span><br><span class=\"line\">More info: [Server](https://hexo.io/docs/server.html)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-04-17：hexo显示图片\"><a href=\"#24-04-17：hexo显示图片\" class=\"headerlink\" title=\"24.04.17：hexo显示图片\"></a>24.04.17：hexo显示图片</h4><blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/645679541\">网页显示图片教程</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br><span class=\"line\">marked:</span><br><span class=\"line\">  prependRoot: <span class=\"literal\">true</span></span><br><span class=\"line\">  postAsset: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-04-18：表格美化\"><a href=\"#24-04-18：表格美化\" class=\"headerlink\" title=\"24.04.18：表格美化\"></a>24.04.18：表格美化</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"built_in\">head</span>&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">&lt;meta name=<span class=\"string\">&quot;viewport&quot;</span> content=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class=\"line\">&lt;title&gt;Styled Table&lt;/title&gt;</span><br><span class=\"line\">&lt;<span class=\"built_in\">link</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span> href=<span class=\"string\">&quot;styles.css&quot;</span>&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    .custom-table &#123;</span><br><span class=\"line\">        width: 100%;</span><br><span class=\"line\">        border-collapse: collapse;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table th, .custom-table td &#123;</span><br><span class=\"line\">        padding: 8px;</span><br><span class=\"line\">        text-align: center;</span><br><span class=\"line\">        border-bottom: 1px solid <span class=\"comment\">#ddd;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table <span class=\"built_in\">tr</span>:nth-child(even) &#123;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#f2f2f2;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table <span class=\"built_in\">tr</span>:hover &#123;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#f5f5f5;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table thead &#123;</span><br><span class=\"line\">        position: sticky;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#808080;</span></span><br><span class=\"line\">        color: white;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table thead <span class=\"built_in\">tr</span>:hover &#123;</span><br><span class=\"line\">        background-color: <span class=\"comment\">#a9a9a9;</span></span><br><span class=\"line\">        color: black;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .custom-table, .custom-table th, .custom-table td &#123;</span><br><span class=\"line\">        border: 1px solid black;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;!-- 你的HTML内容将在这里，比如具体的表格数据 --&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-04-19：新增resume\"><a href=\"#24-04-19：新增resume\" class=\"headerlink\" title=\"24.04.19：新增resume\"></a>24.04.19：新增resume</h4>"},{"title":"ConvTranspose2d","data":"2024.04.20 18:00","_content":"Today is April 14, 2024. This is the first blog I created on the first day after working for a year. I hope to use this to motivate myself as an excellent programmer to constantly make up for my shortcomings and constantly improve myself.Talk is cheap, show me your code!\n## 1、Research\n### 1.1、Pytorch Reference\n\n\n## 2、Implement\n\n\n## 10、Others\n","source":"_posts/note/professional/convTranspose2d/convTranspose2d.md","raw":"---\ntitle: ConvTranspose2d\ndata: 2024.04.20 18:00\ncategories:\n- Note\ntags:\n- conv2d\n- convTranspose2d\n---\nToday is April 14, 2024. This is the first blog I created on the first day after working for a year. I hope to use this to motivate myself as an excellent programmer to constantly make up for my shortcomings and constantly improve myself.Talk is cheap, show me your code!\n## 1、Research\n### 1.1、Pytorch Reference\n\n\n## 2、Implement\n\n\n## 10、Others\n","slug":"note/professional/convTranspose2d/convTranspose2d","published":1,"date":"2024-04-20T13:08:48.705Z","updated":"2024-04-20T14:39:54.850Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clv88mb06000687ufahvchp8n","content":"<p>Today is April 14, 2024. This is the first blog I created on the first day after working for a year. I hope to use this to motivate myself as an excellent programmer to constantly make up for my shortcomings and constantly improve myself.Talk is cheap, show me your code!</p>\n<h2 id=\"1、Research\"><a href=\"#1、Research\" class=\"headerlink\" title=\"1、Research\"></a>1、Research</h2><h3 id=\"1-1、Pytorch-Reference\"><a href=\"#1-1、Pytorch-Reference\" class=\"headerlink\" title=\"1.1、Pytorch Reference\"></a>1.1、Pytorch Reference</h3><h2 id=\"2、Implement\"><a href=\"#2、Implement\" class=\"headerlink\" title=\"2、Implement\"></a>2、Implement</h2><h2 id=\"10、Others\"><a href=\"#10、Others\" class=\"headerlink\" title=\"10、Others\"></a>10、Others</h2>","site":{"data":{}},"excerpt":"","more":"<p>Today is April 14, 2024. This is the first blog I created on the first day after working for a year. I hope to use this to motivate myself as an excellent programmer to constantly make up for my shortcomings and constantly improve myself.Talk is cheap, show me your code!</p>\n<h2 id=\"1、Research\"><a href=\"#1、Research\" class=\"headerlink\" title=\"1、Research\"></a>1、Research</h2><h3 id=\"1-1、Pytorch-Reference\"><a href=\"#1-1、Pytorch-Reference\" class=\"headerlink\" title=\"1.1、Pytorch Reference\"></a>1.1、Pytorch Reference</h3><h2 id=\"2、Implement\"><a href=\"#2、Implement\" class=\"headerlink\" title=\"2、Implement\"></a>2、Implement</h2><h2 id=\"10、Others\"><a href=\"#10、Others\" class=\"headerlink\" title=\"10、Others\"></a>10、Others</h2>"},{"title":"Tutorial-Linux","data":"2024.04.14 18:00","_content":"\n# Vim\n\n> - <a href=\"https://www.runoob.com/linux/linux-vim.html\">vim菜鸟教程</a>\n\n## 键位图\n![vim_keyboard](001.png)\n## vim常用功能\n> - vim操作逻辑：\n>   - {operator} + {motion} = action ：一次编辑动作\n>   - {count} + {action}：重复count次action操作\n> - Command模式：\n>   - `:w`：保存文件；\n>   - `:q`：退出 Vim 编辑器；\n>   - `:wq`：保存文件并退出 Vim 编辑器；\n>   - `:q!`：强制退出Vim编辑器，不保存修改；\n\n### 光标移动、复制粘贴、搜索替换\n#### 光标移动\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Styled Table</title>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n    .custom-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    .custom-table th, .custom-table td {\n        padding: 8px;\n        text-align: center;\n        border-bottom: 1px solid #ddd;\n    }\n    .custom-table tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n    .custom-table tr:hover {\n        background-color: #f5f5f5;\n    }\n    .custom-table thead {\n        position: sticky;\n        top: 0;\n        background-color: #808080;\n        color: white;\n    }\n    .custom-table thead tr:hover {\n        background-color: #a9a9a9;\n        color: black;\n    }\n    .custom-table, .custom-table th, .custom-table td {\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<!-- 你的HTML内容将在这里，比如具体的表格数据 -->\n</body>\n</html>\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>h、j、k、l</td>\n            <td>光标向左、下、上、右移动一个字符</td>\n        </tr>\n        <tr>\n            <td>n {motion}/n space/n enter</td>\n            <td>motion执行n次/向右移动n字符/向下移动n行</td>\n        </tr>\n        <tr>\n            <td>0</td>\n            <td>行首</td>\n        </tr>\n        <tr>\n            <td>$</td>\n            <td>行尾</td>\n        </tr>\n        <tr>\n            <td>^</td>\n            <td>第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>G</td>\n            <td>文档最后一行</td>\n        </tr>\n        <tr>\n            <td>ngg/nG</td>\n            <td>移动到文档第n行（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>+/-</td>\n            <td>非空格符的下/上一行</td>\n        </tr>\n        <tr>\n            <td>m{mark}/`{mark}</td>\n            <td>当前位置标记为mark/跳转到mark位置</td>\n        </tr>\n        <tr>\n            <td>zt/zz/zb</td>\n            <td>将当前行移至窗口顶部/中央/底部</td>\n        </tr>\n        <tr>\n            <td>H/M/L</td>\n            <td>光标移动到屏幕第一行/中间行/最后一行</td>\n        </tr>\n        <tr>\n            <td>ctrl + f/ctrl + b</td>\n            <td>屏幕向下/上移动一页</td>\n        </tr>\n        <tr>\n            <td>ctrl + d/ctrl + u</td>\n            <td>屏幕向下/上移动半页</td>\n        </tr>\n        <tr>\n            <td>v/ctrl + v</td>\n            <td>视觉模式/列视觉模式</td>\n        </tr>\n        <tr>\n            <td>v + < / v + ></td>\n            <td>首行缩进/取消缩进</td>\n        </tr>\n    </tbody>\n</table>\n\n#### 搜索替换\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>/pattern ?pattern</td>\n            <td>在文本中向下/上搜索pattern字符</td>\n        </tr>\n        <tr>\n            <td>*</td>\n            <td>等价于/pattern</td>\n        </tr>\n        <tr>\n            <td>n/N</td>\n            <td>重复前一个搜索操作/反向重复前一个搜索操作</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/word1/word2/gc</td>\n            <td>在n1~n2行之间将word1替换成word2</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/\\<word1\\>/word2/gc</td>\n            <td>精准匹配字符串word1</td>\n        </tr>\n        <tr>\n            <td>:1,$s/word1/word2/g 或 :%s/word1/word2/g</td>\n            <td>替换范围为第一行～最后一行</td>\n        </tr>\n        <tr>\n            <td>* + :%s//pattern2/gc</td>\n            <td>使用*快速选中pattern1进行替换</td>\n        </tr>\n        <tr>\n            <td>v + s/^/\\/\\//（\\cc）</td>\n            <td>添加行前注释</td>\n        </tr>\n        <tr>\n            <td>v + s/^\\/\\///（\\cu）</td>\n            <td>取消行前注释</td>\n        </tr>\n    </tbody>\n</table>\n\n#### 删除复制粘贴\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>nx/nX</td>\n            <td>向后/前删除n个字符（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>dd/ndd</td>\n            <td>删除当前行/删除光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>dG/d1G</td>\n            <td>删除光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>d$/d0/d^</td>\n            <td>删除光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>di{/da{/di(/da(</td>\n            <td>删除{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>diw/daw</td>\n            <td>删除光标所在单词/删除光标所在单词及后面的空格（单词后无空格则删除单词前空格）</td>\n        </tr>\n        <tr>\n            <td>yy/nyy</td>\n            <td>复制当前行/复制光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>yG/y1G</td>\n            <td>复制光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>y$/y0/y^</td>\n            <td>复制光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>yi{/ya{/yi(/ya(</td>\n            <td>复制{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>yiw/yaw</td>\n            <td>复制光标所在单词/复制光标所在单词及后面的空格（单词后无空格则复制单词前空格）</td>\n        </tr>\n        <tr>\n            <td>p/P</td>\n            <td>在光标后/前粘贴（复制整行时在下一行/上一行粘贴）</td>\n        </tr>\n        <tr>\n            <td>cw/ciw/caw/c$/c0/c^</td>\n            <td>更改光标位置到单词末尾/整个单词/包含空格的整个单词/行尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>J</td>\n            <td>将当前行和下一行合并为1行</td>\n        </tr>\n        <tr>\n            <td>.</td>\n            <td>重复前一个动作</td>\n        </tr>\n        <tr>\n            <td>u</td>\n            <td>撤销最近的修改</td>\n        </tr>\n        <tr>\n            <td>ctrl + r</td>\n            <td>nromal模式：u撤销更改后，ctrl + r重做这些更改<br>insert模式：ctrl + r + \"/%/number，插入寄存器内容（当前缓冲区/文件名称/寄存器number）</td>\n        </tr>\n    </tbody>\n</table>\n\n### 编辑模式\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>i, I</td>\n            <td>当前光标位置输入/当前行第一个非空字符位置输入</td>\n        </tr>\n        <tr>\n            <td>a, A</td>\n            <td>当前光标下一个字符位置输入/当前行最后一个字符位置输入</td>\n        </tr>\n        <tr>\n            <td>o, O</td>\n            <td>当前行下一行/上一行插入一个新行</td>\n        </tr>\n        <tr>\n            <td>r, R</td>\n            <td>替换光标位置字符/一直替换光标所在位置字符</td>\n        </tr>\n        <tr>\n            <td>[Esc]</td>\n            <td>退出Insert模式，回到Normal模式</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n\n\n## plug-in\n- `vim ~/.vimrc`：添加需要更改的设置，每次启动vim自动更新配置\n\n```bash\nset number               \" 开启行号显示, set nonumber\nset hlsearch             \" 搜索时高亮显示匹配项\nset cursorline           \" 高亮显示当前行，set nocursorline\n\" set relativenumber: 开启相对行数；set norelativenumber: 关闭相对行数\n\nset tabstop=4            \" 设置一个 Tab 为 4 个字符宽\nset shiftwidth=4         \" 设置缩进 4 个字符宽\nset expandtab            \" 使用空格代替 Tab\n\ncall plug#begin('~/.vim/plugged')   \" 开始插件配置\nPlug 'scrooloose/nerdcommenter'    \" 添加插件：方便的注释功能\nPlug 'mg979/vim-visual-multi', {'branch': 'master'}  \" 添加插件：多光标编辑支持\ncall plug#end()                    \" 结束插件配置\n\n\" 设置标签页的正常显示样式\nhighlight TabLineFill ctermfg=LightGrey ctermbg=DarkGrey  \" 设置未激活标签的填充颜色\nhighlight TabLine ctermfg=White ctermbg=Black             \" 设置未激活标签的颜色\nhighlight TabLineSel ctermfg=Black ctermbg=LightGrey      \" 设置激活标签的颜色\n\n\" 使当前激活的标签页更加明显\nset tabline=%!MyTabLine()     \" 设置自定义标签页行显示\nfunction MyTabLine()          \" 定义一个函数来自定义标签行\n  let s = ''\n  for i in range(tabpagenr('$'))   \" 遍历所有标签页\n    \" 添加分界符和页面序号\n    let s .= '%' . (i + 1) . 'T'\n    \" 当前页使用特殊颜色\n    let s .= (i + 1 == tabpagenr() ? '%#TabLineSel#' : '%#TabLine#')\n    \" 设置标签名或显示文件名\n    let s .= ' ' . (i + 1) . '. ' . GetTabLabel(i + 1) . ' '\n  endfor\n  \" 添加最后的填充\n  let s .= '%#TabLineFill#%T'\n  return s \nendfunction\n\nfunction GetTabLabel(n)      \" 定义一个函数获取标签的标签名\n  \" 返回第n个标签的标签名称或文件名\n  let buflist = tabpagebuflist(a:n)  \" 获取指定标签页的缓冲区列表\n  let winnr = tabpagewinnr(a:n)      \" 获取激活的窗口编号\n  return bufname(buflist[winnr - 1]) \" 返回当前窗口缓冲区的文件名\nendfunction\n```\n\n### 注释插件\n```bash\n# 安装 vim-plug 插件（插件管理器）\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\nhttps://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\n# 在～/.vimrc文件中添加以下内容\nvim ~/.vimrc\ncall plug#begin('~/.vim/plugged')\nPlug 'scrooloose/nerdcommenter'\ncall plug#end()\n\n# 重新打开vim，运行以下命令从 GitHub 下载并安装 nerdcommenter 插件\n:PlugInstall\n```\n\n\n\n\n\n\n\n\n\n\n# 文本处理工具\n## grep\n\n> grep [options] pattern [files]\n\n- `options`：\n  - `-i`：忽略大小写差异。（ignore）\n  - `-v`：反向匹配，仅显示不包含匹配文本的行。（invert match）\n  - `-n`：显示匹配行及其行号。（line number）\n  - `-r`或`-R`：递归查找，搜索指定目录下的所有文件和子目录。（recursive）\n  - `-l`：仅列出包含匹配行的文件名，而不显示匹配的文本。（list file with matches）\n  - `-c`：仅显示每个文件中匹配到的行数。（count）\n- `pattern`：这是你要搜索的文本或正则表达式。\n- `files`：这是一个或多个要搜索的文件。如果省略此参数，grep将从标准输入读取数据。\n\n\n```bash\ngrep \"\\[npu::inst_cluster3::tile\\[0\\]::sv\\]\" debug.log > c3t0.log\ngrep -e \"SV_U2U_W\" -e \"SV_U2U_R\" debug.log > 1.txt        # 搜索带有U2U_W和U2U_R的行\ngrep -o \"cluster8::tile\\[0\\].*\" debug.log > 2.txt         # 搜索匹配cluster8::tile0及后续内容的行\ngrep -o \"cluster8::tile\\[0\\].*SV_U2U_W.*\" debug.log > 3.txt\ngrep \"关键字1\" 文件名 ｜ grep \"关键字2\" > 3.txt\ngrep -o \"\\[Tile 32.* Update.*\" 1.data > 4.txt\ngrep -e \"slice.*axi_w1\" -e \"slice.*u2u_r\" 5.txt | sed 's/axi_w1/u2u_w/g' > sv.log\n\ngrep --text \"count\" | wc -l\n```\n\n\n\n## awk\n\n> awk [options] 'program' [files]\n\n- `program`：通常由pattern + action组成：\n  - 模式匹配（pattern）：选择哪些行需要应用action（默认应用所有行）；\n  - 操作{ action }：包括但不限于**打印**、**修改**、**处理**数据（默认为 print）；\n- `files`：指定输入文件的名称（省略/- 读取标准输入）；\n- 常用命令结构：\n  - pattern { action }：当输入行匹配pattern时，执行action；\n  - BEGIN { action }：在处理任何输入行之前执行的action。\n  - END { action }：在处理完所有输入行之后执行的action。\n- 常用选项：\n  - -F fs：设置输入字段的分隔符为fs。\n  - -v var=value：在程序开始之前，设置一个awk变量var的值为value。\n\n```bash\n# 打印文件每一行\nawk '{print}' filename\n\n# 打印所有包含“error”的行，/error/是pattern用于筛选文本\nawk '/error/ {print $0}' filename\n\n# 模式匹配 + 正则表达式进一步细化筛选条件\nawk '/error/ && $1 > 100 {print $0}' filename\n# 对特定字段进行pattern匹配\nawk '$2 ~ /pattern/ {print $0}' filename\n\n# 条件打印，如果第2个变量字符长度大于4则打印第1、3个变量\nawk '$2 > 4 {print $1, $3}' filename\nawk 'length($2) > 4 {print $1, $3}' filename\nawk '/length($2) > 4/ {print $1, $3}' filename\n```\n\n### 示例\n#### accuracy_mismatch\n\n- awk命令\n\n```bash\nawk '{\n    if (match($0, /\\(c, y, x\\) = \\([^)]+\\)/)) {\n        cxy = substr($0, RSTART, RLENGTH);\n    }\n    if (match($0, /\\(round_yi, round_xi\\) = \\([^)]+\\)/)) {\n        ryx = substr($0, RSTART, RLENGTH);\n    }\n    if (cxy && ryx)\n        print cxy, ryx;\n}' 1.log > 2.log\n```\n\n- src.log\n\n```tex\nTesting frame80...\nSaved NCHW layout to rotate_nearest_pytorch_frame80_input_nchw.bin, shape: torch.Size([32, 8, 400, 200])\nSaved NHWC layout to rotate_nearest_pytorch_frame80_input_nhwc.bin, shape: torch.Size([32, 400, 200, 8])\nSaved NCHW layout to rotate_nearest_pytorch_frame80_output_nchw.bin, shape: torch.Size([32, 8, 400, 200])\nSaved NHWC layout to rotate_nearest_pytorch_frame80_output_nhwc.bin, shape: torch.Size([32, 400, 200, 8])\n[frame80] angle (fp64): 11.595370230811710\n[frame80] angle (fp32): 11.595370230811710\n(c, y, x) = (0, 0, 77)  (y_i, x_i) = (-0.4509754180908203, 117.55844116210938)  (round_yi, round_xi) = (0, 118) (int_yi, int_xi) = (0, 118)\n(c, y, x) = (0, 0, 78)  (y_i, x_i) = (-0.24997615814208984, 118.53804016113281) (round_yi, round_xi) = (0, 119) (int_yi, int_xi) = (0, 119)\n(c, y, x) = (0, 0, 79)  (y_i, x_i) = (-0.04897785186767578, 119.51762390136719) (round_yi, round_xi) = (0, 120) (int_yi, int_xi) = (0, 120)\n(c, y, x) = (0, 0, 80)  (y_i, x_i) = (0.15202045440673828, 120.49722290039062)  (round_yi, round_xi) = (0, 120) (int_yi, int_xi) = (0, 120)\n(c, y, x) = (0, 0, 81)  (y_i, x_i) = (0.35302066802978516, 121.476806640625)    (round_yi, round_xi) = (0, 121) (int_yi, int_xi) = (0, 121)\n(c, y, x) = (0, 0, 82)  (y_i, x_i) = (0.5540189743041992, 122.45640563964844)   (round_yi, round_xi) = (1, 122) (int_yi, int_xi) = (1, 122)\n(c, y, x) = (0, 0, 83)  (y_i, x_i) = (0.7550172805786133, 123.43598937988281)   (round_yi, round_xi) = (1, 123) (int_yi, int_xi) = (1, 123)\n```\n\n- dst.log\n\n```tex\n(c, y, x) = (0, 0, 77) (round_yi, round_xi) = (0, 118)\n(c, y, x) = (0, 0, 78) (round_yi, round_xi) = (0, 119)\n(c, y, x) = (0, 0, 79) (round_yi, round_xi) = (0, 120)\n(c, y, x) = (0, 0, 80) (round_yi, round_xi) = (0, 120)\n(c, y, x) = (0, 0, 81) (round_yi, round_xi) = (0, 121)\n(c, y, x) = (0, 0, 82) (round_yi, round_xi) = (1, 122)\n(c, y, x) = (0, 0, 83) (round_yi, round_xi) = (1, 123)\n```\n\n#### sv_log\n\n- awk命令\n\n```bash\nawk '/Tile 0/ && /Update/ {\n    idx = index($0, \"[Tile\");\n    if (idx > 0) {\n        print substr($0, idx);\n    }\n}' 1.txt > 3.log\n\n# 使用grep实现\ngrep -e \"Tile 0\" 1.txt | grep \"Update\" | grep -o \"\\[Tile.*\" > 4.log\n```\n\n- src.log\n\n```tex\n# New execution started\n2024-03-20 17:19:06.198119828 :0 NOTICE[0]: spike_fm_top: init\n2024-03-20 17:19:06.198125820 :0 NOTICE[0]: spike_fm_top: init ccpu program 0 hcpu program 0\n2024-03-20 17:19:06.198126357 :0 NOTICE[0]: spike_fm_top: init ccpu option 0\n2024-03-20 17:19:06.198126755 :0 NOTICE[0]: spike_fm_top: init hcpu option 0\n2024-03-20 17:19:06.198127737 :0 NOTICE[0]: spike_fm_top: init ccpu body \n2024-03-20 17:19:06.217334580 :0 NOTICE[0]: spike_fm_top: init hcpu body \n2024-03-20 17:19:06.221835469 :0 NOTICE[0]: spike_fm_top: init finished\n2024-03-20 17:19:06.256568272 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Started one instruction.\n2024-03-20 17:19:06.258692580 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Finished one instruction.\n2024-03-20 17:19:06.316320218 :0 NOTICE[2]: [Tile 0 SVCTRL]: Started one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.317258092 :0 NOTICE[2]: [Tile 0 SVCTRL]: Finished one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.317264341 :0 NOTICE[2]: [Tile 0]: Update SV_TILE_CTRL = 0\n2024-03-20 17:19:06.317266446 :0 NOTICE[2]: [Tile 0]: Update SV_DRB_W = 00\n2024-03-20 17:19:06.317268676 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_R0 = 0\n2024-03-20 17:19:06.317270666 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_W0 = 0\n2024-03-20 17:19:06.317272391 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_R1 = 0\n2024-03-20 17:19:06.317273934 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_W1 = 0\n2024-03-20 17:19:06.317255146 :0 NOTICE[5]: [Tile 0]: Update SV_CE_R0 = 0\n2024-03-20 17:19:06.318227982 :0 NOTICE[5]: [Tile 0]: Update SV_CE_W0 = 0\n2024-03-20 17:19:06.318230260 :0 NOTICE[5]: [Tile 0]: Update SV_CE_R1 = 0\n2024-03-20 17:19:06.318231995 :0 NOTICE[5]: [Tile 0]: Update SV_CE_W1 = 0\n2024-03-20 17:19:06.317267074 :0 NOTICE[6]: [Tile 0]: Update SV_U2U_R = 0\n2024-03-20 17:19:06.318271057 :0 NOTICE[6]: [Tile 0]: Update SV_U2U_W = 0\n2024-03-20 17:19:06.317256828 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_NLU_W = 0\n2024-03-20 17:19:06.318557186 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_ACT_R = 0\n2024-03-20 17:19:06.318560228 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_WGT_R = 0\n2024-03-20 17:19:06.318562885 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_WSE_R = 0\n2024-03-20 17:19:06.318927308 :0 NOTICE[0]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Starting one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.317258352 :0 NOTICE[4]: [Tile 0]: Update SV_CVU_R0 = 0\n2024-03-20 17:19:06.319172200 :0 NOTICE[4]: [Tile 0]: Update SV_CVU_R1 = 0\n2024-03-20 17:19:06.319176623 :0 NOTICE[4]: [Tile 0]: Update SV_CVU_W = 0\n2024-03-20 17:19:06.319634699 :0 NOTICE[2]: [Tile 0Barrier: fenck ack.\n2024-03-20 17:19:06.319661379 :0 NOTICE[1]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Receive from tile 0\n2024-03-20 17:19:06.319687388 :0 NOTICE[1]: [T=16]Barrier mask 0000000000000000000000000000000000000000000000000000000000000001 passed: Finished one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.323494662 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Started one instruction.\n2024-03-20 17:19:06.325598258 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Update Tile 0 SV_DRB_W++\n2024-03-20 17:19:06.325705359 :0 NOTICE[1]: [Tile 0]: Update SV_DRB_W = 1\n```\n\n- dst.log\n\n```tex\n[Tile 0]: Update SV_TILE_CTRL = 0\n[Tile 0]: Update SV_DRB_W = 00\n[Tile 0]: Update SV_AXI_R0 = 0\n[Tile 0]: Update SV_AXI_W0 = 0\n[Tile 0]: Update SV_AXI_R1 = 0\n[Tile 0]: Update SV_AXI_W1 = 0\n[Tile 0]: Update SV_CE_R0 = 0\n[Tile 0]: Update SV_CE_W0 = 0\n[Tile 0]: Update SV_CE_R1 = 0\n[Tile 0]: Update SV_CE_W1 = 0\n[Tile 0]: Update SV_U2U_R = 0\n[Tile 0]: Update SV_U2U_W = 0\n[Tile 0]: Update SV_TCC_NLU_W = 0\n[Tile 0]: Update SV_TCC_ACT_R = 0\n[Tile 0]: Update SV_TCC_WGT_R = 0\n[Tile 0]: Update SV_TCC_WSE_R = 0\n[Tile 0]: Update SV_CVU_R0 = 0\n[Tile 0]: Update SV_CVU_R1 = 0\n[Tile 0]: Update SV_CVU_W = 0\n[Tile 0]: Update SV_DRB_W = 1\n```\n\n\n\n## sed\n\n## others\n\n\n# shell script\n\n## 基础语法\n```bash\n${}：\n${} 主要用于变量替换和参数替换。\n${var} 表示取变量 var 的值。\n${var:-default} 表示如果变量 var 未定义或者为空，则使用默认值 default。\n${var:=default} 表示如果变量 var 未定义或者为空，则将其设置为默认值 default。\n${#var} 表示返回变量 var 的长度。\n${var:start:length} 表示从变量 var 的第 start 个字符开始，截取 length 个字符。\n等等。\n$()：\n$() 是命令替换的语法，用于将命令的输出结果赋值给变量或者直接输出。\n$() 中放置的命令会被执行，并且 $() 会将命令的标准输出作为结果返回。\n例如，var=$(command) 表示执行 command 命令，并将其输出赋值给变量 var。\n```\n\n\n### dxm_cf.sh\n\n> `./dxm_cf.sh -c MH20_Resize_Conv_16tiles_2slice_int8 -s pm`\n\n```bash\n#!/bin/bash\nset -euo pipefail\n\nfunction usage() {\n    cat << EOF\n    Usage: $0 [options]\n    Options:\n    -h|--help               This Message.\n    -c|--case_name          Case name\n    -s|--stage              Stage name (pm, runtime, fm, python)\nEOF\n}\n\nfunction options_parse() {\n    while [ $# -gt 0 ]; do\n        case \"$1\" in\n            -c|--case_name)\n              if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                case_name=$2\n                shift\n              fi\n              ;;\n            -s|--stage)\n              if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                stage=$2\n                shift\n              fi\n              ;;\n            -*|-h|--help)\n                usage\n                exit 0\n                ;;\n            *)\n                print_center \"Error: Invalid argument\"\n                usage\n                exit 1\n                ;;\n        esac\n        shift\n    done\n}\n\nfunction print_center() {\n    local text=$1\n    local cols=$(tput cols)\n    printf \"%*s\\n\" $(((${#text}+$cols)/2)) \"$text\"\n}\n\nif [ $# -eq 0 ]; then\n    usage\n    exit 1\nfi\noptions_parse $@\nprint_center \"================ $0 $case_name $stage ================\"\n\n# define common file path\nworkspace_dir=$(pwd)\nlog_dir=\"${workspace_dir}/log/${case_name}\"\nmkdir -p ${log_dir}\npm_log=\"${log_dir}/${case_name}_pm.log\"\nruntime_log=\"${log_dir}/${case_name}_runtime.log\"\nfm_log=\"${log_dir}/${case_name}_fm.log\"\ncamera_fusion_instr_data=\"${workspace_dir}/runtime/test/golden_test/schu_instr_executor/massive_hit/${case_name}/\"\ncamera_fusion_bin=\"${workspace_dir}/runtime/builddir/massive_hit_${case_name}/massive_hit_${case_name}.bin\"\ngolden_output_bin=\"${camera_fusion_instr_data}golden_output.bin\"\nmicrobench_out_bin=\"${workspace_dir}/data/microbench_camera_fusion_out.bin\"\nmeson_build_file=\"${workspace_dir}/dataflow_net/meson.build\"\ntestcase_resize=\"${workspace_dir}/dataflow_net/op_net/ops/test_ops/resize/testcase_resize.cpp\"\n\nfunction pm_compile() {\n    cd \"${workspace_dir}/dataflow_net/builddir\"\n    local slice_num=$(echo \"${case_name}\" | grep -oP '\\d+slice' | grep -oP '\\d+')\n\n    if [[ \"$slice_num\" == \"1\" ]]; then\n        sed -i 's/^\\(#define MULTI_SLICE_ENABLE\\)/\\/\\/\\1/' \"$testcase_resize\"\n    else\n        sed -i 's/^\\/\\/\\(.*#define MULTI_SLICE_ENABLE.*\\)/\\1/' \"$testcase_resize\"\n    fi\n\n    sed -i -e \"s/#define SLICE_NUM .*/#define SLICE_NUM ${slice_num}/\" \\\n           -e \"s/#define CASE_NAME .*/#define CASE_NAME \\\"${case_name}\\\"/\" \"$testcase_resize\"\n\n    if grep -q \"executable ('resize'\" \"$meson_build_file\"; then\n        print_center \"resize ====> ${case_name}\"\n        sed -i \"s/executable ('resize'/executable ('${case_name}'/g\" \"$meson_build_file\"\n    else\n        original_pattern=$(awk '{\n            if (match($0, /MH20_Resize_Conv_16tiles_[0-9]+slice_int8/)) {\n                print substr($0, RSTART, RLENGTH)\n            }\n        }' \"$meson_build_file\")\n\n        if [[ -n \"$original_pattern\" ]]; then\n            print_center \"${original_pattern} ====> ${case_name}\"\n            sed -i \"s/$original_pattern/${case_name}/g\" \"$meson_build_file\"\n        fi\n    fi\n\n    print_center \"================ $case_name pm compile start ================\"\n    ninja ${case_name} &> ${pm_log} || { print_center \"Compilation failed, exiting...\"; exit 1; }\n    ./${case_name} >> ${pm_log} 2>&1\n    print_center \"================ $case_name pm compile end ================\"\n}\n\nfunction runtime_compile() {\n    if [ ! -d \\\"${camera_fusion_instr_data}\\\" ]; then\n        mkdir -p ${camera_fusion_instr_data}\n    fi\n    cp -rf ${workspace_dir}/dataflow_net/builddir/net_dataflow/${case_name}/* ${camera_fusion_instr_data}\n    cd ${workspace_dir}/runtime\n    print_center \"================ ${case_name} runtime compile start ================\"\n    echo 'include(${GOLDEN_ROOT}/schu_instr_executor/CMakeLists.txt)' > ${workspace_dir}/runtime/test/golden_test/CMakeLists.txt\n    ${workspace_dir}/runtime/build.sh fm --cf-case=${case_name} &> ${runtime_log}\n    print_center \"================ ${case_name} runtime compile end ================\"\n    cd ${workspace_dir}\n}\n\nfunction fm_execute() {\n    print_center \"================ ${case_name} fm execute start ================\"\n    ${workspace_dir}/ebb_model/fm/test/spike_fm_smoke/old_fm_d_smoke_test.bin ${camera_fusion_bin} &> ${fm_log}\n    print_center \"================ ${case_name} fm execute end ================\"\n}\n\nfunction python_check_result() {\n    print_center \"================ ${case_name} pyton check result start ================\"\n    python ${workspace_dir}/project_dxm/rotate/cosine_similarity.py ${golden_output_bin} ${microbench_out_bin}\n    print_center \"================ ${case_name} python check result end ================\"\n}\n\ndeclare -A stages=(\n    [\"pm\"]=\"pm_compile\"\n    [\"runtime\"]=\"runtime_compile\"\n    [\"fm\"]=\"fm_execute\"\n    [\"python\"]=\"python_check_result\"\n)\n\nexecute=false\nfor key in \"pm\" \"runtime\" \"fm\" \"python\"; do\n    if [[ $stage == $key || $execute == true || -z $stage ]]; then\n        execute=true\n        eval \"${stages[$key]}\"\n    fi\ndone\n```\n\n\n\n### dxm_vdk.sh\n\n> `./dxm_vdk_rotate.sh -c rotate -s 1 -e 10`\n\n#### shell_script\n\n```bash\n#!/bin/bash\n\nusage() {\n    cat << EOF\n    Usage: $0 [options]\n    Options:\n    -h|--help               Show this message.\n    -s|--start              Start frame number to process.\n    -e|--end                End frame number to process (if not provided, defaults to start frame).\n    -c|--case_name          Case name to process (default is ${case_name}).\nEOF\n}\n\nprint_center() {\n    local text=$1\n    local cols=$(tput cols)\n    printf \"%*s\\n\" $(((${#text}+$cols)/2)) \"$text\"\n}\n\ninitialize() {\n    set -euo pipefail\n    print_center \"Initializing script variables and paths...\"\n    workspace_dir=$(pwd)\n    runtime_dir=\"${workspace_dir}/runtime\"\n    fm_test_dir=\"${workspace_dir}/ebb_model/fm/test/spike_fm_smoke\"\n    sample_data_dir=\"${workspace_dir}/data\"\n    python_dir=\"${workspace_dir}/project_dxm/rotate\"\n    frame_id=\"\"\n    frame_start=\"-1\"\n    frame_end=\"-1\"\n    print_center \"Initialization complete.\"\n}\n\nconfig() {\n    print_center \"Configuring paths and names for frame ${frame_id}...\"\n    case_name=\"microbench_ipu_rotate_32tiles_fp8_nearest\"\n    input_original_name=\"input_200x400x8_fp8_32tile_nearest\"\n    output_original_name=\"output_200x400x8_fp8_32tile_nearest\"\n    input_target_name=\"rotate_nearest_pytorch_frame${frame_id}_input_nhwc\"\n    output_target_name=\"rotate_nearest_pytorch_frame${frame_id}_output_nhwc\"\n\n    golden_test=\"${workspace_dir}/runtime/test/golden_test\"\n    target_cmakelists=\"${golden_test}/CMakeLists.txt\"\n    golden_test_dir=\"${golden_test}/${case_name}/data\"\n    cmake_file_path=\"${golden_test}/${case_name}/CMakeLists.txt\"\n    rotate_h_path=\"${golden_test}/${case_name}/include/rotate.h\"\n    angle_bin_path=\"${workspace_dir}/project_dxm/golden_data/rotate/frame${frame_id}/Input.angle.fp32.bin\"\n    print_center \"Configuration for frame ${frame_id} done.\"\n}\n\nparse_options() {\n    print_center \"Parsing command line options...\"\n\n    while [ $# -gt 0 ]; do\n        case \"$1\" in\n            -s|--start)\n                if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                    frame_start=$2\n                    shift\n                else\n                    print_center \"Error: Missing start frame number\"\n                    exit 1\n                fi\n                ;;\n            -e|--end)\n                if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                    frame_end=$2\n                    shift\n                else\n                    print_center \"Error: Missing end frame number\"\n                    exit 1\n                fi\n                ;;\n            -c|--case_name)\n                if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                    case_name=$2\n                    shift\n                else\n                    print_center \"Error: Missing case name\"\n                    exit 1\n                fi\n                ;;\n            -*|-h|--help)\n                usage\n                exit 0\n                ;;\n            *)\n                print_center \"Error: Invalid argument\"\n                usage\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [[ $frame_start -ne -1 ]] && [[ $frame_end -eq -1 ]]; then\n        frame_end=$frame_start\n    fi\n\n    print_center \"Command line options parsed successfully. Start Frame: ${frame_start}, End Frame: ${frame_end}\"\n}\n\nrun_python_script_and_process_files() {\n    print_center \"Running Python script for frame ID: ${frame_id}...\"\n    python_script=\"${python_dir}/rotate_dxm.py\"\n    python_command=\"python ${python_script} -f ${frame_id}\"\n    if ${python_command}; then\n        print_center \"Python script executed successfully.\"\n    else\n        print_center \"Failed to execute Python script.\"\n        exit 1\n    fi\n\n    print_center \"Copying generated NHWC bin files to golden test directory...\"\n    local input_src=\"${python_dir}/data_pytorch/${input_target_name}.bin\"\n    local output_src=\"${python_dir}/data_pytorch/${output_target_name}.bin\"\n    local input_dst=\"${golden_test_dir}/${input_target_name}.bin\"\n    local output_dst=\"${golden_test_dir}/${output_target_name}.bin\"\n\n    local md5_file_src=$(md5sum \"${input_src}\" | awk '{print $1}')\n    local path_file_src=$(md5sum \"${input_src}\" | awk '{print $2}')\n    print_center \"MD5 for input src file: ${md5_file_src}\"\n    print_center \"path for input src file: ${path_file_src}\"\n    cp \"${input_src}\" \"${input_dst}\"\n    local md5_file_dst=$(md5sum \"${input_dst}\" | awk '{print $1}')\n    local path_file_dst=$(md5sum \"${input_dst}\" | awk '{print $2}')\n    print_center \"MD5 for input dst file: ${md5_file_dst}\"\n    print_center \"path for input dst file: ${path_file_dst}\"\n\n    md5_file_src=$(md5sum \"${output_src}\" | awk '{print $1}')\n    path_file_src=$(md5sum \"${output_src}\" | awk '{print $2}')\n    print_center \"MD5 for output src file: ${md5_file_src}\"\n    print_center \"path for output src file: ${path_file_src}\"\n    cp \"${output_src}\" \"${output_dst}\"\n    md5_file_dst=$(md5sum \"${output_dst}\" | awk '{print $1}')\n    path_file_dst=$(md5sum \"${output_dst}\" | awk '{print $2}')\n    print_center \"MD5 for output dst file: ${md5_file_dst}\"\n    print_center \"path for output dst file: ${path_file_dst}\"\n}\n\nupdate_cmake_and_related_files() {\n    echo \"include(\\${GOLDEN_ROOT}/${case_name}/CMakeLists.txt)\" > \"$target_cmakelists\"\n\n    if grep -q \"$input_original_name\" \"$cmake_file_path\"; then\n        sed -i \"s/$input_original_name/${input_target_name}/g\" \"$cmake_file_path\"\n    else\n        sed -i \"s/rotate_nearest_pytorch_frame[0-9]*_input_nhwc/${input_target_name}/g\" \"$cmake_file_path\"\n    fi\n\n    if grep -q \"$output_original_name\" \"$cmake_file_path\"; then\n        sed -i \"s/$output_original_name/${output_target_name}/g\" \"$cmake_file_path\"\n    else\n        sed -i \"s/rotate_nearest_pytorch_frame[0-9]*_output_nhwc/${output_target_name}/g\" \"$cmake_file_path\"\n    fi\n\n    angle_value=$(python read_angle.py \"${angle_bin_path}\")\n    sed -i \"s/#define ANGLE .*/#define ANGLE (${angle_value})/\" \"${rotate_h_path}\"\n}\n\ncompile_and_run_tests() {\n    local runtime_log=\"${runtime_dir}/runtime_frame${frame_id}.log\"\n    local fm_log=\"${runtime_dir}/fm_frame${frame_id}.log\"\n    \n    print_center \"Compiling runtime environment. Logs can be found in ${runtime_log}\"\n    (cd ${runtime_dir} && ./build.sh fm) > \"${runtime_log}\" 2>&1\n    \n    print_center \"Executing fm_d_smoke_test. Logs can be found in ${fm_log}\"\n    (${fm_test_dir}/old_fm_d_smoke_test.bin ${runtime_dir}/builddir/${case_name}/${case_name}.bin) > \"${fm_log}\" 2>&1\n}\n\ncalculate_cosine_similarity() {\n    local golden_file=\"${golden_test_dir}/${output_target_name}.bin\"\n    local sample_file=\"${sample_data_dir}/${case_name}_out.bin\"\n    \n    local md5_file1=$(md5sum \"${golden_file}\" | awk '{print $1}')\n    local md5_file2=$(md5sum \"${sample_file}\" | awk '{print $1}')\n    \n    print_center \"MD5 for golden: ${md5_file1}\"\n    print_center \"MD5 for sample: ${md5_file2}\"\n    \n    if [ \"${md5_file1}\" == \"${md5_file2}\" ]; then\n        print_center \"Files are identical, proceeding to calculate cosine similarity.\"\n        \n        local cosine_script=\"${python_dir}/cosine_similarity.py\"\n        python \"${cosine_script}\" \"${golden_file}\" \"${sample_file}\"\n    else\n        print_center \"Files differ, exiting.\"\n        exit 1\n    fi\n}\n\nmain() {\n    initialize\n    parse_options \"$@\"\n    if [[ $frame_start -eq -1 ]]; then\n        print_center \"Error: No frame specified to process.\"\n        exit 1\n    fi\n\n    for frame in $(seq $frame_start $frame_end); do\n        frame_id=$frame\n        print_center \"Processing frame ${frame_id}...\"\n\n        config\n        run_python_script_and_process_files\n        update_cmake_and_related_files\n        compile_and_run_tests\n        calculate_cosine_similarity\n    done\n}\n\nmain \"$@\"\n```\n\n\n\n\n\n#### python_script\n\n```python\nimport os\nimport sys\nimport argparse\nimport torch\nimport torchvision\nimport numpy as np\nimport torchvision.transforms.functional as F\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sklearn.metrics import mean_squared_error\n\n# 设置打印选项\nnp.set_printoptions(linewidth=400)\ntorch.set_printoptions(linewidth=200)\n\n# 配置参数\nENABLE_FP8_DATA_TYPE = True\nENABLE_OUTPUT_BINARY = True\nENABLE_PRINT = True\nENABLE_NHWC_2_NCHW = True\nINTERPOLATE_MODE = \"nearest\"\nN, C, H, W = 32, 8, 400, 200  # tile_num, Channels, Height, Width\ncenter = (W/2, H/2)\nDATA_PATH = \"/home/dugen/scc_dxm/project_dxm/golden_data/rotate\"\ndtype = np.uint8 if ENABLE_FP8_DATA_TYPE else np.int8\ninterpolation_mode = torchvision.transforms.InterpolationMode.NEAREST\n\n# 居中打印\ndef print_centered(text):\n    terminal_size = os.get_terminal_size().columns\n    print(text.center(terminal_size))\n\ndef parse_args():\n    parser = argparse.ArgumentParser(description=\"Process one or more frames.\")\n    parser.add_argument('-f', '--frame', nargs='+', dest='frame_ids', required=True, help='Frame ID(s) to process.')\n    return parser.parse_args()\n\n# 读取二进制文件\ndef read_bin_file(file_path, dtype):\n    if os.path.exists(file_path):\n        return np.fromfile(file_path, dtype=dtype)\n    else:\n        print_centered(\"File does not exist:\", file_path)\n        return None\n\n# 读取角度值\ndef read_angle_from_bin_file(file_path):\n    if not os.path.exists(file_path):\n        print_centered(\"Angle file does not exist:\", file_path)\n        return 0.0, 0.0\n    with open(file_path, 'rb') as file:\n        angle_fp64 = np.fromfile(file_path, dtype=np.float32)[0]\n        angle_fp32 = float(angle_fp64)\n    return angle_fp32, angle_fp64\n\ndef transform_and_save(data, original_layout, N, H, W, C, filename_prefix):\n    \"\"\"\n    此函数将保存的文件路径修改为脚本所在目录的data_pytorch子目录。\n    \"\"\"\n    save_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'data_pytorch')\n    os.makedirs(save_dir, exist_ok=True)  # 确保目录存在\n\n    if original_layout == 'NCHW':\n        tensor = torch.from_numpy(data.reshape(N, C, H, W))\n    elif original_layout == 'NHWC':\n        tensor = torch.from_numpy(data.reshape(N, H, W, C)).permute(0, 3, 1, 2)\n    else:\n        raise ValueError(\"Unsupported original layout. Expected 'NCHW' or 'NHWC'.\")\n\n    # 文件保存路径调整\n    filename_nchw = os.path.join(save_dir, f\"rotate_{INTERPOLATE_MODE}_pytorch_{filename_prefix}_nchw.bin\")\n    tensor.numpy().tofile(filename_nchw)\n    print_centered(f\"Saved NCHW layout to {filename_nchw}, shape: {tensor.shape}\")\n\n    tensor_nhwc = tensor.permute(0, 2, 3, 1)\n    filename_nhwc = os.path.join(save_dir, f\"rotate_{INTERPOLATE_MODE}_pytorch_{filename_prefix}_nhwc.bin\")\n    tensor_nhwc.numpy().tofile(filename_nhwc)\n    print_centered(f\"Saved NHWC layout to {filename_nhwc}, shape: {tensor_nhwc.shape}\")\n\n# Tensor余弦相似度与MSE比较\ndef tensor_cosine_similarity(tensor_a, tensor_b, thd=0.999):\n    tensor_a = tensor_a.numpy().reshape(1, -1)\n    tensor_b = tensor_b.numpy().reshape(1, -1)\n\n    try:\n        cos_sim = cosine_similarity(tensor_a, tensor_b)[0][0]\n        mse = mean_squared_error(tensor_a, tensor_b)\n    except Exception as e:\n        print_centered(f\"Error calculating metrics: {e}\")\n        sys.exit(1)\n\n    result = 'pass' if cos_sim > thd else 'fail'\n    print_centered(f\"Cosine similarity: {cos_sim}, Mean square error: {mse}, Test result: {result}\")\n    \n    return True if result == 'pass' else False\n\ndef rotate_manual(images_nchw, angle, interpolation_mode, center):\n    N, C, H, W = images_nchw.shape\n    x_c, y_c = center[0] - 0.5, center[1] - 0.5\n    angle_rad = math.radians(angle)\n\n    # 计算 cos 和 sin 的值\n    cos_theta = math.cos(angle_rad)\n    sin_theta = math.sin(angle_rad)\n    x_center = x_c - x_c * cos_theta + y_c * sin_theta\n    y_center = y_c - x_c * sin_theta - y_c * cos_theta\n\n    # 创建一个与输入相同形状的张量来存储旋转后的图像\n    rotated_images_nchw_optimized = torch.zeros_like(images_nchw)\n\n    # 创建网格\n    y_grid, x_grid = torch.meshgrid(torch.arange(H), torch.arange(W), indexing='ij')  \n    y_grid = y_grid.float()\n    x_grid = x_grid.float()\n\n    # 计算旋转后的位置\n    y_i = x_grid * sin_theta + y_grid * cos_theta + y_center\n    x_i = x_grid * cos_theta - y_grid * sin_theta + x_center\n    a1 = y_i\n    b1 = x_i\n\n    # 将新位置的值赋给输出张量的对应位置\n    x_ir = torch.round(x_i).long()\n    y_ir = torch.round(y_i).long()\n\n    x_i = torch.clamp(x_ir, 0, W-1)\n    y_i = torch.clamp(y_ir, 0, H-1)\n    mask = (x_ir >= 0) & (x_ir < W) & (y_ir >= 0) & (y_ir < H)\n\n    rotated_images_nchw_optimized[:, :, mask] = images_nchw[:, :, y_i[mask], x_i[mask]]\n\n    if ENABLE_PRINT:\n        # 在 c, h, w 维度进行打印\n        for c in range(C):\n            for h in range(H):\n                for w in range(W):\n                    if mask[h, w]:\n                        print_centered(f\"(c, y, x) = ({c}, {h}, {w})\\t(y_i, x_i) = ({a1[h, w]}, {b1[h, w]})\\t(round_yi, round_xi) = ({y_ir[h, w]}, {x_ir[h, w]})\\t(int_yi, int_xi) = ({y_i[h, w]}, {x_i[h, w]})\")\n                        # print_centered(f\"rotated_images_nchw_optimized[{c}, {h}, {w}] = {rotated_images_nchw_optimized[c, h, w]}\")\n                        # print_centered(f\"images_nchw[{c}, {y_i[h, w]}, {x_i[h, w]}] = {images_nchw[c, y_i[h, w], x_i[h, w]]}\")\n    else:\n        print_centered(f\"==================== default close rotate debug print func ====================\\n\")\n\n    return rotated_images_nchw_optimized\n##################################### PYTHON_MANUAL_ROTATE_FUNC #####################################\n\n# 主函数\ndef main():\n    args = parse_args()\n    frame_ids = args.frame_ids  # 这将是一个帧ID列表\n\n    for frame_id in frame_ids:\n        frame = f\"frame{frame_id}\"\n        print_centered(f\"Testing {frame}...\")\n        # input_name = f\"{DATA_PATH}/{frame}/Input.prev_bev.1x256x400x200.fp8.bin\"\n        # angle_name = f\"{DATA_PATH}/{frame}/Input.angle.fp64.bin\"\n        # output_name = f\"{DATA_PATH}/{frame}/Golden.prev_bev_out.1x256x400x200.fp8.bin\"\n\n        input_name = f\"{DATA_PATH}/{frame}/Input.prev_bev.32x400x200x8.fp8.bin\"\n        angle_name = f\"{DATA_PATH}/{frame}/Input.angle.fp32.bin\"\n        output_name = f\"{DATA_PATH}/{frame}/Golden.prev_bev_out.32x400x200x8.fp8.bin\"\n\n        # 读取输入和输出数据\n        input_bin = read_bin_file(input_name, dtype)\n        output_bin = read_bin_file(output_name, dtype)\n\n        if ENABLE_NHWC_2_NCHW:\n            original_layout = 'NHWC'\n            input_tensor = torch.from_numpy(input_bin.reshape(N, H, W, C)).permute(0, 3, 1, 2)\n            output_tensor = torch.from_numpy(output_bin.reshape(N, H, W, C)).permute(0, 3, 1, 2)\n        else:\n            original_layout = 'NCHW'\n            input_tensor = torch.from_numpy(input_bin.reshape(N, C, H, W))\n            output_tensor = torch.from_numpy(output_bin.reshape(N, C, H, W))\n        if not ENABLE_OUTPUT_BINARY:\n            output_tensor = rotate_manual(input_tensor, angle_fp32, interpolation_mode, center)\n\n        transform_and_save(input_bin, original_layout, N, H, W, C, f'{frame}_input')\n        transform_and_save(output_bin, original_layout, N, H, W, C, f'{frame}_output')\n\n        # 读取角度\n        angle_fp32, angle_fp64 = read_angle_from_bin_file(angle_name) if os.path.exists(angle_name) else (0.0, 0.0)\n        print_centered(f\"[{frame}] angle (fp64): {angle_fp64:.9f}\")\n        print_centered(f\"[{frame}] angle (fp32): {angle_fp32:.9f}\")\n        \n        rotated_pytorch_tensor = torchvision.transforms.functional.rotate(\n            input_tensor, angle=angle_fp32, interpolation=interpolation_mode, center=center)\n\n        # 比较结果\n        comparison_result = tensor_cosine_similarity(rotated_pytorch_tensor, output_tensor)\n        print_centered(f\"[{frame}] Comparison result: {'Pass' if comparison_result else 'Fail'}\\n\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n# Git\n## github\n\n## gitlab\n\n```bash\ngit init                           # 初始化git仓库\ngit clone <repository_url>         # 克隆远程仓库\ngit checkout -b <branch_name>      # 创建一个新的分支\ngit add .                          # 添加文件到暂存区\ngit commit -m \"<your_message>\"     # 提交更改到本地仓库\ngit push origin rotate_local:rotate_remote    # 推送该分支到远程仓库并指定名称为rotate_remote\ngit branch --set-upstream-to=origin/rotate_remote rotate_local    # 绑定local与remote分支\ngit branch -u origin/rotate_remote rotate_local                   # 简写\ngit push origin rotate_remote      # 推送更改到远程分支\ngit pull origin master             # 拉取远程仓库的最新更改\ngit checkout master\ngit merge <branch_name>            # 将feature合入master\ngit branch -d <branch_name>        # 删除分支\ngit push origin --delete rotate    # 删除origin的远程仓库中的rotate分支\n\n# demo001\ngit init\ngit add .\ngit commit -m \"dxm_first_blog\"\ngit remote add origin git@github.com:dxm2301/blog_ddd.git\ngit remote set-url origin git@github.com:dxm2301/blog_ddd.git\ngit push -u origin master\n```\n\n\n\n\n## girret\n\n# 常用命令\n## software install\n### apt\n```bash\nsudo apt install ./package_file.deb\t# apt安装deb包\n```\n\n### aptitude\n\n\n### dpkg\n```bash\nsudo dpkg -i package_file.deb\t# dpkg安装deb包\n```\n\n## tar\n```bash\ntar -xzvf dxm.tar.gz\n```\n\n- `-x`：解压文件；\n- `-z`：待解压文件是用 gzip 压缩；\n- `-v`：解压过程中显示文件名；\n- `-f`：待解压文件名；\n\n## tree\n\n```bash\ntree -L 2 -af path/to/directory\n```\n- `-L 2`：指定要显示的树的最大深度；\n- `-a`：显示所有文件和目录，包括隐藏的文件和目录；\n- `-f`：打印每个文件的完整路径前缀；\n- `path/to/directory`：显示树结构的目录路径；\n\n## 批量改名\n\n```bash\nrename 's/MH20/MH20_1slice/' MH20_Resize_Conv_16tiles_1slice_int8*.log\n```\n\n\n## scp/sftp\n```bash\nsftp lixiang@10.243.120.94    # 输入密码\n# ls查看远程服务器目录，lls查看本地服务器目录\nlcd /home/dugen/scc_dxm/directory    # 更改本地目录到要包含复制文件的目录\nput file.txt                         # 使用put命令将文件从本地复制到远程服务器\nls                                   # 使用ls确认成功复制到远程服务器\n```\n","source":"_posts/note/general/tutorial_linux.md","raw":"---\ntitle: Tutorial-Linux\ndata: 2024.04.14 18:00\ncategories:\n- Note\ntags:\n- Linux\n- Vim\n- Git\n---\n\n# Vim\n\n> - <a href=\"https://www.runoob.com/linux/linux-vim.html\">vim菜鸟教程</a>\n\n## 键位图\n![vim_keyboard](001.png)\n## vim常用功能\n> - vim操作逻辑：\n>   - {operator} + {motion} = action ：一次编辑动作\n>   - {count} + {action}：重复count次action操作\n> - Command模式：\n>   - `:w`：保存文件；\n>   - `:q`：退出 Vim 编辑器；\n>   - `:wq`：保存文件并退出 Vim 编辑器；\n>   - `:q!`：强制退出Vim编辑器，不保存修改；\n\n### 光标移动、复制粘贴、搜索替换\n#### 光标移动\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Styled Table</title>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n    .custom-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    .custom-table th, .custom-table td {\n        padding: 8px;\n        text-align: center;\n        border-bottom: 1px solid #ddd;\n    }\n    .custom-table tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n    .custom-table tr:hover {\n        background-color: #f5f5f5;\n    }\n    .custom-table thead {\n        position: sticky;\n        top: 0;\n        background-color: #808080;\n        color: white;\n    }\n    .custom-table thead tr:hover {\n        background-color: #a9a9a9;\n        color: black;\n    }\n    .custom-table, .custom-table th, .custom-table td {\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<!-- 你的HTML内容将在这里，比如具体的表格数据 -->\n</body>\n</html>\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>h、j、k、l</td>\n            <td>光标向左、下、上、右移动一个字符</td>\n        </tr>\n        <tr>\n            <td>n {motion}/n space/n enter</td>\n            <td>motion执行n次/向右移动n字符/向下移动n行</td>\n        </tr>\n        <tr>\n            <td>0</td>\n            <td>行首</td>\n        </tr>\n        <tr>\n            <td>$</td>\n            <td>行尾</td>\n        </tr>\n        <tr>\n            <td>^</td>\n            <td>第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>G</td>\n            <td>文档最后一行</td>\n        </tr>\n        <tr>\n            <td>ngg/nG</td>\n            <td>移动到文档第n行（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>+/-</td>\n            <td>非空格符的下/上一行</td>\n        </tr>\n        <tr>\n            <td>m{mark}/`{mark}</td>\n            <td>当前位置标记为mark/跳转到mark位置</td>\n        </tr>\n        <tr>\n            <td>zt/zz/zb</td>\n            <td>将当前行移至窗口顶部/中央/底部</td>\n        </tr>\n        <tr>\n            <td>H/M/L</td>\n            <td>光标移动到屏幕第一行/中间行/最后一行</td>\n        </tr>\n        <tr>\n            <td>ctrl + f/ctrl + b</td>\n            <td>屏幕向下/上移动一页</td>\n        </tr>\n        <tr>\n            <td>ctrl + d/ctrl + u</td>\n            <td>屏幕向下/上移动半页</td>\n        </tr>\n        <tr>\n            <td>v/ctrl + v</td>\n            <td>视觉模式/列视觉模式</td>\n        </tr>\n        <tr>\n            <td>v + < / v + ></td>\n            <td>首行缩进/取消缩进</td>\n        </tr>\n    </tbody>\n</table>\n\n#### 搜索替换\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>/pattern ?pattern</td>\n            <td>在文本中向下/上搜索pattern字符</td>\n        </tr>\n        <tr>\n            <td>*</td>\n            <td>等价于/pattern</td>\n        </tr>\n        <tr>\n            <td>n/N</td>\n            <td>重复前一个搜索操作/反向重复前一个搜索操作</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/word1/word2/gc</td>\n            <td>在n1~n2行之间将word1替换成word2</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/\\<word1\\>/word2/gc</td>\n            <td>精准匹配字符串word1</td>\n        </tr>\n        <tr>\n            <td>:1,$s/word1/word2/g 或 :%s/word1/word2/g</td>\n            <td>替换范围为第一行～最后一行</td>\n        </tr>\n        <tr>\n            <td>* + :%s//pattern2/gc</td>\n            <td>使用*快速选中pattern1进行替换</td>\n        </tr>\n        <tr>\n            <td>v + s/^/\\/\\//（\\cc）</td>\n            <td>添加行前注释</td>\n        </tr>\n        <tr>\n            <td>v + s/^\\/\\///（\\cu）</td>\n            <td>取消行前注释</td>\n        </tr>\n    </tbody>\n</table>\n\n#### 删除复制粘贴\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>nx/nX</td>\n            <td>向后/前删除n个字符（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>dd/ndd</td>\n            <td>删除当前行/删除光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>dG/d1G</td>\n            <td>删除光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>d$/d0/d^</td>\n            <td>删除光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>di{/da{/di(/da(</td>\n            <td>删除{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>diw/daw</td>\n            <td>删除光标所在单词/删除光标所在单词及后面的空格（单词后无空格则删除单词前空格）</td>\n        </tr>\n        <tr>\n            <td>yy/nyy</td>\n            <td>复制当前行/复制光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>yG/y1G</td>\n            <td>复制光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>y$/y0/y^</td>\n            <td>复制光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>yi{/ya{/yi(/ya(</td>\n            <td>复制{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>yiw/yaw</td>\n            <td>复制光标所在单词/复制光标所在单词及后面的空格（单词后无空格则复制单词前空格）</td>\n        </tr>\n        <tr>\n            <td>p/P</td>\n            <td>在光标后/前粘贴（复制整行时在下一行/上一行粘贴）</td>\n        </tr>\n        <tr>\n            <td>cw/ciw/caw/c$/c0/c^</td>\n            <td>更改光标位置到单词末尾/整个单词/包含空格的整个单词/行尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>J</td>\n            <td>将当前行和下一行合并为1行</td>\n        </tr>\n        <tr>\n            <td>.</td>\n            <td>重复前一个动作</td>\n        </tr>\n        <tr>\n            <td>u</td>\n            <td>撤销最近的修改</td>\n        </tr>\n        <tr>\n            <td>ctrl + r</td>\n            <td>nromal模式：u撤销更改后，ctrl + r重做这些更改<br>insert模式：ctrl + r + \"/%/number，插入寄存器内容（当前缓冲区/文件名称/寄存器number）</td>\n        </tr>\n    </tbody>\n</table>\n\n### 编辑模式\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>i, I</td>\n            <td>当前光标位置输入/当前行第一个非空字符位置输入</td>\n        </tr>\n        <tr>\n            <td>a, A</td>\n            <td>当前光标下一个字符位置输入/当前行最后一个字符位置输入</td>\n        </tr>\n        <tr>\n            <td>o, O</td>\n            <td>当前行下一行/上一行插入一个新行</td>\n        </tr>\n        <tr>\n            <td>r, R</td>\n            <td>替换光标位置字符/一直替换光标所在位置字符</td>\n        </tr>\n        <tr>\n            <td>[Esc]</td>\n            <td>退出Insert模式，回到Normal模式</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n\n\n## plug-in\n- `vim ~/.vimrc`：添加需要更改的设置，每次启动vim自动更新配置\n\n```bash\nset number               \" 开启行号显示, set nonumber\nset hlsearch             \" 搜索时高亮显示匹配项\nset cursorline           \" 高亮显示当前行，set nocursorline\n\" set relativenumber: 开启相对行数；set norelativenumber: 关闭相对行数\n\nset tabstop=4            \" 设置一个 Tab 为 4 个字符宽\nset shiftwidth=4         \" 设置缩进 4 个字符宽\nset expandtab            \" 使用空格代替 Tab\n\ncall plug#begin('~/.vim/plugged')   \" 开始插件配置\nPlug 'scrooloose/nerdcommenter'    \" 添加插件：方便的注释功能\nPlug 'mg979/vim-visual-multi', {'branch': 'master'}  \" 添加插件：多光标编辑支持\ncall plug#end()                    \" 结束插件配置\n\n\" 设置标签页的正常显示样式\nhighlight TabLineFill ctermfg=LightGrey ctermbg=DarkGrey  \" 设置未激活标签的填充颜色\nhighlight TabLine ctermfg=White ctermbg=Black             \" 设置未激活标签的颜色\nhighlight TabLineSel ctermfg=Black ctermbg=LightGrey      \" 设置激活标签的颜色\n\n\" 使当前激活的标签页更加明显\nset tabline=%!MyTabLine()     \" 设置自定义标签页行显示\nfunction MyTabLine()          \" 定义一个函数来自定义标签行\n  let s = ''\n  for i in range(tabpagenr('$'))   \" 遍历所有标签页\n    \" 添加分界符和页面序号\n    let s .= '%' . (i + 1) . 'T'\n    \" 当前页使用特殊颜色\n    let s .= (i + 1 == tabpagenr() ? '%#TabLineSel#' : '%#TabLine#')\n    \" 设置标签名或显示文件名\n    let s .= ' ' . (i + 1) . '. ' . GetTabLabel(i + 1) . ' '\n  endfor\n  \" 添加最后的填充\n  let s .= '%#TabLineFill#%T'\n  return s \nendfunction\n\nfunction GetTabLabel(n)      \" 定义一个函数获取标签的标签名\n  \" 返回第n个标签的标签名称或文件名\n  let buflist = tabpagebuflist(a:n)  \" 获取指定标签页的缓冲区列表\n  let winnr = tabpagewinnr(a:n)      \" 获取激活的窗口编号\n  return bufname(buflist[winnr - 1]) \" 返回当前窗口缓冲区的文件名\nendfunction\n```\n\n### 注释插件\n```bash\n# 安装 vim-plug 插件（插件管理器）\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\nhttps://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\n# 在～/.vimrc文件中添加以下内容\nvim ~/.vimrc\ncall plug#begin('~/.vim/plugged')\nPlug 'scrooloose/nerdcommenter'\ncall plug#end()\n\n# 重新打开vim，运行以下命令从 GitHub 下载并安装 nerdcommenter 插件\n:PlugInstall\n```\n\n\n\n\n\n\n\n\n\n\n# 文本处理工具\n## grep\n\n> grep [options] pattern [files]\n\n- `options`：\n  - `-i`：忽略大小写差异。（ignore）\n  - `-v`：反向匹配，仅显示不包含匹配文本的行。（invert match）\n  - `-n`：显示匹配行及其行号。（line number）\n  - `-r`或`-R`：递归查找，搜索指定目录下的所有文件和子目录。（recursive）\n  - `-l`：仅列出包含匹配行的文件名，而不显示匹配的文本。（list file with matches）\n  - `-c`：仅显示每个文件中匹配到的行数。（count）\n- `pattern`：这是你要搜索的文本或正则表达式。\n- `files`：这是一个或多个要搜索的文件。如果省略此参数，grep将从标准输入读取数据。\n\n\n```bash\ngrep \"\\[npu::inst_cluster3::tile\\[0\\]::sv\\]\" debug.log > c3t0.log\ngrep -e \"SV_U2U_W\" -e \"SV_U2U_R\" debug.log > 1.txt        # 搜索带有U2U_W和U2U_R的行\ngrep -o \"cluster8::tile\\[0\\].*\" debug.log > 2.txt         # 搜索匹配cluster8::tile0及后续内容的行\ngrep -o \"cluster8::tile\\[0\\].*SV_U2U_W.*\" debug.log > 3.txt\ngrep \"关键字1\" 文件名 ｜ grep \"关键字2\" > 3.txt\ngrep -o \"\\[Tile 32.* Update.*\" 1.data > 4.txt\ngrep -e \"slice.*axi_w1\" -e \"slice.*u2u_r\" 5.txt | sed 's/axi_w1/u2u_w/g' > sv.log\n\ngrep --text \"count\" | wc -l\n```\n\n\n\n## awk\n\n> awk [options] 'program' [files]\n\n- `program`：通常由pattern + action组成：\n  - 模式匹配（pattern）：选择哪些行需要应用action（默认应用所有行）；\n  - 操作{ action }：包括但不限于**打印**、**修改**、**处理**数据（默认为 print）；\n- `files`：指定输入文件的名称（省略/- 读取标准输入）；\n- 常用命令结构：\n  - pattern { action }：当输入行匹配pattern时，执行action；\n  - BEGIN { action }：在处理任何输入行之前执行的action。\n  - END { action }：在处理完所有输入行之后执行的action。\n- 常用选项：\n  - -F fs：设置输入字段的分隔符为fs。\n  - -v var=value：在程序开始之前，设置一个awk变量var的值为value。\n\n```bash\n# 打印文件每一行\nawk '{print}' filename\n\n# 打印所有包含“error”的行，/error/是pattern用于筛选文本\nawk '/error/ {print $0}' filename\n\n# 模式匹配 + 正则表达式进一步细化筛选条件\nawk '/error/ && $1 > 100 {print $0}' filename\n# 对特定字段进行pattern匹配\nawk '$2 ~ /pattern/ {print $0}' filename\n\n# 条件打印，如果第2个变量字符长度大于4则打印第1、3个变量\nawk '$2 > 4 {print $1, $3}' filename\nawk 'length($2) > 4 {print $1, $3}' filename\nawk '/length($2) > 4/ {print $1, $3}' filename\n```\n\n### 示例\n#### accuracy_mismatch\n\n- awk命令\n\n```bash\nawk '{\n    if (match($0, /\\(c, y, x\\) = \\([^)]+\\)/)) {\n        cxy = substr($0, RSTART, RLENGTH);\n    }\n    if (match($0, /\\(round_yi, round_xi\\) = \\([^)]+\\)/)) {\n        ryx = substr($0, RSTART, RLENGTH);\n    }\n    if (cxy && ryx)\n        print cxy, ryx;\n}' 1.log > 2.log\n```\n\n- src.log\n\n```tex\nTesting frame80...\nSaved NCHW layout to rotate_nearest_pytorch_frame80_input_nchw.bin, shape: torch.Size([32, 8, 400, 200])\nSaved NHWC layout to rotate_nearest_pytorch_frame80_input_nhwc.bin, shape: torch.Size([32, 400, 200, 8])\nSaved NCHW layout to rotate_nearest_pytorch_frame80_output_nchw.bin, shape: torch.Size([32, 8, 400, 200])\nSaved NHWC layout to rotate_nearest_pytorch_frame80_output_nhwc.bin, shape: torch.Size([32, 400, 200, 8])\n[frame80] angle (fp64): 11.595370230811710\n[frame80] angle (fp32): 11.595370230811710\n(c, y, x) = (0, 0, 77)  (y_i, x_i) = (-0.4509754180908203, 117.55844116210938)  (round_yi, round_xi) = (0, 118) (int_yi, int_xi) = (0, 118)\n(c, y, x) = (0, 0, 78)  (y_i, x_i) = (-0.24997615814208984, 118.53804016113281) (round_yi, round_xi) = (0, 119) (int_yi, int_xi) = (0, 119)\n(c, y, x) = (0, 0, 79)  (y_i, x_i) = (-0.04897785186767578, 119.51762390136719) (round_yi, round_xi) = (0, 120) (int_yi, int_xi) = (0, 120)\n(c, y, x) = (0, 0, 80)  (y_i, x_i) = (0.15202045440673828, 120.49722290039062)  (round_yi, round_xi) = (0, 120) (int_yi, int_xi) = (0, 120)\n(c, y, x) = (0, 0, 81)  (y_i, x_i) = (0.35302066802978516, 121.476806640625)    (round_yi, round_xi) = (0, 121) (int_yi, int_xi) = (0, 121)\n(c, y, x) = (0, 0, 82)  (y_i, x_i) = (0.5540189743041992, 122.45640563964844)   (round_yi, round_xi) = (1, 122) (int_yi, int_xi) = (1, 122)\n(c, y, x) = (0, 0, 83)  (y_i, x_i) = (0.7550172805786133, 123.43598937988281)   (round_yi, round_xi) = (1, 123) (int_yi, int_xi) = (1, 123)\n```\n\n- dst.log\n\n```tex\n(c, y, x) = (0, 0, 77) (round_yi, round_xi) = (0, 118)\n(c, y, x) = (0, 0, 78) (round_yi, round_xi) = (0, 119)\n(c, y, x) = (0, 0, 79) (round_yi, round_xi) = (0, 120)\n(c, y, x) = (0, 0, 80) (round_yi, round_xi) = (0, 120)\n(c, y, x) = (0, 0, 81) (round_yi, round_xi) = (0, 121)\n(c, y, x) = (0, 0, 82) (round_yi, round_xi) = (1, 122)\n(c, y, x) = (0, 0, 83) (round_yi, round_xi) = (1, 123)\n```\n\n#### sv_log\n\n- awk命令\n\n```bash\nawk '/Tile 0/ && /Update/ {\n    idx = index($0, \"[Tile\");\n    if (idx > 0) {\n        print substr($0, idx);\n    }\n}' 1.txt > 3.log\n\n# 使用grep实现\ngrep -e \"Tile 0\" 1.txt | grep \"Update\" | grep -o \"\\[Tile.*\" > 4.log\n```\n\n- src.log\n\n```tex\n# New execution started\n2024-03-20 17:19:06.198119828 :0 NOTICE[0]: spike_fm_top: init\n2024-03-20 17:19:06.198125820 :0 NOTICE[0]: spike_fm_top: init ccpu program 0 hcpu program 0\n2024-03-20 17:19:06.198126357 :0 NOTICE[0]: spike_fm_top: init ccpu option 0\n2024-03-20 17:19:06.198126755 :0 NOTICE[0]: spike_fm_top: init hcpu option 0\n2024-03-20 17:19:06.198127737 :0 NOTICE[0]: spike_fm_top: init ccpu body \n2024-03-20 17:19:06.217334580 :0 NOTICE[0]: spike_fm_top: init hcpu body \n2024-03-20 17:19:06.221835469 :0 NOTICE[0]: spike_fm_top: init finished\n2024-03-20 17:19:06.256568272 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Started one instruction.\n2024-03-20 17:19:06.258692580 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Finished one instruction.\n2024-03-20 17:19:06.316320218 :0 NOTICE[2]: [Tile 0 SVCTRL]: Started one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.317258092 :0 NOTICE[2]: [Tile 0 SVCTRL]: Finished one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.317264341 :0 NOTICE[2]: [Tile 0]: Update SV_TILE_CTRL = 0\n2024-03-20 17:19:06.317266446 :0 NOTICE[2]: [Tile 0]: Update SV_DRB_W = 00\n2024-03-20 17:19:06.317268676 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_R0 = 0\n2024-03-20 17:19:06.317270666 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_W0 = 0\n2024-03-20 17:19:06.317272391 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_R1 = 0\n2024-03-20 17:19:06.317273934 :0 NOTICE[2]: [Tile 0]: Update SV_AXI_W1 = 0\n2024-03-20 17:19:06.317255146 :0 NOTICE[5]: [Tile 0]: Update SV_CE_R0 = 0\n2024-03-20 17:19:06.318227982 :0 NOTICE[5]: [Tile 0]: Update SV_CE_W0 = 0\n2024-03-20 17:19:06.318230260 :0 NOTICE[5]: [Tile 0]: Update SV_CE_R1 = 0\n2024-03-20 17:19:06.318231995 :0 NOTICE[5]: [Tile 0]: Update SV_CE_W1 = 0\n2024-03-20 17:19:06.317267074 :0 NOTICE[6]: [Tile 0]: Update SV_U2U_R = 0\n2024-03-20 17:19:06.318271057 :0 NOTICE[6]: [Tile 0]: Update SV_U2U_W = 0\n2024-03-20 17:19:06.317256828 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_NLU_W = 0\n2024-03-20 17:19:06.318557186 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_ACT_R = 0\n2024-03-20 17:19:06.318560228 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_WGT_R = 0\n2024-03-20 17:19:06.318562885 :0 NOTICE[3]: [Tile 0]: Update SV_TCC_WSE_R = 0\n2024-03-20 17:19:06.318927308 :0 NOTICE[0]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Starting one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.317258352 :0 NOTICE[4]: [Tile 0]: Update SV_CVU_R0 = 0\n2024-03-20 17:19:06.319172200 :0 NOTICE[4]: [Tile 0]: Update SV_CVU_R1 = 0\n2024-03-20 17:19:06.319176623 :0 NOTICE[4]: [Tile 0]: Update SV_CVU_W = 0\n2024-03-20 17:19:06.319634699 :0 NOTICE[2]: [Tile 0Barrier: fenck ack.\n2024-03-20 17:19:06.319661379 :0 NOTICE[1]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Receive from tile 0\n2024-03-20 17:19:06.319687388 :0 NOTICE[1]: [T=16]Barrier mask 0000000000000000000000000000000000000000000000000000000000000001 passed: Finished one instruction. Instr tag: 0x0\n2024-03-20 17:19:06.323494662 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Started one instruction.\n2024-03-20 17:19:06.325598258 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Update Tile 0 SV_DRB_W++\n2024-03-20 17:19:06.325705359 :0 NOTICE[1]: [Tile 0]: Update SV_DRB_W = 1\n```\n\n- dst.log\n\n```tex\n[Tile 0]: Update SV_TILE_CTRL = 0\n[Tile 0]: Update SV_DRB_W = 00\n[Tile 0]: Update SV_AXI_R0 = 0\n[Tile 0]: Update SV_AXI_W0 = 0\n[Tile 0]: Update SV_AXI_R1 = 0\n[Tile 0]: Update SV_AXI_W1 = 0\n[Tile 0]: Update SV_CE_R0 = 0\n[Tile 0]: Update SV_CE_W0 = 0\n[Tile 0]: Update SV_CE_R1 = 0\n[Tile 0]: Update SV_CE_W1 = 0\n[Tile 0]: Update SV_U2U_R = 0\n[Tile 0]: Update SV_U2U_W = 0\n[Tile 0]: Update SV_TCC_NLU_W = 0\n[Tile 0]: Update SV_TCC_ACT_R = 0\n[Tile 0]: Update SV_TCC_WGT_R = 0\n[Tile 0]: Update SV_TCC_WSE_R = 0\n[Tile 0]: Update SV_CVU_R0 = 0\n[Tile 0]: Update SV_CVU_R1 = 0\n[Tile 0]: Update SV_CVU_W = 0\n[Tile 0]: Update SV_DRB_W = 1\n```\n\n\n\n## sed\n\n## others\n\n\n# shell script\n\n## 基础语法\n```bash\n${}：\n${} 主要用于变量替换和参数替换。\n${var} 表示取变量 var 的值。\n${var:-default} 表示如果变量 var 未定义或者为空，则使用默认值 default。\n${var:=default} 表示如果变量 var 未定义或者为空，则将其设置为默认值 default。\n${#var} 表示返回变量 var 的长度。\n${var:start:length} 表示从变量 var 的第 start 个字符开始，截取 length 个字符。\n等等。\n$()：\n$() 是命令替换的语法，用于将命令的输出结果赋值给变量或者直接输出。\n$() 中放置的命令会被执行，并且 $() 会将命令的标准输出作为结果返回。\n例如，var=$(command) 表示执行 command 命令，并将其输出赋值给变量 var。\n```\n\n\n### dxm_cf.sh\n\n> `./dxm_cf.sh -c MH20_Resize_Conv_16tiles_2slice_int8 -s pm`\n\n```bash\n#!/bin/bash\nset -euo pipefail\n\nfunction usage() {\n    cat << EOF\n    Usage: $0 [options]\n    Options:\n    -h|--help               This Message.\n    -c|--case_name          Case name\n    -s|--stage              Stage name (pm, runtime, fm, python)\nEOF\n}\n\nfunction options_parse() {\n    while [ $# -gt 0 ]; do\n        case \"$1\" in\n            -c|--case_name)\n              if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                case_name=$2\n                shift\n              fi\n              ;;\n            -s|--stage)\n              if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                stage=$2\n                shift\n              fi\n              ;;\n            -*|-h|--help)\n                usage\n                exit 0\n                ;;\n            *)\n                print_center \"Error: Invalid argument\"\n                usage\n                exit 1\n                ;;\n        esac\n        shift\n    done\n}\n\nfunction print_center() {\n    local text=$1\n    local cols=$(tput cols)\n    printf \"%*s\\n\" $(((${#text}+$cols)/2)) \"$text\"\n}\n\nif [ $# -eq 0 ]; then\n    usage\n    exit 1\nfi\noptions_parse $@\nprint_center \"================ $0 $case_name $stage ================\"\n\n# define common file path\nworkspace_dir=$(pwd)\nlog_dir=\"${workspace_dir}/log/${case_name}\"\nmkdir -p ${log_dir}\npm_log=\"${log_dir}/${case_name}_pm.log\"\nruntime_log=\"${log_dir}/${case_name}_runtime.log\"\nfm_log=\"${log_dir}/${case_name}_fm.log\"\ncamera_fusion_instr_data=\"${workspace_dir}/runtime/test/golden_test/schu_instr_executor/massive_hit/${case_name}/\"\ncamera_fusion_bin=\"${workspace_dir}/runtime/builddir/massive_hit_${case_name}/massive_hit_${case_name}.bin\"\ngolden_output_bin=\"${camera_fusion_instr_data}golden_output.bin\"\nmicrobench_out_bin=\"${workspace_dir}/data/microbench_camera_fusion_out.bin\"\nmeson_build_file=\"${workspace_dir}/dataflow_net/meson.build\"\ntestcase_resize=\"${workspace_dir}/dataflow_net/op_net/ops/test_ops/resize/testcase_resize.cpp\"\n\nfunction pm_compile() {\n    cd \"${workspace_dir}/dataflow_net/builddir\"\n    local slice_num=$(echo \"${case_name}\" | grep -oP '\\d+slice' | grep -oP '\\d+')\n\n    if [[ \"$slice_num\" == \"1\" ]]; then\n        sed -i 's/^\\(#define MULTI_SLICE_ENABLE\\)/\\/\\/\\1/' \"$testcase_resize\"\n    else\n        sed -i 's/^\\/\\/\\(.*#define MULTI_SLICE_ENABLE.*\\)/\\1/' \"$testcase_resize\"\n    fi\n\n    sed -i -e \"s/#define SLICE_NUM .*/#define SLICE_NUM ${slice_num}/\" \\\n           -e \"s/#define CASE_NAME .*/#define CASE_NAME \\\"${case_name}\\\"/\" \"$testcase_resize\"\n\n    if grep -q \"executable ('resize'\" \"$meson_build_file\"; then\n        print_center \"resize ====> ${case_name}\"\n        sed -i \"s/executable ('resize'/executable ('${case_name}'/g\" \"$meson_build_file\"\n    else\n        original_pattern=$(awk '{\n            if (match($0, /MH20_Resize_Conv_16tiles_[0-9]+slice_int8/)) {\n                print substr($0, RSTART, RLENGTH)\n            }\n        }' \"$meson_build_file\")\n\n        if [[ -n \"$original_pattern\" ]]; then\n            print_center \"${original_pattern} ====> ${case_name}\"\n            sed -i \"s/$original_pattern/${case_name}/g\" \"$meson_build_file\"\n        fi\n    fi\n\n    print_center \"================ $case_name pm compile start ================\"\n    ninja ${case_name} &> ${pm_log} || { print_center \"Compilation failed, exiting...\"; exit 1; }\n    ./${case_name} >> ${pm_log} 2>&1\n    print_center \"================ $case_name pm compile end ================\"\n}\n\nfunction runtime_compile() {\n    if [ ! -d \\\"${camera_fusion_instr_data}\\\" ]; then\n        mkdir -p ${camera_fusion_instr_data}\n    fi\n    cp -rf ${workspace_dir}/dataflow_net/builddir/net_dataflow/${case_name}/* ${camera_fusion_instr_data}\n    cd ${workspace_dir}/runtime\n    print_center \"================ ${case_name} runtime compile start ================\"\n    echo 'include(${GOLDEN_ROOT}/schu_instr_executor/CMakeLists.txt)' > ${workspace_dir}/runtime/test/golden_test/CMakeLists.txt\n    ${workspace_dir}/runtime/build.sh fm --cf-case=${case_name} &> ${runtime_log}\n    print_center \"================ ${case_name} runtime compile end ================\"\n    cd ${workspace_dir}\n}\n\nfunction fm_execute() {\n    print_center \"================ ${case_name} fm execute start ================\"\n    ${workspace_dir}/ebb_model/fm/test/spike_fm_smoke/old_fm_d_smoke_test.bin ${camera_fusion_bin} &> ${fm_log}\n    print_center \"================ ${case_name} fm execute end ================\"\n}\n\nfunction python_check_result() {\n    print_center \"================ ${case_name} pyton check result start ================\"\n    python ${workspace_dir}/project_dxm/rotate/cosine_similarity.py ${golden_output_bin} ${microbench_out_bin}\n    print_center \"================ ${case_name} python check result end ================\"\n}\n\ndeclare -A stages=(\n    [\"pm\"]=\"pm_compile\"\n    [\"runtime\"]=\"runtime_compile\"\n    [\"fm\"]=\"fm_execute\"\n    [\"python\"]=\"python_check_result\"\n)\n\nexecute=false\nfor key in \"pm\" \"runtime\" \"fm\" \"python\"; do\n    if [[ $stage == $key || $execute == true || -z $stage ]]; then\n        execute=true\n        eval \"${stages[$key]}\"\n    fi\ndone\n```\n\n\n\n### dxm_vdk.sh\n\n> `./dxm_vdk_rotate.sh -c rotate -s 1 -e 10`\n\n#### shell_script\n\n```bash\n#!/bin/bash\n\nusage() {\n    cat << EOF\n    Usage: $0 [options]\n    Options:\n    -h|--help               Show this message.\n    -s|--start              Start frame number to process.\n    -e|--end                End frame number to process (if not provided, defaults to start frame).\n    -c|--case_name          Case name to process (default is ${case_name}).\nEOF\n}\n\nprint_center() {\n    local text=$1\n    local cols=$(tput cols)\n    printf \"%*s\\n\" $(((${#text}+$cols)/2)) \"$text\"\n}\n\ninitialize() {\n    set -euo pipefail\n    print_center \"Initializing script variables and paths...\"\n    workspace_dir=$(pwd)\n    runtime_dir=\"${workspace_dir}/runtime\"\n    fm_test_dir=\"${workspace_dir}/ebb_model/fm/test/spike_fm_smoke\"\n    sample_data_dir=\"${workspace_dir}/data\"\n    python_dir=\"${workspace_dir}/project_dxm/rotate\"\n    frame_id=\"\"\n    frame_start=\"-1\"\n    frame_end=\"-1\"\n    print_center \"Initialization complete.\"\n}\n\nconfig() {\n    print_center \"Configuring paths and names for frame ${frame_id}...\"\n    case_name=\"microbench_ipu_rotate_32tiles_fp8_nearest\"\n    input_original_name=\"input_200x400x8_fp8_32tile_nearest\"\n    output_original_name=\"output_200x400x8_fp8_32tile_nearest\"\n    input_target_name=\"rotate_nearest_pytorch_frame${frame_id}_input_nhwc\"\n    output_target_name=\"rotate_nearest_pytorch_frame${frame_id}_output_nhwc\"\n\n    golden_test=\"${workspace_dir}/runtime/test/golden_test\"\n    target_cmakelists=\"${golden_test}/CMakeLists.txt\"\n    golden_test_dir=\"${golden_test}/${case_name}/data\"\n    cmake_file_path=\"${golden_test}/${case_name}/CMakeLists.txt\"\n    rotate_h_path=\"${golden_test}/${case_name}/include/rotate.h\"\n    angle_bin_path=\"${workspace_dir}/project_dxm/golden_data/rotate/frame${frame_id}/Input.angle.fp32.bin\"\n    print_center \"Configuration for frame ${frame_id} done.\"\n}\n\nparse_options() {\n    print_center \"Parsing command line options...\"\n\n    while [ $# -gt 0 ]; do\n        case \"$1\" in\n            -s|--start)\n                if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                    frame_start=$2\n                    shift\n                else\n                    print_center \"Error: Missing start frame number\"\n                    exit 1\n                fi\n                ;;\n            -e|--end)\n                if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                    frame_end=$2\n                    shift\n                else\n                    print_center \"Error: Missing end frame number\"\n                    exit 1\n                fi\n                ;;\n            -c|--case_name)\n                if [[ ! -z $2 ]] && [[ $2 != -* ]];then\n                    case_name=$2\n                    shift\n                else\n                    print_center \"Error: Missing case name\"\n                    exit 1\n                fi\n                ;;\n            -*|-h|--help)\n                usage\n                exit 0\n                ;;\n            *)\n                print_center \"Error: Invalid argument\"\n                usage\n                exit 1\n                ;;\n        esac\n        shift\n    done\n\n    if [[ $frame_start -ne -1 ]] && [[ $frame_end -eq -1 ]]; then\n        frame_end=$frame_start\n    fi\n\n    print_center \"Command line options parsed successfully. Start Frame: ${frame_start}, End Frame: ${frame_end}\"\n}\n\nrun_python_script_and_process_files() {\n    print_center \"Running Python script for frame ID: ${frame_id}...\"\n    python_script=\"${python_dir}/rotate_dxm.py\"\n    python_command=\"python ${python_script} -f ${frame_id}\"\n    if ${python_command}; then\n        print_center \"Python script executed successfully.\"\n    else\n        print_center \"Failed to execute Python script.\"\n        exit 1\n    fi\n\n    print_center \"Copying generated NHWC bin files to golden test directory...\"\n    local input_src=\"${python_dir}/data_pytorch/${input_target_name}.bin\"\n    local output_src=\"${python_dir}/data_pytorch/${output_target_name}.bin\"\n    local input_dst=\"${golden_test_dir}/${input_target_name}.bin\"\n    local output_dst=\"${golden_test_dir}/${output_target_name}.bin\"\n\n    local md5_file_src=$(md5sum \"${input_src}\" | awk '{print $1}')\n    local path_file_src=$(md5sum \"${input_src}\" | awk '{print $2}')\n    print_center \"MD5 for input src file: ${md5_file_src}\"\n    print_center \"path for input src file: ${path_file_src}\"\n    cp \"${input_src}\" \"${input_dst}\"\n    local md5_file_dst=$(md5sum \"${input_dst}\" | awk '{print $1}')\n    local path_file_dst=$(md5sum \"${input_dst}\" | awk '{print $2}')\n    print_center \"MD5 for input dst file: ${md5_file_dst}\"\n    print_center \"path for input dst file: ${path_file_dst}\"\n\n    md5_file_src=$(md5sum \"${output_src}\" | awk '{print $1}')\n    path_file_src=$(md5sum \"${output_src}\" | awk '{print $2}')\n    print_center \"MD5 for output src file: ${md5_file_src}\"\n    print_center \"path for output src file: ${path_file_src}\"\n    cp \"${output_src}\" \"${output_dst}\"\n    md5_file_dst=$(md5sum \"${output_dst}\" | awk '{print $1}')\n    path_file_dst=$(md5sum \"${output_dst}\" | awk '{print $2}')\n    print_center \"MD5 for output dst file: ${md5_file_dst}\"\n    print_center \"path for output dst file: ${path_file_dst}\"\n}\n\nupdate_cmake_and_related_files() {\n    echo \"include(\\${GOLDEN_ROOT}/${case_name}/CMakeLists.txt)\" > \"$target_cmakelists\"\n\n    if grep -q \"$input_original_name\" \"$cmake_file_path\"; then\n        sed -i \"s/$input_original_name/${input_target_name}/g\" \"$cmake_file_path\"\n    else\n        sed -i \"s/rotate_nearest_pytorch_frame[0-9]*_input_nhwc/${input_target_name}/g\" \"$cmake_file_path\"\n    fi\n\n    if grep -q \"$output_original_name\" \"$cmake_file_path\"; then\n        sed -i \"s/$output_original_name/${output_target_name}/g\" \"$cmake_file_path\"\n    else\n        sed -i \"s/rotate_nearest_pytorch_frame[0-9]*_output_nhwc/${output_target_name}/g\" \"$cmake_file_path\"\n    fi\n\n    angle_value=$(python read_angle.py \"${angle_bin_path}\")\n    sed -i \"s/#define ANGLE .*/#define ANGLE (${angle_value})/\" \"${rotate_h_path}\"\n}\n\ncompile_and_run_tests() {\n    local runtime_log=\"${runtime_dir}/runtime_frame${frame_id}.log\"\n    local fm_log=\"${runtime_dir}/fm_frame${frame_id}.log\"\n    \n    print_center \"Compiling runtime environment. Logs can be found in ${runtime_log}\"\n    (cd ${runtime_dir} && ./build.sh fm) > \"${runtime_log}\" 2>&1\n    \n    print_center \"Executing fm_d_smoke_test. Logs can be found in ${fm_log}\"\n    (${fm_test_dir}/old_fm_d_smoke_test.bin ${runtime_dir}/builddir/${case_name}/${case_name}.bin) > \"${fm_log}\" 2>&1\n}\n\ncalculate_cosine_similarity() {\n    local golden_file=\"${golden_test_dir}/${output_target_name}.bin\"\n    local sample_file=\"${sample_data_dir}/${case_name}_out.bin\"\n    \n    local md5_file1=$(md5sum \"${golden_file}\" | awk '{print $1}')\n    local md5_file2=$(md5sum \"${sample_file}\" | awk '{print $1}')\n    \n    print_center \"MD5 for golden: ${md5_file1}\"\n    print_center \"MD5 for sample: ${md5_file2}\"\n    \n    if [ \"${md5_file1}\" == \"${md5_file2}\" ]; then\n        print_center \"Files are identical, proceeding to calculate cosine similarity.\"\n        \n        local cosine_script=\"${python_dir}/cosine_similarity.py\"\n        python \"${cosine_script}\" \"${golden_file}\" \"${sample_file}\"\n    else\n        print_center \"Files differ, exiting.\"\n        exit 1\n    fi\n}\n\nmain() {\n    initialize\n    parse_options \"$@\"\n    if [[ $frame_start -eq -1 ]]; then\n        print_center \"Error: No frame specified to process.\"\n        exit 1\n    fi\n\n    for frame in $(seq $frame_start $frame_end); do\n        frame_id=$frame\n        print_center \"Processing frame ${frame_id}...\"\n\n        config\n        run_python_script_and_process_files\n        update_cmake_and_related_files\n        compile_and_run_tests\n        calculate_cosine_similarity\n    done\n}\n\nmain \"$@\"\n```\n\n\n\n\n\n#### python_script\n\n```python\nimport os\nimport sys\nimport argparse\nimport torch\nimport torchvision\nimport numpy as np\nimport torchvision.transforms.functional as F\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sklearn.metrics import mean_squared_error\n\n# 设置打印选项\nnp.set_printoptions(linewidth=400)\ntorch.set_printoptions(linewidth=200)\n\n# 配置参数\nENABLE_FP8_DATA_TYPE = True\nENABLE_OUTPUT_BINARY = True\nENABLE_PRINT = True\nENABLE_NHWC_2_NCHW = True\nINTERPOLATE_MODE = \"nearest\"\nN, C, H, W = 32, 8, 400, 200  # tile_num, Channels, Height, Width\ncenter = (W/2, H/2)\nDATA_PATH = \"/home/dugen/scc_dxm/project_dxm/golden_data/rotate\"\ndtype = np.uint8 if ENABLE_FP8_DATA_TYPE else np.int8\ninterpolation_mode = torchvision.transforms.InterpolationMode.NEAREST\n\n# 居中打印\ndef print_centered(text):\n    terminal_size = os.get_terminal_size().columns\n    print(text.center(terminal_size))\n\ndef parse_args():\n    parser = argparse.ArgumentParser(description=\"Process one or more frames.\")\n    parser.add_argument('-f', '--frame', nargs='+', dest='frame_ids', required=True, help='Frame ID(s) to process.')\n    return parser.parse_args()\n\n# 读取二进制文件\ndef read_bin_file(file_path, dtype):\n    if os.path.exists(file_path):\n        return np.fromfile(file_path, dtype=dtype)\n    else:\n        print_centered(\"File does not exist:\", file_path)\n        return None\n\n# 读取角度值\ndef read_angle_from_bin_file(file_path):\n    if not os.path.exists(file_path):\n        print_centered(\"Angle file does not exist:\", file_path)\n        return 0.0, 0.0\n    with open(file_path, 'rb') as file:\n        angle_fp64 = np.fromfile(file_path, dtype=np.float32)[0]\n        angle_fp32 = float(angle_fp64)\n    return angle_fp32, angle_fp64\n\ndef transform_and_save(data, original_layout, N, H, W, C, filename_prefix):\n    \"\"\"\n    此函数将保存的文件路径修改为脚本所在目录的data_pytorch子目录。\n    \"\"\"\n    save_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'data_pytorch')\n    os.makedirs(save_dir, exist_ok=True)  # 确保目录存在\n\n    if original_layout == 'NCHW':\n        tensor = torch.from_numpy(data.reshape(N, C, H, W))\n    elif original_layout == 'NHWC':\n        tensor = torch.from_numpy(data.reshape(N, H, W, C)).permute(0, 3, 1, 2)\n    else:\n        raise ValueError(\"Unsupported original layout. Expected 'NCHW' or 'NHWC'.\")\n\n    # 文件保存路径调整\n    filename_nchw = os.path.join(save_dir, f\"rotate_{INTERPOLATE_MODE}_pytorch_{filename_prefix}_nchw.bin\")\n    tensor.numpy().tofile(filename_nchw)\n    print_centered(f\"Saved NCHW layout to {filename_nchw}, shape: {tensor.shape}\")\n\n    tensor_nhwc = tensor.permute(0, 2, 3, 1)\n    filename_nhwc = os.path.join(save_dir, f\"rotate_{INTERPOLATE_MODE}_pytorch_{filename_prefix}_nhwc.bin\")\n    tensor_nhwc.numpy().tofile(filename_nhwc)\n    print_centered(f\"Saved NHWC layout to {filename_nhwc}, shape: {tensor_nhwc.shape}\")\n\n# Tensor余弦相似度与MSE比较\ndef tensor_cosine_similarity(tensor_a, tensor_b, thd=0.999):\n    tensor_a = tensor_a.numpy().reshape(1, -1)\n    tensor_b = tensor_b.numpy().reshape(1, -1)\n\n    try:\n        cos_sim = cosine_similarity(tensor_a, tensor_b)[0][0]\n        mse = mean_squared_error(tensor_a, tensor_b)\n    except Exception as e:\n        print_centered(f\"Error calculating metrics: {e}\")\n        sys.exit(1)\n\n    result = 'pass' if cos_sim > thd else 'fail'\n    print_centered(f\"Cosine similarity: {cos_sim}, Mean square error: {mse}, Test result: {result}\")\n    \n    return True if result == 'pass' else False\n\ndef rotate_manual(images_nchw, angle, interpolation_mode, center):\n    N, C, H, W = images_nchw.shape\n    x_c, y_c = center[0] - 0.5, center[1] - 0.5\n    angle_rad = math.radians(angle)\n\n    # 计算 cos 和 sin 的值\n    cos_theta = math.cos(angle_rad)\n    sin_theta = math.sin(angle_rad)\n    x_center = x_c - x_c * cos_theta + y_c * sin_theta\n    y_center = y_c - x_c * sin_theta - y_c * cos_theta\n\n    # 创建一个与输入相同形状的张量来存储旋转后的图像\n    rotated_images_nchw_optimized = torch.zeros_like(images_nchw)\n\n    # 创建网格\n    y_grid, x_grid = torch.meshgrid(torch.arange(H), torch.arange(W), indexing='ij')  \n    y_grid = y_grid.float()\n    x_grid = x_grid.float()\n\n    # 计算旋转后的位置\n    y_i = x_grid * sin_theta + y_grid * cos_theta + y_center\n    x_i = x_grid * cos_theta - y_grid * sin_theta + x_center\n    a1 = y_i\n    b1 = x_i\n\n    # 将新位置的值赋给输出张量的对应位置\n    x_ir = torch.round(x_i).long()\n    y_ir = torch.round(y_i).long()\n\n    x_i = torch.clamp(x_ir, 0, W-1)\n    y_i = torch.clamp(y_ir, 0, H-1)\n    mask = (x_ir >= 0) & (x_ir < W) & (y_ir >= 0) & (y_ir < H)\n\n    rotated_images_nchw_optimized[:, :, mask] = images_nchw[:, :, y_i[mask], x_i[mask]]\n\n    if ENABLE_PRINT:\n        # 在 c, h, w 维度进行打印\n        for c in range(C):\n            for h in range(H):\n                for w in range(W):\n                    if mask[h, w]:\n                        print_centered(f\"(c, y, x) = ({c}, {h}, {w})\\t(y_i, x_i) = ({a1[h, w]}, {b1[h, w]})\\t(round_yi, round_xi) = ({y_ir[h, w]}, {x_ir[h, w]})\\t(int_yi, int_xi) = ({y_i[h, w]}, {x_i[h, w]})\")\n                        # print_centered(f\"rotated_images_nchw_optimized[{c}, {h}, {w}] = {rotated_images_nchw_optimized[c, h, w]}\")\n                        # print_centered(f\"images_nchw[{c}, {y_i[h, w]}, {x_i[h, w]}] = {images_nchw[c, y_i[h, w], x_i[h, w]]}\")\n    else:\n        print_centered(f\"==================== default close rotate debug print func ====================\\n\")\n\n    return rotated_images_nchw_optimized\n##################################### PYTHON_MANUAL_ROTATE_FUNC #####################################\n\n# 主函数\ndef main():\n    args = parse_args()\n    frame_ids = args.frame_ids  # 这将是一个帧ID列表\n\n    for frame_id in frame_ids:\n        frame = f\"frame{frame_id}\"\n        print_centered(f\"Testing {frame}...\")\n        # input_name = f\"{DATA_PATH}/{frame}/Input.prev_bev.1x256x400x200.fp8.bin\"\n        # angle_name = f\"{DATA_PATH}/{frame}/Input.angle.fp64.bin\"\n        # output_name = f\"{DATA_PATH}/{frame}/Golden.prev_bev_out.1x256x400x200.fp8.bin\"\n\n        input_name = f\"{DATA_PATH}/{frame}/Input.prev_bev.32x400x200x8.fp8.bin\"\n        angle_name = f\"{DATA_PATH}/{frame}/Input.angle.fp32.bin\"\n        output_name = f\"{DATA_PATH}/{frame}/Golden.prev_bev_out.32x400x200x8.fp8.bin\"\n\n        # 读取输入和输出数据\n        input_bin = read_bin_file(input_name, dtype)\n        output_bin = read_bin_file(output_name, dtype)\n\n        if ENABLE_NHWC_2_NCHW:\n            original_layout = 'NHWC'\n            input_tensor = torch.from_numpy(input_bin.reshape(N, H, W, C)).permute(0, 3, 1, 2)\n            output_tensor = torch.from_numpy(output_bin.reshape(N, H, W, C)).permute(0, 3, 1, 2)\n        else:\n            original_layout = 'NCHW'\n            input_tensor = torch.from_numpy(input_bin.reshape(N, C, H, W))\n            output_tensor = torch.from_numpy(output_bin.reshape(N, C, H, W))\n        if not ENABLE_OUTPUT_BINARY:\n            output_tensor = rotate_manual(input_tensor, angle_fp32, interpolation_mode, center)\n\n        transform_and_save(input_bin, original_layout, N, H, W, C, f'{frame}_input')\n        transform_and_save(output_bin, original_layout, N, H, W, C, f'{frame}_output')\n\n        # 读取角度\n        angle_fp32, angle_fp64 = read_angle_from_bin_file(angle_name) if os.path.exists(angle_name) else (0.0, 0.0)\n        print_centered(f\"[{frame}] angle (fp64): {angle_fp64:.9f}\")\n        print_centered(f\"[{frame}] angle (fp32): {angle_fp32:.9f}\")\n        \n        rotated_pytorch_tensor = torchvision.transforms.functional.rotate(\n            input_tensor, angle=angle_fp32, interpolation=interpolation_mode, center=center)\n\n        # 比较结果\n        comparison_result = tensor_cosine_similarity(rotated_pytorch_tensor, output_tensor)\n        print_centered(f\"[{frame}] Comparison result: {'Pass' if comparison_result else 'Fail'}\\n\")\n\nif __name__ == \"__main__\":\n    main()\n```\n\n# Git\n## github\n\n## gitlab\n\n```bash\ngit init                           # 初始化git仓库\ngit clone <repository_url>         # 克隆远程仓库\ngit checkout -b <branch_name>      # 创建一个新的分支\ngit add .                          # 添加文件到暂存区\ngit commit -m \"<your_message>\"     # 提交更改到本地仓库\ngit push origin rotate_local:rotate_remote    # 推送该分支到远程仓库并指定名称为rotate_remote\ngit branch --set-upstream-to=origin/rotate_remote rotate_local    # 绑定local与remote分支\ngit branch -u origin/rotate_remote rotate_local                   # 简写\ngit push origin rotate_remote      # 推送更改到远程分支\ngit pull origin master             # 拉取远程仓库的最新更改\ngit checkout master\ngit merge <branch_name>            # 将feature合入master\ngit branch -d <branch_name>        # 删除分支\ngit push origin --delete rotate    # 删除origin的远程仓库中的rotate分支\n\n# demo001\ngit init\ngit add .\ngit commit -m \"dxm_first_blog\"\ngit remote add origin git@github.com:dxm2301/blog_ddd.git\ngit remote set-url origin git@github.com:dxm2301/blog_ddd.git\ngit push -u origin master\n```\n\n\n\n\n## girret\n\n# 常用命令\n## software install\n### apt\n```bash\nsudo apt install ./package_file.deb\t# apt安装deb包\n```\n\n### aptitude\n\n\n### dpkg\n```bash\nsudo dpkg -i package_file.deb\t# dpkg安装deb包\n```\n\n## tar\n```bash\ntar -xzvf dxm.tar.gz\n```\n\n- `-x`：解压文件；\n- `-z`：待解压文件是用 gzip 压缩；\n- `-v`：解压过程中显示文件名；\n- `-f`：待解压文件名；\n\n## tree\n\n```bash\ntree -L 2 -af path/to/directory\n```\n- `-L 2`：指定要显示的树的最大深度；\n- `-a`：显示所有文件和目录，包括隐藏的文件和目录；\n- `-f`：打印每个文件的完整路径前缀；\n- `path/to/directory`：显示树结构的目录路径；\n\n## 批量改名\n\n```bash\nrename 's/MH20/MH20_1slice/' MH20_Resize_Conv_16tiles_1slice_int8*.log\n```\n\n\n## scp/sftp\n```bash\nsftp lixiang@10.243.120.94    # 输入密码\n# ls查看远程服务器目录，lls查看本地服务器目录\nlcd /home/dugen/scc_dxm/directory    # 更改本地目录到要包含复制文件的目录\nput file.txt                         # 使用put命令将文件从本地复制到远程服务器\nls                                   # 使用ls确认成功复制到远程服务器\n```\n","slug":"note/general/tutorial_linux","published":1,"date":"2024-04-20T13:08:48.705Z","updated":"2024-04-20T14:16:57.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clv88mb08000987uf1jqq6m23","content":"<h1 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h1><blockquote>\n<ul>\n<li><a href=\"https://www.runoob.com/linux/linux-vim.html\">vim菜鸟教程</a></li>\n</ul>\n</blockquote>\n<h2 id=\"键位图\"><a href=\"#键位图\" class=\"headerlink\" title=\"键位图\"></a>键位图</h2><p><img src=\"/2024/04/20/note/general/tutorial_linux/001.png\" alt=\"vim_keyboard\"></p>\n<h2 id=\"vim常用功能\"><a href=\"#vim常用功能\" class=\"headerlink\" title=\"vim常用功能\"></a>vim常用功能</h2><blockquote>\n<ul>\n<li>vim操作逻辑：<ul>\n<li>{operator} + {motion} &#x3D; action ：一次编辑动作</li>\n<li>{count} + {action}：重复count次action操作</li>\n</ul>\n</li>\n<li>Command模式：<ul>\n<li><code>:w</code>：保存文件；</li>\n<li><code>:q</code>：退出 Vim 编辑器；</li>\n<li><code>:wq</code>：保存文件并退出 Vim 编辑器；</li>\n<li><code>:q!</code>：强制退出Vim编辑器，不保存修改；</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"光标移动、复制粘贴、搜索替换\"><a href=\"#光标移动、复制粘贴、搜索替换\" class=\"headerlink\" title=\"光标移动、复制粘贴、搜索替换\"></a>光标移动、复制粘贴、搜索替换</h3><h4 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h4><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Styled Table</title>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n    .custom-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    .custom-table th, .custom-table td {\n        padding: 8px;\n        text-align: center;\n        border-bottom: 1px solid #ddd;\n    }\n    .custom-table tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n    .custom-table tr:hover {\n        background-color: #f5f5f5;\n    }\n    .custom-table thead {\n        position: sticky;\n        top: 0;\n        background-color: #808080;\n        color: white;\n    }\n    .custom-table thead tr:hover {\n        background-color: #a9a9a9;\n        color: black;\n    }\n    .custom-table, .custom-table th, .custom-table td {\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<!-- 你的HTML内容将在这里，比如具体的表格数据 -->\n</body>\n</html>\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>h、j、k、l</td>\n            <td>光标向左、下、上、右移动一个字符</td>\n        </tr>\n        <tr>\n            <td>n {motion}/n space/n enter</td>\n            <td>motion执行n次/向右移动n字符/向下移动n行</td>\n        </tr>\n        <tr>\n            <td>0</td>\n            <td>行首</td>\n        </tr>\n        <tr>\n            <td>$</td>\n            <td>行尾</td>\n        </tr>\n        <tr>\n            <td>^</td>\n            <td>第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>G</td>\n            <td>文档最后一行</td>\n        </tr>\n        <tr>\n            <td>ngg/nG</td>\n            <td>移动到文档第n行（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>+/-</td>\n            <td>非空格符的下/上一行</td>\n        </tr>\n        <tr>\n            <td>m{mark}/`{mark}</td>\n            <td>当前位置标记为mark/跳转到mark位置</td>\n        </tr>\n        <tr>\n            <td>zt/zz/zb</td>\n            <td>将当前行移至窗口顶部/中央/底部</td>\n        </tr>\n        <tr>\n            <td>H/M/L</td>\n            <td>光标移动到屏幕第一行/中间行/最后一行</td>\n        </tr>\n        <tr>\n            <td>ctrl + f/ctrl + b</td>\n            <td>屏幕向下/上移动一页</td>\n        </tr>\n        <tr>\n            <td>ctrl + d/ctrl + u</td>\n            <td>屏幕向下/上移动半页</td>\n        </tr>\n        <tr>\n            <td>v/ctrl + v</td>\n            <td>视觉模式/列视觉模式</td>\n        </tr>\n        <tr>\n            <td>v + < / v + ></td>\n            <td>首行缩进/取消缩进</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4 id=\"搜索替换\"><a href=\"#搜索替换\" class=\"headerlink\" title=\"搜索替换\"></a>搜索替换</h4><table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>/pattern ?pattern</td>\n            <td>在文本中向下/上搜索pattern字符</td>\n        </tr>\n        <tr>\n            <td>*</td>\n            <td>等价于/pattern</td>\n        </tr>\n        <tr>\n            <td>n/N</td>\n            <td>重复前一个搜索操作/反向重复前一个搜索操作</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/word1/word2/gc</td>\n            <td>在n1~n2行之间将word1替换成word2</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/\\<word1\\>/word2/gc</word1\\></td>\n            <td>精准匹配字符串word1</td>\n        </tr>\n        <tr>\n            <td>:1,$s/word1/word2/g 或 :%s/word1/word2/g</td>\n            <td>替换范围为第一行～最后一行</td>\n        </tr>\n        <tr>\n            <td>* + :%s//pattern2/gc</td>\n            <td>使用*快速选中pattern1进行替换</td>\n        </tr>\n        <tr>\n            <td>v + s/^/\\/\\//（\\cc）</td>\n            <td>添加行前注释</td>\n        </tr>\n        <tr>\n            <td>v + s/^\\/\\///（\\cu）</td>\n            <td>取消行前注释</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4 id=\"删除复制粘贴\"><a href=\"#删除复制粘贴\" class=\"headerlink\" title=\"删除复制粘贴\"></a>删除复制粘贴</h4><table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>nx/nX</td>\n            <td>向后/前删除n个字符（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>dd/ndd</td>\n            <td>删除当前行/删除光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>dG/d1G</td>\n            <td>删除光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>d$/d0/d^</td>\n            <td>删除光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>di{/da{/di(/da(</td>\n            <td>删除{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>diw/daw</td>\n            <td>删除光标所在单词/删除光标所在单词及后面的空格（单词后无空格则删除单词前空格）</td>\n        </tr>\n        <tr>\n            <td>yy/nyy</td>\n            <td>复制当前行/复制光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>yG/y1G</td>\n            <td>复制光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>y$/y0/y^</td>\n            <td>复制光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>yi{/ya{/yi(/ya(</td>\n            <td>复制{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>yiw/yaw</td>\n            <td>复制光标所在单词/复制光标所在单词及后面的空格（单词后无空格则复制单词前空格）</td>\n        </tr>\n        <tr>\n            <td>p/P</td>\n            <td>在光标后/前粘贴（复制整行时在下一行/上一行粘贴）</td>\n        </tr>\n        <tr>\n            <td>cw/ciw/caw/c$/c0/c^</td>\n            <td>更改光标位置到单词末尾/整个单词/包含空格的整个单词/行尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>J</td>\n            <td>将当前行和下一行合并为1行</td>\n        </tr>\n        <tr>\n            <td>.</td>\n            <td>重复前一个动作</td>\n        </tr>\n        <tr>\n            <td>u</td>\n            <td>撤销最近的修改</td>\n        </tr>\n        <tr>\n            <td>ctrl + r</td>\n            <td>nromal模式：u撤销更改后，ctrl + r重做这些更改<br>insert模式：ctrl + r + \"/%/number，插入寄存器内容（当前缓冲区/文件名称/寄存器number）</td>\n        </tr>\n    </tbody>\n</table>\n\n<h3 id=\"编辑模式\"><a href=\"#编辑模式\" class=\"headerlink\" title=\"编辑模式\"></a>编辑模式</h3><table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>i, I</td>\n            <td>当前光标位置输入/当前行第一个非空字符位置输入</td>\n        </tr>\n        <tr>\n            <td>a, A</td>\n            <td>当前光标下一个字符位置输入/当前行最后一个字符位置输入</td>\n        </tr>\n        <tr>\n            <td>o, O</td>\n            <td>当前行下一行/上一行插入一个新行</td>\n        </tr>\n        <tr>\n            <td>r, R</td>\n            <td>替换光标位置字符/一直替换光标所在位置字符</td>\n        </tr>\n        <tr>\n            <td>[Esc]</td>\n            <td>退出Insert模式，回到Normal模式</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n\n\n<h2 id=\"plug-in\"><a href=\"#plug-in\" class=\"headerlink\" title=\"plug-in\"></a>plug-in</h2><ul>\n<li><code>vim ~/.vimrc</code>：添加需要更改的设置，每次启动vim自动更新配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> number               <span class=\"string\">&quot; 开启行号显示, set nonumber</span></span><br><span class=\"line\"><span class=\"string\">set hlsearch             &quot;</span> 搜索时高亮显示匹配项</span><br><span class=\"line\"><span class=\"built_in\">set</span> cursorline           <span class=\"string\">&quot; 高亮显示当前行，set nocursorline</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> relativenumber: 开启相对行数；<span class=\"built_in\">set</span> norelativenumber: 关闭相对行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> tabstop=4            <span class=\"string\">&quot; 设置一个 Tab 为 4 个字符宽</span></span><br><span class=\"line\"><span class=\"string\">set shiftwidth=4         &quot;</span> 设置缩进 4 个字符宽</span><br><span class=\"line\"><span class=\"built_in\">set</span> expandtab            <span class=\"string\">&quot; 使用空格代替 Tab</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">call plug#begin(&#x27;~/.vim/plugged&#x27;)   &quot;</span> 开始插件配置</span><br><span class=\"line\">Plug <span class=\"string\">&#x27;scrooloose/nerdcommenter&#x27;</span>    <span class=\"string\">&quot; 添加插件：方便的注释功能</span></span><br><span class=\"line\"><span class=\"string\">Plug &#x27;mg979/vim-visual-multi&#x27;, &#123;&#x27;branch&#x27;: &#x27;master&#x27;&#125;  &quot;</span> 添加插件：多光标编辑支持</span><br><span class=\"line\">call plug<span class=\"comment\">#end()                    &quot; 结束插件配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置标签页的正常显示样式</span></span><br><span class=\"line\"><span class=\"string\">highlight TabLineFill ctermfg=LightGrey ctermbg=DarkGrey  &quot;</span> 设置未激活标签的填充颜色</span><br><span class=\"line\">highlight TabLine ctermfg=White ctermbg=Black             <span class=\"string\">&quot; 设置未激活标签的颜色</span></span><br><span class=\"line\"><span class=\"string\">highlight TabLineSel ctermfg=Black ctermbg=LightGrey      &quot;</span> 设置激活标签的颜色</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 使当前激活的标签页更加明显</span></span><br><span class=\"line\"><span class=\"string\">set tabline=%!MyTabLine()     &quot;</span> 设置自定义标签页行显示</span><br><span class=\"line\"><span class=\"keyword\">function</span> MyTabLine()          <span class=\"string\">&quot; 定义一个函数来自定义标签行</span></span><br><span class=\"line\"><span class=\"string\">  let s = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">  for i in range(tabpagenr(&#x27;$&#x27;))   &quot;</span> 遍历所有标签页</span><br><span class=\"line\">    <span class=\"string\">&quot; 添加分界符和页面序号</span></span><br><span class=\"line\"><span class=\"string\">    let s .= &#x27;%&#x27; . (i + 1) . &#x27;T&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span> 当前页使用特殊颜色</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s .= (i + 1 == tabpagenr() ? <span class=\"string\">&#x27;%#TabLineSel#&#x27;</span> : <span class=\"string\">&#x27;%#TabLine#&#x27;</span>)</span><br><span class=\"line\">    <span class=\"string\">&quot; 设置标签名或显示文件名</span></span><br><span class=\"line\"><span class=\"string\">    let s .= &#x27; &#x27; . (i + 1) . &#x27;. &#x27; . GetTabLabel(i + 1) . &#x27; &#x27;</span></span><br><span class=\"line\"><span class=\"string\">  endfor</span></span><br><span class=\"line\"><span class=\"string\">  &quot;</span> 添加最后的填充</span><br><span class=\"line\">  <span class=\"built_in\">let</span> s .= <span class=\"string\">&#x27;%#TabLineFill#%T&#x27;</span></span><br><span class=\"line\">  <span class=\"built_in\">return</span> s </span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> GetTabLabel(n)      <span class=\"string\">&quot; 定义一个函数获取标签的标签名</span></span><br><span class=\"line\"><span class=\"string\">  &quot;</span> 返回第n个标签的标签名称或文件名</span><br><span class=\"line\">  <span class=\"built_in\">let</span> buflist = tabpagebuflist(a:n)  <span class=\"string\">&quot; 获取指定标签页的缓冲区列表</span></span><br><span class=\"line\"><span class=\"string\">  let winnr = tabpagewinnr(a:n)      &quot;</span> 获取激活的窗口编号</span><br><span class=\"line\">  <span class=\"built_in\">return</span> bufname(buflist[winnr - 1]) <span class=\"string\">&quot; 返回当前窗口缓冲区的文件名</span></span><br><span class=\"line\"><span class=\"string\">endfunction</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注释插件\"><a href=\"#注释插件\" class=\"headerlink\" title=\"注释插件\"></a>注释插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 vim-plug 插件（插件管理器）</span></span><br><span class=\"line\">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\</span><br><span class=\"line\">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在～/.vimrc文件中添加以下内容</span></span><br><span class=\"line\">vim ~/.vimrc</span><br><span class=\"line\">call plug<span class=\"comment\">#begin(&#x27;~/.vim/plugged&#x27;)</span></span><br><span class=\"line\">Plug <span class=\"string\">&#x27;scrooloose/nerdcommenter&#x27;</span></span><br><span class=\"line\">call plug<span class=\"comment\">#end()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新打开vim，运行以下命令从 GitHub 下载并安装 nerdcommenter 插件</span></span><br><span class=\"line\">:PlugInstall</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"文本处理工具\"><a href=\"#文本处理工具\" class=\"headerlink\" title=\"文本处理工具\"></a>文本处理工具</h1><h2 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h2><blockquote>\n<p>grep [options] pattern [files]</p>\n</blockquote>\n<ul>\n<li><code>options</code>：<ul>\n<li><code>-i</code>：忽略大小写差异。（ignore）</li>\n<li><code>-v</code>：反向匹配，仅显示不包含匹配文本的行。（invert match）</li>\n<li><code>-n</code>：显示匹配行及其行号。（line number）</li>\n<li><code>-r</code>或<code>-R</code>：递归查找，搜索指定目录下的所有文件和子目录。（recursive）</li>\n<li><code>-l</code>：仅列出包含匹配行的文件名，而不显示匹配的文本。（list file with matches）</li>\n<li><code>-c</code>：仅显示每个文件中匹配到的行数。（count）</li>\n</ul>\n</li>\n<li><code>pattern</code>：这是你要搜索的文本或正则表达式。</li>\n<li><code>files</code>：这是一个或多个要搜索的文件。如果省略此参数，grep将从标准输入读取数据。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">&quot;\\[npu::inst_cluster3::tile\\[0\\]::sv\\]&quot;</span> debug.log &gt; c3t0.log</span><br><span class=\"line\">grep -e <span class=\"string\">&quot;SV_U2U_W&quot;</span> -e <span class=\"string\">&quot;SV_U2U_R&quot;</span> debug.log &gt; 1.txt        <span class=\"comment\"># 搜索带有U2U_W和U2U_R的行</span></span><br><span class=\"line\">grep -o <span class=\"string\">&quot;cluster8::tile\\[0\\].*&quot;</span> debug.log &gt; 2.txt         <span class=\"comment\"># 搜索匹配cluster8::tile0及后续内容的行</span></span><br><span class=\"line\">grep -o <span class=\"string\">&quot;cluster8::tile\\[0\\].*SV_U2U_W.*&quot;</span> debug.log &gt; 3.txt</span><br><span class=\"line\">grep <span class=\"string\">&quot;关键字1&quot;</span> 文件名 ｜ grep <span class=\"string\">&quot;关键字2&quot;</span> &gt; 3.txt</span><br><span class=\"line\">grep -o <span class=\"string\">&quot;\\[Tile 32.* Update.*&quot;</span> 1.data &gt; 4.txt</span><br><span class=\"line\">grep -e <span class=\"string\">&quot;slice.*axi_w1&quot;</span> -e <span class=\"string\">&quot;slice.*u2u_r&quot;</span> 5.txt | sed <span class=\"string\">&#x27;s/axi_w1/u2u_w/g&#x27;</span> &gt; sv.log</span><br><span class=\"line\"></span><br><span class=\"line\">grep --text <span class=\"string\">&quot;count&quot;</span> | <span class=\"built_in\">wc</span> -l</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h2><blockquote>\n<p>awk [options] ‘program’ [files]</p>\n</blockquote>\n<ul>\n<li><code>program</code>：通常由pattern + action组成：<ul>\n<li>模式匹配（pattern）：选择哪些行需要应用action（默认应用所有行）；</li>\n<li>操作{ action }：包括但不限于<strong>打印</strong>、<strong>修改</strong>、<strong>处理</strong>数据（默认为 print）；</li>\n</ul>\n</li>\n<li><code>files</code>：指定输入文件的名称（省略&#x2F;- 读取标准输入）；</li>\n<li>常用命令结构：<ul>\n<li>pattern { action }：当输入行匹配pattern时，执行action；</li>\n<li>BEGIN { action }：在处理任何输入行之前执行的action。</li>\n<li>END { action }：在处理完所有输入行之后执行的action。</li>\n</ul>\n</li>\n<li>常用选项：<ul>\n<li>-F fs：设置输入字段的分隔符为fs。</li>\n<li>-v var&#x3D;value：在程序开始之前，设置一个awk变量var的值为value。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印文件每一行</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;&#123;print&#125;&#x27;</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印所有包含“error”的行，/error/是pattern用于筛选文本</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;/error/ &#123;print $0&#125;&#x27;</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模式匹配 + 正则表达式进一步细化筛选条件</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;/error/ &amp;&amp; $1 &gt; 100 &#123;print $0&#125;&#x27;</span> filename</span><br><span class=\"line\"><span class=\"comment\"># 对特定字段进行pattern匹配</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;$2 ~ /pattern/ &#123;print $0&#125;&#x27;</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 条件打印，如果第2个变量字符长度大于4则打印第1、3个变量</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;$2 &gt; 4 &#123;print $1, $3&#125;&#x27;</span> filename</span><br><span class=\"line\">awk <span class=\"string\">&#x27;length($2) &gt; 4 &#123;print $1, $3&#125;&#x27;</span> filename</span><br><span class=\"line\">awk <span class=\"string\">&#x27;/length($2) &gt; 4/ &#123;print $1, $3&#125;&#x27;</span> filename</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"accuracy-mismatch\"><a href=\"#accuracy-mismatch\" class=\"headerlink\" title=\"accuracy_mismatch\"></a>accuracy_mismatch</h4><ul>\n<li>awk命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">    if (match($0, /\\(c, y, x\\) = \\([^)]+\\)/)) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        cxy = substr($0, RSTART, RLENGTH);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    if (match($0, /\\(round_yi, round_xi\\) = \\([^)]+\\)/)) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        ryx = substr($0, RSTART, RLENGTH);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    if (cxy &amp;&amp; ryx)</span></span><br><span class=\"line\"><span class=\"string\">        print cxy, ryx;</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span> 1.<span class=\"built_in\">log</span> &gt; 2.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>src.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Testing frame80...</span><br><span class=\"line\">Saved NCHW layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>input<span class=\"built_in\">_</span>nchw.bin, shape: torch.Size([32, 8, 400, 200])</span><br><span class=\"line\">Saved NHWC layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>input<span class=\"built_in\">_</span>nhwc.bin, shape: torch.Size([32, 400, 200, 8])</span><br><span class=\"line\">Saved NCHW layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>output<span class=\"built_in\">_</span>nchw.bin, shape: torch.Size([32, 8, 400, 200])</span><br><span class=\"line\">Saved NHWC layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>output<span class=\"built_in\">_</span>nhwc.bin, shape: torch.Size([32, 400, 200, 8])</span><br><span class=\"line\">[frame80] angle (fp64): 11.595370230811710</span><br><span class=\"line\">[frame80] angle (fp32): 11.595370230811710</span><br><span class=\"line\">(c, y, x) = (0, 0, 77)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (-0.4509754180908203, 117.55844116210938)  (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 118) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 118)</span><br><span class=\"line\">(c, y, x) = (0, 0, 78)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (-0.24997615814208984, 118.53804016113281) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 119) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 119)</span><br><span class=\"line\">(c, y, x) = (0, 0, 79)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (-0.04897785186767578, 119.51762390136719) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 80)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.15202045440673828, 120.49722290039062)  (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 81)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.35302066802978516, 121.476806640625)    (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 121) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 121)</span><br><span class=\"line\">(c, y, x) = (0, 0, 82)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.5540189743041992, 122.45640563964844)   (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 122) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (1, 122)</span><br><span class=\"line\">(c, y, x) = (0, 0, 83)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.7550172805786133, 123.43598937988281)   (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 123) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (1, 123)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>dst.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(c, y, x) = (0, 0, 77) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 118)</span><br><span class=\"line\">(c, y, x) = (0, 0, 78) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 119)</span><br><span class=\"line\">(c, y, x) = (0, 0, 79) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 80) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 81) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 121)</span><br><span class=\"line\">(c, y, x) = (0, 0, 82) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 122)</span><br><span class=\"line\">(c, y, x) = (0, 0, 83) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 123)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"sv-log\"><a href=\"#sv-log\" class=\"headerlink\" title=\"sv_log\"></a>sv_log</h4><ul>\n<li>awk命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">&#x27;/Tile 0/ &amp;&amp; /Update/ &#123;</span></span><br><span class=\"line\"><span class=\"string\">    idx = index($0, &quot;[Tile&quot;);</span></span><br><span class=\"line\"><span class=\"string\">    if (idx &gt; 0) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        print substr($0, idx);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span> 1.txt &gt; 3.<span class=\"built_in\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用grep实现</span></span><br><span class=\"line\">grep -e <span class=\"string\">&quot;Tile 0&quot;</span> 1.txt | grep <span class=\"string\">&quot;Update&quot;</span> | grep -o <span class=\"string\">&quot;\\[Tile.*&quot;</span> &gt; 4.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>src.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">#</span> New execution started</span><br><span class=\"line\">2024-03-20 17:19:06.198119828 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init</span><br><span class=\"line\">2024-03-20 17:19:06.198125820 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init ccpu program 0 hcpu program 0</span><br><span class=\"line\">2024-03-20 17:19:06.198126357 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init ccpu option 0</span><br><span class=\"line\">2024-03-20 17:19:06.198126755 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init hcpu option 0</span><br><span class=\"line\">2024-03-20 17:19:06.198127737 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init ccpu body </span><br><span class=\"line\">2024-03-20 17:19:06.217334580 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init hcpu body </span><br><span class=\"line\">2024-03-20 17:19:06.221835469 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init finished</span><br><span class=\"line\">2024-03-20 17:19:06.256568272 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Started one instruction.</span><br><span class=\"line\">2024-03-20 17:19:06.258692580 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Finished one instruction.</span><br><span class=\"line\">2024-03-20 17:19:06.316320218 :0 NOTICE[2]: [Tile 0 SVCTRL]: Started one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.317258092 :0 NOTICE[2]: [Tile 0 SVCTRL]: Finished one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.317264341 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TILE<span class=\"built_in\">_</span>CTRL = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317266446 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 00</span><br><span class=\"line\">2024-03-20 17:19:06.317268676 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317270666 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317272391 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317273934 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317255146 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318227982 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318230260 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318231995 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317267074 :0 NOTICE[6]: [Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318271057 :0 NOTICE[6]: [Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317256828 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>NLU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318557186 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>ACT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318560228 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WGT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318562885 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WSE<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318927308 :0 NOTICE[0]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Starting one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.317258352 :0 NOTICE[4]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.319172200 :0 NOTICE[4]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.319176623 :0 NOTICE[4]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">2024-03-20 17:19:06.319634699 :0 NOTICE[2]: [Tile 0Barrier: fenck ack.</span><br><span class=\"line\">2024-03-20 17:19:06.319661379 :0 NOTICE[1]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Receive from tile 0</span><br><span class=\"line\">2024-03-20 17:19:06.319687388 :0 NOTICE[1]: [T=16]Barrier mask 0000000000000000000000000000000000000000000000000000000000000001 passed: Finished one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.323494662 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Started one instruction.</span><br><span class=\"line\">2024-03-20 17:19:06.325598258 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Update Tile 0 SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W++</span><br><span class=\"line\">2024-03-20 17:19:06.325705359 :0 NOTICE[1]: [Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 1</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>dst.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TILE<span class=\"built_in\">_</span>CTRL = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 00</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>NLU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>ACT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WGT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WSE<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 1</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"sed\"><a href=\"#sed\" class=\"headerlink\" title=\"sed\"></a>sed</h2><h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><h1 id=\"shell-script\"><a href=\"#shell-script\" class=\"headerlink\" title=\"shell script\"></a>shell script</h1><h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;&#125;</span>：</span><br><span class=\"line\"><span class=\"variable\">$&#123;&#125;</span> 主要用于变量替换和参数替换。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var&#125;</span> 表示取变量 var 的值。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var:-default&#125;</span> 表示如果变量 var 未定义或者为空，则使用默认值 default。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var:=default&#125;</span> 表示如果变量 var 未定义或者为空，则将其设置为默认值 default。</span><br><span class=\"line\"><span class=\"variable\">$&#123;#var&#125;</span> 表示返回变量 var 的长度。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var:start:length&#125;</span> 表示从变量 var 的第 start 个字符开始，截取 length 个字符。</span><br><span class=\"line\">等等。</span><br><span class=\"line\">$()：</span><br><span class=\"line\">$() 是命令替换的语法，用于将命令的输出结果赋值给变量或者直接输出。</span><br><span class=\"line\">$() 中放置的命令会被执行，并且 $() 会将命令的标准输出作为结果返回。</span><br><span class=\"line\">例如，var=$(<span class=\"built_in\">command</span>) 表示执行 <span class=\"built_in\">command</span> 命令，并将其输出赋值给变量 var。</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"dxm-cf-sh\"><a href=\"#dxm-cf-sh\" class=\"headerlink\" title=\"dxm_cf.sh\"></a>dxm_cf.sh</h3><blockquote>\n<p><code>./dxm_cf.sh -c MH20_Resize_Conv_16tiles_2slice_int8 -s pm</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -euo pipefail</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">usage</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">    Usage: $0 [options]</span></span><br><span class=\"line\"><span class=\"string\">    Options:</span></span><br><span class=\"line\"><span class=\"string\">    -h|--help               This Message.</span></span><br><span class=\"line\"><span class=\"string\">    -c|--case_name          Case name</span></span><br><span class=\"line\"><span class=\"string\">    -s|--stage              Stage name (pm, runtime, fm, python)</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">options_parse</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> [ <span class=\"variable\">$#</span> -gt 0 ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">            -c|--case_name)</span><br><span class=\"line\">              <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                case_name=<span class=\"variable\">$2</span></span><br><span class=\"line\">                <span class=\"built_in\">shift</span></span><br><span class=\"line\">              <span class=\"keyword\">fi</span></span><br><span class=\"line\">              ;;</span><br><span class=\"line\">            -s|--stage)</span><br><span class=\"line\">              <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                stage=<span class=\"variable\">$2</span></span><br><span class=\"line\">                <span class=\"built_in\">shift</span></span><br><span class=\"line\">              <span class=\"keyword\">fi</span></span><br><span class=\"line\">              ;;</span><br><span class=\"line\">            -*|-h|--<span class=\"built_in\">help</span>)</span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            *)</span><br><span class=\"line\">                print_center <span class=\"string\">&quot;Error: Invalid argument&quot;</span></span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">        <span class=\"keyword\">esac</span></span><br><span class=\"line\">        <span class=\"built_in\">shift</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">print_center</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> text=<span class=\"variable\">$1</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> cols=$(tput cols)</span><br><span class=\"line\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;%*s\\n&quot;</span> $(((<span class=\"variable\">$&#123;#text&#125;</span>+<span class=\"variable\">$cols</span>)/<span class=\"number\">2</span>)) <span class=\"string\">&quot;<span class=\"variable\">$text</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    usage</span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">options_parse <span class=\"variable\">$@</span></span><br><span class=\"line\">print_center <span class=\"string\">&quot;================ <span class=\"variable\">$0</span> <span class=\"variable\">$case_name</span> <span class=\"variable\">$stage</span> ================&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># define common file path</span></span><br><span class=\"line\">workspace_dir=$(<span class=\"built_in\">pwd</span>)</span><br><span class=\"line\">log_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/log/<span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$&#123;log_dir&#125;</span></span><br><span class=\"line\">pm_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;log_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_pm.log&quot;</span></span><br><span class=\"line\">runtime_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;log_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_runtime.log&quot;</span></span><br><span class=\"line\">fm_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;log_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_fm.log&quot;</span></span><br><span class=\"line\">camera_fusion_instr_data=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/test/golden_test/schu_instr_executor/massive_hit/<span class=\"variable\">$&#123;case_name&#125;</span>/&quot;</span></span><br><span class=\"line\">camera_fusion_bin=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/builddir/massive_hit_<span class=\"variable\">$&#123;case_name&#125;</span>/massive_hit_<span class=\"variable\">$&#123;case_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">golden_output_bin=<span class=\"string\">&quot;<span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span>golden_output.bin&quot;</span></span><br><span class=\"line\">microbench_out_bin=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/data/microbench_camera_fusion_out.bin&quot;</span></span><br><span class=\"line\">meson_build_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/meson.build&quot;</span></span><br><span class=\"line\">testcase_resize=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/op_net/ops/test_ops/resize/testcase_resize.cpp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">pm_compile</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/builddir&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> slice_num=$(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span> | grep -oP <span class=\"string\">&#x27;\\d+slice&#x27;</span> | grep -oP <span class=\"string\">&#x27;\\d+&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"string\">&quot;<span class=\"variable\">$slice_num</span>&quot;</span> == <span class=\"string\">&quot;1&quot;</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&#x27;s/^\\(#define MULTI_SLICE_ENABLE\\)/\\/\\/\\1/&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$testcase_resize</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&#x27;s/^\\/\\/\\(.*#define MULTI_SLICE_ENABLE.*\\)/\\1/&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$testcase_resize</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    sed -i -e <span class=\"string\">&quot;s/#define SLICE_NUM .*/#define SLICE_NUM <span class=\"variable\">$&#123;slice_num&#125;</span>/&quot;</span> \\</span><br><span class=\"line\">           -e <span class=\"string\">&quot;s/#define CASE_NAME .*/#define CASE_NAME \\&quot;<span class=\"variable\">$&#123;case_name&#125;</span>\\&quot;/&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$testcase_resize</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">&quot;executable (&#x27;resize&#x27;&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;resize ====&gt; <span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/executable (&#x27;resize&#x27;/executable (&#x27;<span class=\"variable\">$&#123;case_name&#125;</span>&#x27;/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        original_pattern=$(awk <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">            if (match($0, /MH20_Resize_Conv_16tiles_[0-9]+slice_int8/)) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                print substr($0, RSTART, RLENGTH)</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [[ -n <span class=\"string\">&quot;<span class=\"variable\">$original_pattern</span>&quot;</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            print_center <span class=\"string\">&quot;<span class=\"variable\">$&#123;original_pattern&#125;</span> ====&gt; <span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span></span><br><span class=\"line\">            sed -i <span class=\"string\">&quot;s/<span class=\"variable\">$original_pattern</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$case_name</span> pm compile start ================&quot;</span></span><br><span class=\"line\">    ninja <span class=\"variable\">$&#123;case_name&#125;</span> &amp;&gt; <span class=\"variable\">$&#123;pm_log&#125;</span> || &#123; print_center <span class=\"string\">&quot;Compilation failed, exiting...&quot;</span>; <span class=\"built_in\">exit</span> 1; &#125;</span><br><span class=\"line\">    ./<span class=\"variable\">$&#123;case_name&#125;</span> &gt;&gt; <span class=\"variable\">$&#123;pm_log&#125;</span> 2&gt;&amp;1</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$case_name</span> pm compile end ================&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">runtime_compile</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ ! -d \\&quot;<span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span>\\&quot; ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> -rf <span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/builddir/net_dataflow/<span class=\"variable\">$&#123;case_name&#125;</span>/* <span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span></span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> runtime compile start ================&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;include($&#123;GOLDEN_ROOT&#125;/schu_instr_executor/CMakeLists.txt)&#x27;</span> &gt; <span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/test/golden_test/CMakeLists.txt</span><br><span class=\"line\">    <span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/build.sh fm --cf-case=<span class=\"variable\">$&#123;case_name&#125;</span> &amp;&gt; <span class=\"variable\">$&#123;runtime_log&#125;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> runtime compile end ================&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;workspace_dir&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">fm_execute</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> fm execute start ================&quot;</span></span><br><span class=\"line\">    <span class=\"variable\">$&#123;workspace_dir&#125;</span>/ebb_model/fm/test/spike_fm_smoke/old_fm_d_smoke_test.bin <span class=\"variable\">$&#123;camera_fusion_bin&#125;</span> &amp;&gt; <span class=\"variable\">$&#123;fm_log&#125;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> fm execute end ================&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">python_check_result</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> pyton check result start ================&quot;</span></span><br><span class=\"line\">    python <span class=\"variable\">$&#123;workspace_dir&#125;</span>/project_dxm/rotate/cosine_similarity.py <span class=\"variable\">$&#123;golden_output_bin&#125;</span> <span class=\"variable\">$&#123;microbench_out_bin&#125;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> python check result end ================&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A stages=(</span><br><span class=\"line\">    [<span class=\"string\">&quot;pm&quot;</span>]=<span class=\"string\">&quot;pm_compile&quot;</span></span><br><span class=\"line\">    [<span class=\"string\">&quot;runtime&quot;</span>]=<span class=\"string\">&quot;runtime_compile&quot;</span></span><br><span class=\"line\">    [<span class=\"string\">&quot;fm&quot;</span>]=<span class=\"string\">&quot;fm_execute&quot;</span></span><br><span class=\"line\">    [<span class=\"string\">&quot;python&quot;</span>]=<span class=\"string\">&quot;python_check_result&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">execute=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"string\">&quot;pm&quot;</span> <span class=\"string\">&quot;runtime&quot;</span> <span class=\"string\">&quot;fm&quot;</span> <span class=\"string\">&quot;python&quot;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$stage</span> == <span class=\"variable\">$key</span> || <span class=\"variable\">$execute</span> == <span class=\"literal\">true</span> || -z <span class=\"variable\">$stage</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        execute=<span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"built_in\">eval</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;stages[$key]&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"dxm-vdk-sh\"><a href=\"#dxm-vdk-sh\" class=\"headerlink\" title=\"dxm_vdk.sh\"></a>dxm_vdk.sh</h3><blockquote>\n<p><code>./dxm_vdk_rotate.sh -c rotate -s 1 -e 10</code></p>\n</blockquote>\n<h4 id=\"shell-script-1\"><a href=\"#shell-script-1\" class=\"headerlink\" title=\"shell_script\"></a>shell_script</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">usage</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">    Usage: $0 [options]</span></span><br><span class=\"line\"><span class=\"string\">    Options:</span></span><br><span class=\"line\"><span class=\"string\">    -h|--help               Show this message.</span></span><br><span class=\"line\"><span class=\"string\">    -s|--start              Start frame number to process.</span></span><br><span class=\"line\"><span class=\"string\">    -e|--end                End frame number to process (if not provided, defaults to start frame).</span></span><br><span class=\"line\"><span class=\"string\">    -c|--case_name          Case name to process (default is $&#123;case_name&#125;).</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">print_center</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> text=<span class=\"variable\">$1</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> cols=$(tput cols)</span><br><span class=\"line\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;%*s\\n&quot;</span> $(((<span class=\"variable\">$&#123;#text&#125;</span>+<span class=\"variable\">$cols</span>)/<span class=\"number\">2</span>)) <span class=\"string\">&quot;<span class=\"variable\">$text</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">initialize</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span> -euo pipefail</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Initializing script variables and paths...&quot;</span></span><br><span class=\"line\">    workspace_dir=$(<span class=\"built_in\">pwd</span>)</span><br><span class=\"line\">    runtime_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime&quot;</span></span><br><span class=\"line\">    fm_test_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/ebb_model/fm/test/spike_fm_smoke&quot;</span></span><br><span class=\"line\">    sample_data_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/data&quot;</span></span><br><span class=\"line\">    python_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/project_dxm/rotate&quot;</span></span><br><span class=\"line\">    frame_id=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    frame_start=<span class=\"string\">&quot;-1&quot;</span></span><br><span class=\"line\">    frame_end=<span class=\"string\">&quot;-1&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Initialization complete.&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">config</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Configuring paths and names for frame <span class=\"variable\">$&#123;frame_id&#125;</span>...&quot;</span></span><br><span class=\"line\">    case_name=<span class=\"string\">&quot;microbench_ipu_rotate_32tiles_fp8_nearest&quot;</span></span><br><span class=\"line\">    input_original_name=<span class=\"string\">&quot;input_200x400x8_fp8_32tile_nearest&quot;</span></span><br><span class=\"line\">    output_original_name=<span class=\"string\">&quot;output_200x400x8_fp8_32tile_nearest&quot;</span></span><br><span class=\"line\">    input_target_name=<span class=\"string\">&quot;rotate_nearest_pytorch_frame<span class=\"variable\">$&#123;frame_id&#125;</span>_input_nhwc&quot;</span></span><br><span class=\"line\">    output_target_name=<span class=\"string\">&quot;rotate_nearest_pytorch_frame<span class=\"variable\">$&#123;frame_id&#125;</span>_output_nhwc&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    golden_test=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/test/golden_test&quot;</span></span><br><span class=\"line\">    target_cmakelists=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/CMakeLists.txt&quot;</span></span><br><span class=\"line\">    golden_test_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/data&quot;</span></span><br><span class=\"line\">    cmake_file_path=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/CMakeLists.txt&quot;</span></span><br><span class=\"line\">    rotate_h_path=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/include/rotate.h&quot;</span></span><br><span class=\"line\">    angle_bin_path=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/project_dxm/golden_data/rotate/frame<span class=\"variable\">$&#123;frame_id&#125;</span>/Input.angle.fp32.bin&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Configuration for frame <span class=\"variable\">$&#123;frame_id&#125;</span> done.&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parse_options</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Parsing command line options...&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> [ <span class=\"variable\">$#</span> -gt 0 ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">            -s|--start)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                    frame_start=<span class=\"variable\">$2</span></span><br><span class=\"line\">                    <span class=\"built_in\">shift</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    print_center <span class=\"string\">&quot;Error: Missing start frame number&quot;</span></span><br><span class=\"line\">                    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                <span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            -e|--end)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                    frame_end=<span class=\"variable\">$2</span></span><br><span class=\"line\">                    <span class=\"built_in\">shift</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    print_center <span class=\"string\">&quot;Error: Missing end frame number&quot;</span></span><br><span class=\"line\">                    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                <span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            -c|--case_name)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                    case_name=<span class=\"variable\">$2</span></span><br><span class=\"line\">                    <span class=\"built_in\">shift</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    print_center <span class=\"string\">&quot;Error: Missing case name&quot;</span></span><br><span class=\"line\">                    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                <span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            -*|-h|--<span class=\"built_in\">help</span>)</span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            *)</span><br><span class=\"line\">                print_center <span class=\"string\">&quot;Error: Invalid argument&quot;</span></span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">        <span class=\"keyword\">esac</span></span><br><span class=\"line\">        <span class=\"built_in\">shift</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$frame_start</span> -ne -1 ]] &amp;&amp; [[ <span class=\"variable\">$frame_end</span> -eq -1 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        frame_end=<span class=\"variable\">$frame_start</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Command line options parsed successfully. Start Frame: <span class=\"variable\">$&#123;frame_start&#125;</span>, End Frame: <span class=\"variable\">$&#123;frame_end&#125;</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">run_python_script_and_process_files</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Running Python script for frame ID: <span class=\"variable\">$&#123;frame_id&#125;</span>...&quot;</span></span><br><span class=\"line\">    python_script=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/rotate_dxm.py&quot;</span></span><br><span class=\"line\">    python_command=<span class=\"string\">&quot;python <span class=\"variable\">$&#123;python_script&#125;</span> -f <span class=\"variable\">$&#123;frame_id&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"variable\">$&#123;python_command&#125;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Python script executed successfully.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Failed to execute Python script.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Copying generated NHWC bin files to golden test directory...&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> input_src=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/data_pytorch/<span class=\"variable\">$&#123;input_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> output_src=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/data_pytorch/<span class=\"variable\">$&#123;output_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> input_dst=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test_dir&#125;</span>/<span class=\"variable\">$&#123;input_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> output_dst=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test_dir&#125;</span>/<span class=\"variable\">$&#123;output_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">local</span> path_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for input src file: <span class=\"variable\">$&#123;md5_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for input src file: <span class=\"variable\">$&#123;path_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_src&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">local</span> path_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for input dst file: <span class=\"variable\">$&#123;md5_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for input dst file: <span class=\"variable\">$&#123;path_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    md5_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    path_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for output src file: <span class=\"variable\">$&#123;md5_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for output src file: <span class=\"variable\">$&#123;path_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_src&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    md5_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    path_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for output dst file: <span class=\"variable\">$&#123;md5_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for output dst file: <span class=\"variable\">$&#123;path_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">update_cmake_and_related_files</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;include(\\$&#123;GOLDEN_ROOT&#125;/<span class=\"variable\">$&#123;case_name&#125;</span>/CMakeLists.txt)&quot;</span> &gt; <span class=\"string\">&quot;<span class=\"variable\">$target_cmakelists</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">&quot;<span class=\"variable\">$input_original_name</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/<span class=\"variable\">$input_original_name</span>/<span class=\"variable\">$&#123;input_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/rotate_nearest_pytorch_frame[0-9]*_input_nhwc/<span class=\"variable\">$&#123;input_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">&quot;<span class=\"variable\">$output_original_name</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/<span class=\"variable\">$output_original_name</span>/<span class=\"variable\">$&#123;output_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/rotate_nearest_pytorch_frame[0-9]*_output_nhwc/<span class=\"variable\">$&#123;output_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    angle_value=$(python read_angle.py <span class=\"string\">&quot;<span class=\"variable\">$&#123;angle_bin_path&#125;</span>&quot;</span>)</span><br><span class=\"line\">    sed -i <span class=\"string\">&quot;s/#define ANGLE .*/#define ANGLE (<span class=\"variable\">$&#123;angle_value&#125;</span>)/&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;rotate_h_path&#125;</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">compile_and_run_tests</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> runtime_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;runtime_dir&#125;</span>/runtime_frame<span class=\"variable\">$&#123;frame_id&#125;</span>.log&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> fm_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;runtime_dir&#125;</span>/fm_frame<span class=\"variable\">$&#123;frame_id&#125;</span>.log&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Compiling runtime environment. Logs can be found in <span class=\"variable\">$&#123;runtime_log&#125;</span>&quot;</span></span><br><span class=\"line\">    (<span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;runtime_dir&#125;</span> &amp;&amp; ./build.sh fm) &gt; <span class=\"string\">&quot;<span class=\"variable\">$&#123;runtime_log&#125;</span>&quot;</span> 2&gt;&amp;1</span><br><span class=\"line\">    </span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Executing fm_d_smoke_test. Logs can be found in <span class=\"variable\">$&#123;fm_log&#125;</span>&quot;</span></span><br><span class=\"line\">    (<span class=\"variable\">$&#123;fm_test_dir&#125;</span>/old_fm_d_smoke_test.bin <span class=\"variable\">$&#123;runtime_dir&#125;</span>/builddir/<span class=\"variable\">$&#123;case_name&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>.bin) &gt; <span class=\"string\">&quot;<span class=\"variable\">$&#123;fm_log&#125;</span>&quot;</span> 2&gt;&amp;1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">calculate_cosine_similarity</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> golden_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test_dir&#125;</span>/<span class=\"variable\">$&#123;output_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> sample_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;sample_data_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_out.bin&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file1=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_file&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file2=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;sample_file&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for golden: <span class=\"variable\">$&#123;md5_file1&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for sample: <span class=\"variable\">$&#123;md5_file2&#125;</span>&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$&#123;md5_file1&#125;</span>&quot;</span> == <span class=\"string\">&quot;<span class=\"variable\">$&#123;md5_file2&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Files are identical, proceeding to calculate cosine similarity.&quot;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">local</span> cosine_script=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/cosine_similarity.py&quot;</span></span><br><span class=\"line\">        python <span class=\"string\">&quot;<span class=\"variable\">$&#123;cosine_script&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_file&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;sample_file&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Files differ, exiting.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">main</span></span>() &#123;</span><br><span class=\"line\">    initialize</span><br><span class=\"line\">    parse_options <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$frame_start</span> -eq -1 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Error: No frame specified to process.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> frame <span class=\"keyword\">in</span> $(<span class=\"built_in\">seq</span> <span class=\"variable\">$frame_start</span> <span class=\"variable\">$frame_end</span>); <span class=\"keyword\">do</span></span><br><span class=\"line\">        frame_id=<span class=\"variable\">$frame</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Processing frame <span class=\"variable\">$&#123;frame_id&#125;</span>...&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        config</span><br><span class=\"line\">        run_python_script_and_process_files</span><br><span class=\"line\">        update_cmake_and_related_files</span><br><span class=\"line\">        compile_and_run_tests</span><br><span class=\"line\">        calculate_cosine_similarity</span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"python-script\"><a href=\"#python-script\" class=\"headerlink\" title=\"python_script\"></a>python_script</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torchvision</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> torchvision.transforms.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics.pairwise <span class=\"keyword\">import</span> cosine_similarity</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置打印选项</span></span><br><span class=\"line\">np.set_printoptions(linewidth=<span class=\"number\">400</span>)</span><br><span class=\"line\">torch.set_printoptions(linewidth=<span class=\"number\">200</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置参数</span></span><br><span class=\"line\">ENABLE_FP8_DATA_TYPE = <span class=\"literal\">True</span></span><br><span class=\"line\">ENABLE_OUTPUT_BINARY = <span class=\"literal\">True</span></span><br><span class=\"line\">ENABLE_PRINT = <span class=\"literal\">True</span></span><br><span class=\"line\">ENABLE_NHWC_2_NCHW = <span class=\"literal\">True</span></span><br><span class=\"line\">INTERPOLATE_MODE = <span class=\"string\">&quot;nearest&quot;</span></span><br><span class=\"line\">N, C, H, W = <span class=\"number\">32</span>, <span class=\"number\">8</span>, <span class=\"number\">400</span>, <span class=\"number\">200</span>  <span class=\"comment\"># tile_num, Channels, Height, Width</span></span><br><span class=\"line\">center = (W/<span class=\"number\">2</span>, H/<span class=\"number\">2</span>)</span><br><span class=\"line\">DATA_PATH = <span class=\"string\">&quot;/home/dugen/scc_dxm/project_dxm/golden_data/rotate&quot;</span></span><br><span class=\"line\">dtype = np.uint8 <span class=\"keyword\">if</span> ENABLE_FP8_DATA_TYPE <span class=\"keyword\">else</span> np.int8</span><br><span class=\"line\">interpolation_mode = torchvision.transforms.InterpolationMode.NEAREST</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 居中打印</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_centered</span>(<span class=\"params\">text</span>):</span><br><span class=\"line\">    terminal_size = os.get_terminal_size().columns</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(text.center(terminal_size))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">parse_args</span>():</span><br><span class=\"line\">    parser = argparse.ArgumentParser(description=<span class=\"string\">&quot;Process one or more frames.&quot;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;-f&#x27;</span>, <span class=\"string\">&#x27;--frame&#x27;</span>, nargs=<span class=\"string\">&#x27;+&#x27;</span>, dest=<span class=\"string\">&#x27;frame_ids&#x27;</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;Frame ID(s) to process.&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取二进制文件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_bin_file</span>(<span class=\"params\">file_path, dtype</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(file_path):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.fromfile(file_path, dtype=dtype)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print_centered(<span class=\"string\">&quot;File does not exist:&quot;</span>, file_path)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取角度值</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_angle_from_bin_file</span>(<span class=\"params\">file_path</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(file_path):</span><br><span class=\"line\">        print_centered(<span class=\"string\">&quot;Angle file does not exist:&quot;</span>, file_path)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        angle_fp64 = np.fromfile(file_path, dtype=np.float32)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        angle_fp32 = <span class=\"built_in\">float</span>(angle_fp64)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> angle_fp32, angle_fp64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">transform_and_save</span>(<span class=\"params\">data, original_layout, N, H, W, C, filename_prefix</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    此函数将保存的文件路径修改为脚本所在目录的data_pytorch子目录。</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    save_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), <span class=\"string\">&#x27;data_pytorch&#x27;</span>)</span><br><span class=\"line\">    os.makedirs(save_dir, exist_ok=<span class=\"literal\">True</span>)  <span class=\"comment\"># 确保目录存在</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> original_layout == <span class=\"string\">&#x27;NCHW&#x27;</span>:</span><br><span class=\"line\">        tensor = torch.from_numpy(data.reshape(N, C, H, W))</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> original_layout == <span class=\"string\">&#x27;NHWC&#x27;</span>:</span><br><span class=\"line\">        tensor = torch.from_numpy(data.reshape(N, H, W, C)).permute(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;Unsupported original layout. Expected &#x27;NCHW&#x27; or &#x27;NHWC&#x27;.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 文件保存路径调整</span></span><br><span class=\"line\">    filename_nchw = os.path.join(save_dir, <span class=\"string\">f&quot;rotate_<span class=\"subst\">&#123;INTERPOLATE_MODE&#125;</span>_pytorch_<span class=\"subst\">&#123;filename_prefix&#125;</span>_nchw.bin&quot;</span>)</span><br><span class=\"line\">    tensor.numpy().tofile(filename_nchw)</span><br><span class=\"line\">    print_centered(<span class=\"string\">f&quot;Saved NCHW layout to <span class=\"subst\">&#123;filename_nchw&#125;</span>, shape: <span class=\"subst\">&#123;tensor.shape&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    tensor_nhwc = tensor.permute(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    filename_nhwc = os.path.join(save_dir, <span class=\"string\">f&quot;rotate_<span class=\"subst\">&#123;INTERPOLATE_MODE&#125;</span>_pytorch_<span class=\"subst\">&#123;filename_prefix&#125;</span>_nhwc.bin&quot;</span>)</span><br><span class=\"line\">    tensor_nhwc.numpy().tofile(filename_nhwc)</span><br><span class=\"line\">    print_centered(<span class=\"string\">f&quot;Saved NHWC layout to <span class=\"subst\">&#123;filename_nhwc&#125;</span>, shape: <span class=\"subst\">&#123;tensor_nhwc.shape&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Tensor余弦相似度与MSE比较</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">tensor_cosine_similarity</span>(<span class=\"params\">tensor_a, tensor_b, thd=<span class=\"number\">0.999</span></span>):</span><br><span class=\"line\">    tensor_a = tensor_a.numpy().reshape(<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\">    tensor_b = tensor_b.numpy().reshape(<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        cos_sim = cosine_similarity(tensor_a, tensor_b)[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">        mse = mean_squared_error(tensor_a, tensor_b)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;Error calculating metrics: <span class=\"subst\">&#123;e&#125;</span>&quot;</span>)</span><br><span class=\"line\">        sys.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    result = <span class=\"string\">&#x27;pass&#x27;</span> <span class=\"keyword\">if</span> cos_sim &gt; thd <span class=\"keyword\">else</span> <span class=\"string\">&#x27;fail&#x27;</span></span><br><span class=\"line\">    print_centered(<span class=\"string\">f&quot;Cosine similarity: <span class=\"subst\">&#123;cos_sim&#125;</span>, Mean square error: <span class=\"subst\">&#123;mse&#125;</span>, Test result: <span class=\"subst\">&#123;result&#125;</span>&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span> <span class=\"keyword\">if</span> result == <span class=\"string\">&#x27;pass&#x27;</span> <span class=\"keyword\">else</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rotate_manual</span>(<span class=\"params\">images_nchw, angle, interpolation_mode, center</span>):</span><br><span class=\"line\">    N, C, H, W = images_nchw.shape</span><br><span class=\"line\">    x_c, y_c = center[<span class=\"number\">0</span>] - <span class=\"number\">0.5</span>, center[<span class=\"number\">1</span>] - <span class=\"number\">0.5</span></span><br><span class=\"line\">    angle_rad = math.radians(angle)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算 cos 和 sin 的值</span></span><br><span class=\"line\">    cos_theta = math.cos(angle_rad)</span><br><span class=\"line\">    sin_theta = math.sin(angle_rad)</span><br><span class=\"line\">    x_center = x_c - x_c * cos_theta + y_c * sin_theta</span><br><span class=\"line\">    y_center = y_c - x_c * sin_theta - y_c * cos_theta</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 创建一个与输入相同形状的张量来存储旋转后的图像</span></span><br><span class=\"line\">    rotated_images_nchw_optimized = torch.zeros_like(images_nchw)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 创建网格</span></span><br><span class=\"line\">    y_grid, x_grid = torch.meshgrid(torch.arange(H), torch.arange(W), indexing=<span class=\"string\">&#x27;ij&#x27;</span>)  </span><br><span class=\"line\">    y_grid = y_grid.<span class=\"built_in\">float</span>()</span><br><span class=\"line\">    x_grid = x_grid.<span class=\"built_in\">float</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算旋转后的位置</span></span><br><span class=\"line\">    y_i = x_grid * sin_theta + y_grid * cos_theta + y_center</span><br><span class=\"line\">    x_i = x_grid * cos_theta - y_grid * sin_theta + x_center</span><br><span class=\"line\">    a1 = y_i</span><br><span class=\"line\">    b1 = x_i</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将新位置的值赋给输出张量的对应位置</span></span><br><span class=\"line\">    x_ir = torch.<span class=\"built_in\">round</span>(x_i).long()</span><br><span class=\"line\">    y_ir = torch.<span class=\"built_in\">round</span>(y_i).long()</span><br><span class=\"line\"></span><br><span class=\"line\">    x_i = torch.clamp(x_ir, <span class=\"number\">0</span>, W-<span class=\"number\">1</span>)</span><br><span class=\"line\">    y_i = torch.clamp(y_ir, <span class=\"number\">0</span>, H-<span class=\"number\">1</span>)</span><br><span class=\"line\">    mask = (x_ir &gt;= <span class=\"number\">0</span>) &amp; (x_ir &lt; W) &amp; (y_ir &gt;= <span class=\"number\">0</span>) &amp; (y_ir &lt; H)</span><br><span class=\"line\"></span><br><span class=\"line\">    rotated_images_nchw_optimized[:, :, mask] = images_nchw[:, :, y_i[mask], x_i[mask]]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ENABLE_PRINT:</span><br><span class=\"line\">        <span class=\"comment\"># 在 c, h, w 维度进行打印</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(C):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(H):</span><br><span class=\"line\">                <span class=\"keyword\">for</span> w <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(W):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> mask[h, w]:</span><br><span class=\"line\">                        print_centered(<span class=\"string\">f&quot;(c, y, x) = (<span class=\"subst\">&#123;c&#125;</span>, <span class=\"subst\">&#123;h&#125;</span>, <span class=\"subst\">&#123;w&#125;</span>)\\t(y_i, x_i) = (<span class=\"subst\">&#123;a1[h, w]&#125;</span>, <span class=\"subst\">&#123;b1[h, w]&#125;</span>)\\t(round_yi, round_xi) = (<span class=\"subst\">&#123;y_ir[h, w]&#125;</span>, <span class=\"subst\">&#123;x_ir[h, w]&#125;</span>)\\t(int_yi, int_xi) = (<span class=\"subst\">&#123;y_i[h, w]&#125;</span>, <span class=\"subst\">&#123;x_i[h, w]&#125;</span>)&quot;</span>)</span><br><span class=\"line\">                        <span class=\"comment\"># print_centered(f&quot;rotated_images_nchw_optimized[&#123;c&#125;, &#123;h&#125;, &#123;w&#125;] = &#123;rotated_images_nchw_optimized[c, h, w]&#125;&quot;)</span></span><br><span class=\"line\">                        <span class=\"comment\"># print_centered(f&quot;images_nchw[&#123;c&#125;, &#123;y_i[h, w]&#125;, &#123;x_i[h, w]&#125;] = &#123;images_nchw[c, y_i[h, w], x_i[h, w]]&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;==================== default close rotate debug print func ====================\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rotated_images_nchw_optimized</span><br><span class=\"line\"><span class=\"comment\">##################################### PYTHON_MANUAL_ROTATE_FUNC #####################################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    args = parse_args()</span><br><span class=\"line\">    frame_ids = args.frame_ids  <span class=\"comment\"># 这将是一个帧ID列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> frame_id <span class=\"keyword\">in</span> frame_ids:</span><br><span class=\"line\">        frame = <span class=\"string\">f&quot;frame<span class=\"subst\">&#123;frame_id&#125;</span>&quot;</span></span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;Testing <span class=\"subst\">&#123;frame&#125;</span>...&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># input_name = f&quot;&#123;DATA_PATH&#125;/&#123;frame&#125;/Input.prev_bev.1x256x400x200.fp8.bin&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># angle_name = f&quot;&#123;DATA_PATH&#125;/&#123;frame&#125;/Input.angle.fp64.bin&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># output_name = f&quot;&#123;DATA_PATH&#125;/&#123;frame&#125;/Golden.prev_bev_out.1x256x400x200.fp8.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        input_name = <span class=\"string\">f&quot;<span class=\"subst\">&#123;DATA_PATH&#125;</span>/<span class=\"subst\">&#123;frame&#125;</span>/Input.prev_bev.32x400x200x8.fp8.bin&quot;</span></span><br><span class=\"line\">        angle_name = <span class=\"string\">f&quot;<span class=\"subst\">&#123;DATA_PATH&#125;</span>/<span class=\"subst\">&#123;frame&#125;</span>/Input.angle.fp32.bin&quot;</span></span><br><span class=\"line\">        output_name = <span class=\"string\">f&quot;<span class=\"subst\">&#123;DATA_PATH&#125;</span>/<span class=\"subst\">&#123;frame&#125;</span>/Golden.prev_bev_out.32x400x200x8.fp8.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 读取输入和输出数据</span></span><br><span class=\"line\">        input_bin = read_bin_file(input_name, dtype)</span><br><span class=\"line\">        output_bin = read_bin_file(output_name, dtype)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ENABLE_NHWC_2_NCHW:</span><br><span class=\"line\">            original_layout = <span class=\"string\">&#x27;NHWC&#x27;</span></span><br><span class=\"line\">            input_tensor = torch.from_numpy(input_bin.reshape(N, H, W, C)).permute(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">            output_tensor = torch.from_numpy(output_bin.reshape(N, H, W, C)).permute(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            original_layout = <span class=\"string\">&#x27;NCHW&#x27;</span></span><br><span class=\"line\">            input_tensor = torch.from_numpy(input_bin.reshape(N, C, H, W))</span><br><span class=\"line\">            output_tensor = torch.from_numpy(output_bin.reshape(N, C, H, W))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ENABLE_OUTPUT_BINARY:</span><br><span class=\"line\">            output_tensor = rotate_manual(input_tensor, angle_fp32, interpolation_mode, center)</span><br><span class=\"line\"></span><br><span class=\"line\">        transform_and_save(input_bin, original_layout, N, H, W, C, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;frame&#125;</span>_input&#x27;</span>)</span><br><span class=\"line\">        transform_and_save(output_bin, original_layout, N, H, W, C, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;frame&#125;</span>_output&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 读取角度</span></span><br><span class=\"line\">        angle_fp32, angle_fp64 = read_angle_from_bin_file(angle_name) <span class=\"keyword\">if</span> os.path.exists(angle_name) <span class=\"keyword\">else</span> (<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;[<span class=\"subst\">&#123;frame&#125;</span>] angle (fp64): <span class=\"subst\">&#123;angle_fp64:<span class=\"number\">.9</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;[<span class=\"subst\">&#123;frame&#125;</span>] angle (fp32): <span class=\"subst\">&#123;angle_fp32:<span class=\"number\">.9</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        rotated_pytorch_tensor = torchvision.transforms.functional.rotate(</span><br><span class=\"line\">            input_tensor, angle=angle_fp32, interpolation=interpolation_mode, center=center)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 比较结果</span></span><br><span class=\"line\">        comparison_result = tensor_cosine_similarity(rotated_pytorch_tensor, output_tensor)</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;[<span class=\"subst\">&#123;frame&#125;</span>] Comparison result: <span class=\"subst\">&#123;<span class=\"string\">&#x27;Pass&#x27;</span> <span class=\"keyword\">if</span> comparison_result <span class=\"keyword\">else</span> <span class=\"string\">&#x27;Fail&#x27;</span>&#125;</span>\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><h2 id=\"gitlab\"><a href=\"#gitlab\" class=\"headerlink\" title=\"gitlab\"></a>gitlab</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                           <span class=\"comment\"># 初始化git仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> &lt;repository_url&gt;         <span class=\"comment\"># 克隆远程仓库</span></span><br><span class=\"line\">git checkout -b &lt;branch_name&gt;      <span class=\"comment\"># 创建一个新的分支</span></span><br><span class=\"line\">git add .                          <span class=\"comment\"># 添加文件到暂存区</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;&lt;your_message&gt;&quot;</span>     <span class=\"comment\"># 提交更改到本地仓库</span></span><br><span class=\"line\">git push origin rotate_local:rotate_remote    <span class=\"comment\"># 推送该分支到远程仓库并指定名称为rotate_remote</span></span><br><span class=\"line\">git branch --set-upstream-to=origin/rotate_remote rotate_local    <span class=\"comment\"># 绑定local与remote分支</span></span><br><span class=\"line\">git branch -u origin/rotate_remote rotate_local                   <span class=\"comment\"># 简写</span></span><br><span class=\"line\">git push origin rotate_remote      <span class=\"comment\"># 推送更改到远程分支</span></span><br><span class=\"line\">git pull origin master             <span class=\"comment\"># 拉取远程仓库的最新更改</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge &lt;branch_name&gt;            <span class=\"comment\"># 将feature合入master</span></span><br><span class=\"line\">git branch -d &lt;branch_name&gt;        <span class=\"comment\"># 删除分支</span></span><br><span class=\"line\">git push origin --delete rotate    <span class=\"comment\"># 删除origin的远程仓库中的rotate分支</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># demo001</span></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;dxm_first_blog&quot;</span></span><br><span class=\"line\">git remote add origin git@github.com:dxm2301/blog_ddd.git</span><br><span class=\"line\">git remote set-url origin git@github.com:dxm2301/blog_ddd.git</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h2 id=\"girret\"><a href=\"#girret\" class=\"headerlink\" title=\"girret\"></a>girret</h2><h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><h2 id=\"software-install\"><a href=\"#software-install\" class=\"headerlink\" title=\"software install\"></a>software install</h2><h3 id=\"apt\"><a href=\"#apt\" class=\"headerlink\" title=\"apt\"></a>apt</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ./package_file.deb\t<span class=\"comment\"># apt安装deb包</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"aptitude\"><a href=\"#aptitude\" class=\"headerlink\" title=\"aptitude\"></a>aptitude</h3><h3 id=\"dpkg\"><a href=\"#dpkg\" class=\"headerlink\" title=\"dpkg\"></a>dpkg</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i package_file.deb\t<span class=\"comment\"># dpkg安装deb包</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf dxm.tar.gz</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>-x</code>：解压文件；</li>\n<li><code>-z</code>：待解压文件是用 gzip 压缩；</li>\n<li><code>-v</code>：解压过程中显示文件名；</li>\n<li><code>-f</code>：待解压文件名；</li>\n</ul>\n<h2 id=\"tree\"><a href=\"#tree\" class=\"headerlink\" title=\"tree\"></a>tree</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree -L 2 -af path/to/directory</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>-L 2</code>：指定要显示的树的最大深度；</li>\n<li><code>-a</code>：显示所有文件和目录，包括隐藏的文件和目录；</li>\n<li><code>-f</code>：打印每个文件的完整路径前缀；</li>\n<li><code>path/to/directory</code>：显示树结构的目录路径；</li>\n</ul>\n<h2 id=\"批量改名\"><a href=\"#批量改名\" class=\"headerlink\" title=\"批量改名\"></a>批量改名</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rename <span class=\"string\">&#x27;s/MH20/MH20_1slice/&#x27;</span> MH20_Resize_Conv_16tiles_1slice_int8*.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"scp-sftp\"><a href=\"#scp-sftp\" class=\"headerlink\" title=\"scp&#x2F;sftp\"></a>scp&#x2F;sftp</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sftp lixiang@10.243.120.94    <span class=\"comment\"># 输入密码</span></span><br><span class=\"line\"><span class=\"comment\"># ls查看远程服务器目录，lls查看本地服务器目录</span></span><br><span class=\"line\">lcd /home/dugen/scc_dxm/directory    <span class=\"comment\"># 更改本地目录到要包含复制文件的目录</span></span><br><span class=\"line\">put file.txt                         <span class=\"comment\"># 使用put命令将文件从本地复制到远程服务器</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span>                                   <span class=\"comment\"># 使用ls确认成功复制到远程服务器</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h1><blockquote>\n<ul>\n<li><a href=\"https://www.runoob.com/linux/linux-vim.html\">vim菜鸟教程</a></li>\n</ul>\n</blockquote>\n<h2 id=\"键位图\"><a href=\"#键位图\" class=\"headerlink\" title=\"键位图\"></a>键位图</h2><p><img src=\"/2024/04/20/note/general/tutorial_linux/001.png\" alt=\"vim_keyboard\"></p>\n<h2 id=\"vim常用功能\"><a href=\"#vim常用功能\" class=\"headerlink\" title=\"vim常用功能\"></a>vim常用功能</h2><blockquote>\n<ul>\n<li>vim操作逻辑：<ul>\n<li>{operator} + {motion} &#x3D; action ：一次编辑动作</li>\n<li>{count} + {action}：重复count次action操作</li>\n</ul>\n</li>\n<li>Command模式：<ul>\n<li><code>:w</code>：保存文件；</li>\n<li><code>:q</code>：退出 Vim 编辑器；</li>\n<li><code>:wq</code>：保存文件并退出 Vim 编辑器；</li>\n<li><code>:q!</code>：强制退出Vim编辑器，不保存修改；</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"光标移动、复制粘贴、搜索替换\"><a href=\"#光标移动、复制粘贴、搜索替换\" class=\"headerlink\" title=\"光标移动、复制粘贴、搜索替换\"></a>光标移动、复制粘贴、搜索替换</h3><h4 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h4><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Styled Table</title>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n    .custom-table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n    .custom-table th, .custom-table td {\n        padding: 8px;\n        text-align: center;\n        border-bottom: 1px solid #ddd;\n    }\n    .custom-table tr:nth-child(even) {\n        background-color: #f2f2f2;\n    }\n    .custom-table tr:hover {\n        background-color: #f5f5f5;\n    }\n    .custom-table thead {\n        position: sticky;\n        top: 0;\n        background-color: #808080;\n        color: white;\n    }\n    .custom-table thead tr:hover {\n        background-color: #a9a9a9;\n        color: black;\n    }\n    .custom-table, .custom-table th, .custom-table td {\n        border: 1px solid black;\n    }\n</style>\n</head>\n<body>\n<!-- 你的HTML内容将在这里，比如具体的表格数据 -->\n</body>\n</html>\n\n<table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>h、j、k、l</td>\n            <td>光标向左、下、上、右移动一个字符</td>\n        </tr>\n        <tr>\n            <td>n {motion}/n space/n enter</td>\n            <td>motion执行n次/向右移动n字符/向下移动n行</td>\n        </tr>\n        <tr>\n            <td>0</td>\n            <td>行首</td>\n        </tr>\n        <tr>\n            <td>$</td>\n            <td>行尾</td>\n        </tr>\n        <tr>\n            <td>^</td>\n            <td>第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>G</td>\n            <td>文档最后一行</td>\n        </tr>\n        <tr>\n            <td>ngg/nG</td>\n            <td>移动到文档第n行（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>+/-</td>\n            <td>非空格符的下/上一行</td>\n        </tr>\n        <tr>\n            <td>m{mark}/`{mark}</td>\n            <td>当前位置标记为mark/跳转到mark位置</td>\n        </tr>\n        <tr>\n            <td>zt/zz/zb</td>\n            <td>将当前行移至窗口顶部/中央/底部</td>\n        </tr>\n        <tr>\n            <td>H/M/L</td>\n            <td>光标移动到屏幕第一行/中间行/最后一行</td>\n        </tr>\n        <tr>\n            <td>ctrl + f/ctrl + b</td>\n            <td>屏幕向下/上移动一页</td>\n        </tr>\n        <tr>\n            <td>ctrl + d/ctrl + u</td>\n            <td>屏幕向下/上移动半页</td>\n        </tr>\n        <tr>\n            <td>v/ctrl + v</td>\n            <td>视觉模式/列视觉模式</td>\n        </tr>\n        <tr>\n            <td>v + < / v + ></td>\n            <td>首行缩进/取消缩进</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4 id=\"搜索替换\"><a href=\"#搜索替换\" class=\"headerlink\" title=\"搜索替换\"></a>搜索替换</h4><table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>/pattern ?pattern</td>\n            <td>在文本中向下/上搜索pattern字符</td>\n        </tr>\n        <tr>\n            <td>*</td>\n            <td>等价于/pattern</td>\n        </tr>\n        <tr>\n            <td>n/N</td>\n            <td>重复前一个搜索操作/反向重复前一个搜索操作</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/word1/word2/gc</td>\n            <td>在n1~n2行之间将word1替换成word2</td>\n        </tr>\n        <tr>\n            <td>:n1,n2s/\\<word1\\>/word2/gc</word1\\></td>\n            <td>精准匹配字符串word1</td>\n        </tr>\n        <tr>\n            <td>:1,$s/word1/word2/g 或 :%s/word1/word2/g</td>\n            <td>替换范围为第一行～最后一行</td>\n        </tr>\n        <tr>\n            <td>* + :%s//pattern2/gc</td>\n            <td>使用*快速选中pattern1进行替换</td>\n        </tr>\n        <tr>\n            <td>v + s/^/\\/\\//（\\cc）</td>\n            <td>添加行前注释</td>\n        </tr>\n        <tr>\n            <td>v + s/^\\/\\///（\\cu）</td>\n            <td>取消行前注释</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4 id=\"删除复制粘贴\"><a href=\"#删除复制粘贴\" class=\"headerlink\" title=\"删除复制粘贴\"></a>删除复制粘贴</h4><table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>nx/nX</td>\n            <td>向后/前删除n个字符（默认n = 1）</td>\n        </tr>\n        <tr>\n            <td>dd/ndd</td>\n            <td>删除当前行/删除光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>dG/d1G</td>\n            <td>删除光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>d$/d0/d^</td>\n            <td>删除光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>di{/da{/di(/da(</td>\n            <td>删除{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>diw/daw</td>\n            <td>删除光标所在单词/删除光标所在单词及后面的空格（单词后无空格则删除单词前空格）</td>\n        </tr>\n        <tr>\n            <td>yy/nyy</td>\n            <td>复制当前行/复制光标所在行开始的n行</td>\n        </tr>\n        <tr>\n            <td>yG/y1G</td>\n            <td>复制光标所在行到最后一行/第一行</td>\n        </tr>\n        <tr>\n            <td>y$/y0/y^</td>\n            <td>复制光标所在位置到该行末尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>yi{/ya{/yi(/ya(</td>\n            <td>复制{}/()内部/包含{}/()在内的所有内容</td>\n        </tr>\n        <tr>\n            <td>yiw/yaw</td>\n            <td>复制光标所在单词/复制光标所在单词及后面的空格（单词后无空格则复制单词前空格）</td>\n        </tr>\n        <tr>\n            <td>p/P</td>\n            <td>在光标后/前粘贴（复制整行时在下一行/上一行粘贴）</td>\n        </tr>\n        <tr>\n            <td>cw/ciw/caw/c$/c0/c^</td>\n            <td>更改光标位置到单词末尾/整个单词/包含空格的整个单词/行尾/行首/第一个非空字符</td>\n        </tr>\n        <tr>\n            <td>J</td>\n            <td>将当前行和下一行合并为1行</td>\n        </tr>\n        <tr>\n            <td>.</td>\n            <td>重复前一个动作</td>\n        </tr>\n        <tr>\n            <td>u</td>\n            <td>撤销最近的修改</td>\n        </tr>\n        <tr>\n            <td>ctrl + r</td>\n            <td>nromal模式：u撤销更改后，ctrl + r重做这些更改<br>insert模式：ctrl + r + \"/%/number，插入寄存器内容（当前缓冲区/文件名称/寄存器number）</td>\n        </tr>\n    </tbody>\n</table>\n\n<h3 id=\"编辑模式\"><a href=\"#编辑模式\" class=\"headerlink\" title=\"编辑模式\"></a>编辑模式</h3><table class=\"custom-table\">\n    <thead>\n        <tr>\n            <th>快捷键</th>\n            <th>功能</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>i, I</td>\n            <td>当前光标位置输入/当前行第一个非空字符位置输入</td>\n        </tr>\n        <tr>\n            <td>a, A</td>\n            <td>当前光标下一个字符位置输入/当前行最后一个字符位置输入</td>\n        </tr>\n        <tr>\n            <td>o, O</td>\n            <td>当前行下一行/上一行插入一个新行</td>\n        </tr>\n        <tr>\n            <td>r, R</td>\n            <td>替换光标位置字符/一直替换光标所在位置字符</td>\n        </tr>\n        <tr>\n            <td>[Esc]</td>\n            <td>退出Insert模式，回到Normal模式</td>\n        </tr>\n    </tbody>\n</table>\n\n\n\n\n\n<h2 id=\"plug-in\"><a href=\"#plug-in\" class=\"headerlink\" title=\"plug-in\"></a>plug-in</h2><ul>\n<li><code>vim ~/.vimrc</code>：添加需要更改的设置，每次启动vim自动更新配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> number               <span class=\"string\">&quot; 开启行号显示, set nonumber</span></span><br><span class=\"line\"><span class=\"string\">set hlsearch             &quot;</span> 搜索时高亮显示匹配项</span><br><span class=\"line\"><span class=\"built_in\">set</span> cursorline           <span class=\"string\">&quot; 高亮显示当前行，set nocursorline</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> relativenumber: 开启相对行数；<span class=\"built_in\">set</span> norelativenumber: 关闭相对行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> tabstop=4            <span class=\"string\">&quot; 设置一个 Tab 为 4 个字符宽</span></span><br><span class=\"line\"><span class=\"string\">set shiftwidth=4         &quot;</span> 设置缩进 4 个字符宽</span><br><span class=\"line\"><span class=\"built_in\">set</span> expandtab            <span class=\"string\">&quot; 使用空格代替 Tab</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">call plug#begin(&#x27;~/.vim/plugged&#x27;)   &quot;</span> 开始插件配置</span><br><span class=\"line\">Plug <span class=\"string\">&#x27;scrooloose/nerdcommenter&#x27;</span>    <span class=\"string\">&quot; 添加插件：方便的注释功能</span></span><br><span class=\"line\"><span class=\"string\">Plug &#x27;mg979/vim-visual-multi&#x27;, &#123;&#x27;branch&#x27;: &#x27;master&#x27;&#125;  &quot;</span> 添加插件：多光标编辑支持</span><br><span class=\"line\">call plug<span class=\"comment\">#end()                    &quot; 结束插件配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置标签页的正常显示样式</span></span><br><span class=\"line\"><span class=\"string\">highlight TabLineFill ctermfg=LightGrey ctermbg=DarkGrey  &quot;</span> 设置未激活标签的填充颜色</span><br><span class=\"line\">highlight TabLine ctermfg=White ctermbg=Black             <span class=\"string\">&quot; 设置未激活标签的颜色</span></span><br><span class=\"line\"><span class=\"string\">highlight TabLineSel ctermfg=Black ctermbg=LightGrey      &quot;</span> 设置激活标签的颜色</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 使当前激活的标签页更加明显</span></span><br><span class=\"line\"><span class=\"string\">set tabline=%!MyTabLine()     &quot;</span> 设置自定义标签页行显示</span><br><span class=\"line\"><span class=\"keyword\">function</span> MyTabLine()          <span class=\"string\">&quot; 定义一个函数来自定义标签行</span></span><br><span class=\"line\"><span class=\"string\">  let s = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">  for i in range(tabpagenr(&#x27;$&#x27;))   &quot;</span> 遍历所有标签页</span><br><span class=\"line\">    <span class=\"string\">&quot; 添加分界符和页面序号</span></span><br><span class=\"line\"><span class=\"string\">    let s .= &#x27;%&#x27; . (i + 1) . &#x27;T&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span> 当前页使用特殊颜色</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s .= (i + 1 == tabpagenr() ? <span class=\"string\">&#x27;%#TabLineSel#&#x27;</span> : <span class=\"string\">&#x27;%#TabLine#&#x27;</span>)</span><br><span class=\"line\">    <span class=\"string\">&quot; 设置标签名或显示文件名</span></span><br><span class=\"line\"><span class=\"string\">    let s .= &#x27; &#x27; . (i + 1) . &#x27;. &#x27; . GetTabLabel(i + 1) . &#x27; &#x27;</span></span><br><span class=\"line\"><span class=\"string\">  endfor</span></span><br><span class=\"line\"><span class=\"string\">  &quot;</span> 添加最后的填充</span><br><span class=\"line\">  <span class=\"built_in\">let</span> s .= <span class=\"string\">&#x27;%#TabLineFill#%T&#x27;</span></span><br><span class=\"line\">  <span class=\"built_in\">return</span> s </span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> GetTabLabel(n)      <span class=\"string\">&quot; 定义一个函数获取标签的标签名</span></span><br><span class=\"line\"><span class=\"string\">  &quot;</span> 返回第n个标签的标签名称或文件名</span><br><span class=\"line\">  <span class=\"built_in\">let</span> buflist = tabpagebuflist(a:n)  <span class=\"string\">&quot; 获取指定标签页的缓冲区列表</span></span><br><span class=\"line\"><span class=\"string\">  let winnr = tabpagewinnr(a:n)      &quot;</span> 获取激活的窗口编号</span><br><span class=\"line\">  <span class=\"built_in\">return</span> bufname(buflist[winnr - 1]) <span class=\"string\">&quot; 返回当前窗口缓冲区的文件名</span></span><br><span class=\"line\"><span class=\"string\">endfunction</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注释插件\"><a href=\"#注释插件\" class=\"headerlink\" title=\"注释插件\"></a>注释插件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 vim-plug 插件（插件管理器）</span></span><br><span class=\"line\">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\</span><br><span class=\"line\">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在～/.vimrc文件中添加以下内容</span></span><br><span class=\"line\">vim ~/.vimrc</span><br><span class=\"line\">call plug<span class=\"comment\">#begin(&#x27;~/.vim/plugged&#x27;)</span></span><br><span class=\"line\">Plug <span class=\"string\">&#x27;scrooloose/nerdcommenter&#x27;</span></span><br><span class=\"line\">call plug<span class=\"comment\">#end()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新打开vim，运行以下命令从 GitHub 下载并安装 nerdcommenter 插件</span></span><br><span class=\"line\">:PlugInstall</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n<h1 id=\"文本处理工具\"><a href=\"#文本处理工具\" class=\"headerlink\" title=\"文本处理工具\"></a>文本处理工具</h1><h2 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h2><blockquote>\n<p>grep [options] pattern [files]</p>\n</blockquote>\n<ul>\n<li><code>options</code>：<ul>\n<li><code>-i</code>：忽略大小写差异。（ignore）</li>\n<li><code>-v</code>：反向匹配，仅显示不包含匹配文本的行。（invert match）</li>\n<li><code>-n</code>：显示匹配行及其行号。（line number）</li>\n<li><code>-r</code>或<code>-R</code>：递归查找，搜索指定目录下的所有文件和子目录。（recursive）</li>\n<li><code>-l</code>：仅列出包含匹配行的文件名，而不显示匹配的文本。（list file with matches）</li>\n<li><code>-c</code>：仅显示每个文件中匹配到的行数。（count）</li>\n</ul>\n</li>\n<li><code>pattern</code>：这是你要搜索的文本或正则表达式。</li>\n<li><code>files</code>：这是一个或多个要搜索的文件。如果省略此参数，grep将从标准输入读取数据。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">&quot;\\[npu::inst_cluster3::tile\\[0\\]::sv\\]&quot;</span> debug.log &gt; c3t0.log</span><br><span class=\"line\">grep -e <span class=\"string\">&quot;SV_U2U_W&quot;</span> -e <span class=\"string\">&quot;SV_U2U_R&quot;</span> debug.log &gt; 1.txt        <span class=\"comment\"># 搜索带有U2U_W和U2U_R的行</span></span><br><span class=\"line\">grep -o <span class=\"string\">&quot;cluster8::tile\\[0\\].*&quot;</span> debug.log &gt; 2.txt         <span class=\"comment\"># 搜索匹配cluster8::tile0及后续内容的行</span></span><br><span class=\"line\">grep -o <span class=\"string\">&quot;cluster8::tile\\[0\\].*SV_U2U_W.*&quot;</span> debug.log &gt; 3.txt</span><br><span class=\"line\">grep <span class=\"string\">&quot;关键字1&quot;</span> 文件名 ｜ grep <span class=\"string\">&quot;关键字2&quot;</span> &gt; 3.txt</span><br><span class=\"line\">grep -o <span class=\"string\">&quot;\\[Tile 32.* Update.*&quot;</span> 1.data &gt; 4.txt</span><br><span class=\"line\">grep -e <span class=\"string\">&quot;slice.*axi_w1&quot;</span> -e <span class=\"string\">&quot;slice.*u2u_r&quot;</span> 5.txt | sed <span class=\"string\">&#x27;s/axi_w1/u2u_w/g&#x27;</span> &gt; sv.log</span><br><span class=\"line\"></span><br><span class=\"line\">grep --text <span class=\"string\">&quot;count&quot;</span> | <span class=\"built_in\">wc</span> -l</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h2><blockquote>\n<p>awk [options] ‘program’ [files]</p>\n</blockquote>\n<ul>\n<li><code>program</code>：通常由pattern + action组成：<ul>\n<li>模式匹配（pattern）：选择哪些行需要应用action（默认应用所有行）；</li>\n<li>操作{ action }：包括但不限于<strong>打印</strong>、<strong>修改</strong>、<strong>处理</strong>数据（默认为 print）；</li>\n</ul>\n</li>\n<li><code>files</code>：指定输入文件的名称（省略&#x2F;- 读取标准输入）；</li>\n<li>常用命令结构：<ul>\n<li>pattern { action }：当输入行匹配pattern时，执行action；</li>\n<li>BEGIN { action }：在处理任何输入行之前执行的action。</li>\n<li>END { action }：在处理完所有输入行之后执行的action。</li>\n</ul>\n</li>\n<li>常用选项：<ul>\n<li>-F fs：设置输入字段的分隔符为fs。</li>\n<li>-v var&#x3D;value：在程序开始之前，设置一个awk变量var的值为value。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印文件每一行</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;&#123;print&#125;&#x27;</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印所有包含“error”的行，/error/是pattern用于筛选文本</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;/error/ &#123;print $0&#125;&#x27;</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 模式匹配 + 正则表达式进一步细化筛选条件</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;/error/ &amp;&amp; $1 &gt; 100 &#123;print $0&#125;&#x27;</span> filename</span><br><span class=\"line\"><span class=\"comment\"># 对特定字段进行pattern匹配</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;$2 ~ /pattern/ &#123;print $0&#125;&#x27;</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 条件打印，如果第2个变量字符长度大于4则打印第1、3个变量</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;$2 &gt; 4 &#123;print $1, $3&#125;&#x27;</span> filename</span><br><span class=\"line\">awk <span class=\"string\">&#x27;length($2) &gt; 4 &#123;print $1, $3&#125;&#x27;</span> filename</span><br><span class=\"line\">awk <span class=\"string\">&#x27;/length($2) &gt; 4/ &#123;print $1, $3&#125;&#x27;</span> filename</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><h4 id=\"accuracy-mismatch\"><a href=\"#accuracy-mismatch\" class=\"headerlink\" title=\"accuracy_mismatch\"></a>accuracy_mismatch</h4><ul>\n<li>awk命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">    if (match($0, /\\(c, y, x\\) = \\([^)]+\\)/)) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        cxy = substr($0, RSTART, RLENGTH);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    if (match($0, /\\(round_yi, round_xi\\) = \\([^)]+\\)/)) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        ryx = substr($0, RSTART, RLENGTH);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    if (cxy &amp;&amp; ryx)</span></span><br><span class=\"line\"><span class=\"string\">        print cxy, ryx;</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span> 1.<span class=\"built_in\">log</span> &gt; 2.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>src.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Testing frame80...</span><br><span class=\"line\">Saved NCHW layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>input<span class=\"built_in\">_</span>nchw.bin, shape: torch.Size([32, 8, 400, 200])</span><br><span class=\"line\">Saved NHWC layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>input<span class=\"built_in\">_</span>nhwc.bin, shape: torch.Size([32, 400, 200, 8])</span><br><span class=\"line\">Saved NCHW layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>output<span class=\"built_in\">_</span>nchw.bin, shape: torch.Size([32, 8, 400, 200])</span><br><span class=\"line\">Saved NHWC layout to rotate<span class=\"built_in\">_</span>nearest<span class=\"built_in\">_</span>pytorch<span class=\"built_in\">_</span>frame80<span class=\"built_in\">_</span>output<span class=\"built_in\">_</span>nhwc.bin, shape: torch.Size([32, 400, 200, 8])</span><br><span class=\"line\">[frame80] angle (fp64): 11.595370230811710</span><br><span class=\"line\">[frame80] angle (fp32): 11.595370230811710</span><br><span class=\"line\">(c, y, x) = (0, 0, 77)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (-0.4509754180908203, 117.55844116210938)  (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 118) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 118)</span><br><span class=\"line\">(c, y, x) = (0, 0, 78)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (-0.24997615814208984, 118.53804016113281) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 119) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 119)</span><br><span class=\"line\">(c, y, x) = (0, 0, 79)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (-0.04897785186767578, 119.51762390136719) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 80)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.15202045440673828, 120.49722290039062)  (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 81)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.35302066802978516, 121.476806640625)    (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 121) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (0, 121)</span><br><span class=\"line\">(c, y, x) = (0, 0, 82)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.5540189743041992, 122.45640563964844)   (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 122) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (1, 122)</span><br><span class=\"line\">(c, y, x) = (0, 0, 83)  (y<span class=\"built_in\">_</span>i, x<span class=\"built_in\">_</span>i) = (0.7550172805786133, 123.43598937988281)   (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 123) (int<span class=\"built_in\">_</span>yi, int<span class=\"built_in\">_</span>xi) = (1, 123)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>dst.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(c, y, x) = (0, 0, 77) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 118)</span><br><span class=\"line\">(c, y, x) = (0, 0, 78) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 119)</span><br><span class=\"line\">(c, y, x) = (0, 0, 79) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 80) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 120)</span><br><span class=\"line\">(c, y, x) = (0, 0, 81) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (0, 121)</span><br><span class=\"line\">(c, y, x) = (0, 0, 82) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 122)</span><br><span class=\"line\">(c, y, x) = (0, 0, 83) (round<span class=\"built_in\">_</span>yi, round<span class=\"built_in\">_</span>xi) = (1, 123)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"sv-log\"><a href=\"#sv-log\" class=\"headerlink\" title=\"sv_log\"></a>sv_log</h4><ul>\n<li>awk命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">&#x27;/Tile 0/ &amp;&amp; /Update/ &#123;</span></span><br><span class=\"line\"><span class=\"string\">    idx = index($0, &quot;[Tile&quot;);</span></span><br><span class=\"line\"><span class=\"string\">    if (idx &gt; 0) &#123;</span></span><br><span class=\"line\"><span class=\"string\">        print substr($0, idx);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span> 1.txt &gt; 3.<span class=\"built_in\">log</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用grep实现</span></span><br><span class=\"line\">grep -e <span class=\"string\">&quot;Tile 0&quot;</span> 1.txt | grep <span class=\"string\">&quot;Update&quot;</span> | grep -o <span class=\"string\">&quot;\\[Tile.*&quot;</span> &gt; 4.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>src.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">#</span> New execution started</span><br><span class=\"line\">2024-03-20 17:19:06.198119828 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init</span><br><span class=\"line\">2024-03-20 17:19:06.198125820 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init ccpu program 0 hcpu program 0</span><br><span class=\"line\">2024-03-20 17:19:06.198126357 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init ccpu option 0</span><br><span class=\"line\">2024-03-20 17:19:06.198126755 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init hcpu option 0</span><br><span class=\"line\">2024-03-20 17:19:06.198127737 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init ccpu body </span><br><span class=\"line\">2024-03-20 17:19:06.217334580 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init hcpu body </span><br><span class=\"line\">2024-03-20 17:19:06.221835469 :0 NOTICE[0]: spike<span class=\"built_in\">_</span>fm<span class=\"built_in\">_</span>top: init finished</span><br><span class=\"line\">2024-03-20 17:19:06.256568272 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Started one instruction.</span><br><span class=\"line\">2024-03-20 17:19:06.258692580 :0 NOTICE[1]: [HIBDMA 0 channel 0]: Finished one instruction.</span><br><span class=\"line\">2024-03-20 17:19:06.316320218 :0 NOTICE[2]: [Tile 0 SVCTRL]: Started one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.317258092 :0 NOTICE[2]: [Tile 0 SVCTRL]: Finished one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.317264341 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TILE<span class=\"built_in\">_</span>CTRL = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317266446 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 00</span><br><span class=\"line\">2024-03-20 17:19:06.317268676 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317270666 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317272391 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317273934 :0 NOTICE[2]: [Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317255146 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318227982 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318230260 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318231995 :0 NOTICE[5]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317267074 :0 NOTICE[6]: [Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318271057 :0 NOTICE[6]: [Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">2024-03-20 17:19:06.317256828 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>NLU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318557186 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>ACT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318560228 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WGT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318562885 :0 NOTICE[3]: [Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WSE<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">2024-03-20 17:19:06.318927308 :0 NOTICE[0]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Starting one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.317258352 :0 NOTICE[4]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.319172200 :0 NOTICE[4]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">2024-03-20 17:19:06.319176623 :0 NOTICE[4]: [Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">2024-03-20 17:19:06.319634699 :0 NOTICE[2]: [Tile 0Barrier: fenck ack.</span><br><span class=\"line\">2024-03-20 17:19:06.319661379 :0 NOTICE[1]: Barrier mask 0000000000000000000000000000000000000000000000000000000000000001: Receive from tile 0</span><br><span class=\"line\">2024-03-20 17:19:06.319687388 :0 NOTICE[1]: [T=16]Barrier mask 0000000000000000000000000000000000000000000000000000000000000001 passed: Finished one instruction. Instr tag: 0x0</span><br><span class=\"line\">2024-03-20 17:19:06.323494662 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Started one instruction.</span><br><span class=\"line\">2024-03-20 17:19:06.325598258 :0 NOTICE[7]: [HIBDMA 0 channel 0]: Update Tile 0 SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W++</span><br><span class=\"line\">2024-03-20 17:19:06.325705359 :0 NOTICE[1]: [Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 1</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>dst.log</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TILE<span class=\"built_in\">_</span>CTRL = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 00</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>AXI<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CE<span class=\"built_in\">_</span>W1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>U2U<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>NLU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>ACT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WGT<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>TCC<span class=\"built_in\">_</span>WSE<span class=\"built_in\">_</span>R = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R0 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>R1 = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>CVU<span class=\"built_in\">_</span>W = 0</span><br><span class=\"line\">[Tile 0]: Update SV<span class=\"built_in\">_</span>DRB<span class=\"built_in\">_</span>W = 1</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"sed\"><a href=\"#sed\" class=\"headerlink\" title=\"sed\"></a>sed</h2><h2 id=\"others\"><a href=\"#others\" class=\"headerlink\" title=\"others\"></a>others</h2><h1 id=\"shell-script\"><a href=\"#shell-script\" class=\"headerlink\" title=\"shell script\"></a>shell script</h1><h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;&#125;</span>：</span><br><span class=\"line\"><span class=\"variable\">$&#123;&#125;</span> 主要用于变量替换和参数替换。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var&#125;</span> 表示取变量 var 的值。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var:-default&#125;</span> 表示如果变量 var 未定义或者为空，则使用默认值 default。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var:=default&#125;</span> 表示如果变量 var 未定义或者为空，则将其设置为默认值 default。</span><br><span class=\"line\"><span class=\"variable\">$&#123;#var&#125;</span> 表示返回变量 var 的长度。</span><br><span class=\"line\"><span class=\"variable\">$&#123;var:start:length&#125;</span> 表示从变量 var 的第 start 个字符开始，截取 length 个字符。</span><br><span class=\"line\">等等。</span><br><span class=\"line\">$()：</span><br><span class=\"line\">$() 是命令替换的语法，用于将命令的输出结果赋值给变量或者直接输出。</span><br><span class=\"line\">$() 中放置的命令会被执行，并且 $() 会将命令的标准输出作为结果返回。</span><br><span class=\"line\">例如，var=$(<span class=\"built_in\">command</span>) 表示执行 <span class=\"built_in\">command</span> 命令，并将其输出赋值给变量 var。</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"dxm-cf-sh\"><a href=\"#dxm-cf-sh\" class=\"headerlink\" title=\"dxm_cf.sh\"></a>dxm_cf.sh</h3><blockquote>\n<p><code>./dxm_cf.sh -c MH20_Resize_Conv_16tiles_2slice_int8 -s pm</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -euo pipefail</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">usage</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">    Usage: $0 [options]</span></span><br><span class=\"line\"><span class=\"string\">    Options:</span></span><br><span class=\"line\"><span class=\"string\">    -h|--help               This Message.</span></span><br><span class=\"line\"><span class=\"string\">    -c|--case_name          Case name</span></span><br><span class=\"line\"><span class=\"string\">    -s|--stage              Stage name (pm, runtime, fm, python)</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">options_parse</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> [ <span class=\"variable\">$#</span> -gt 0 ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">            -c|--case_name)</span><br><span class=\"line\">              <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                case_name=<span class=\"variable\">$2</span></span><br><span class=\"line\">                <span class=\"built_in\">shift</span></span><br><span class=\"line\">              <span class=\"keyword\">fi</span></span><br><span class=\"line\">              ;;</span><br><span class=\"line\">            -s|--stage)</span><br><span class=\"line\">              <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                stage=<span class=\"variable\">$2</span></span><br><span class=\"line\">                <span class=\"built_in\">shift</span></span><br><span class=\"line\">              <span class=\"keyword\">fi</span></span><br><span class=\"line\">              ;;</span><br><span class=\"line\">            -*|-h|--<span class=\"built_in\">help</span>)</span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            *)</span><br><span class=\"line\">                print_center <span class=\"string\">&quot;Error: Invalid argument&quot;</span></span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">        <span class=\"keyword\">esac</span></span><br><span class=\"line\">        <span class=\"built_in\">shift</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">print_center</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> text=<span class=\"variable\">$1</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> cols=$(tput cols)</span><br><span class=\"line\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;%*s\\n&quot;</span> $(((<span class=\"variable\">$&#123;#text&#125;</span>+<span class=\"variable\">$cols</span>)/<span class=\"number\">2</span>)) <span class=\"string\">&quot;<span class=\"variable\">$text</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    usage</span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">options_parse <span class=\"variable\">$@</span></span><br><span class=\"line\">print_center <span class=\"string\">&quot;================ <span class=\"variable\">$0</span> <span class=\"variable\">$case_name</span> <span class=\"variable\">$stage</span> ================&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># define common file path</span></span><br><span class=\"line\">workspace_dir=$(<span class=\"built_in\">pwd</span>)</span><br><span class=\"line\">log_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/log/<span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$&#123;log_dir&#125;</span></span><br><span class=\"line\">pm_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;log_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_pm.log&quot;</span></span><br><span class=\"line\">runtime_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;log_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_runtime.log&quot;</span></span><br><span class=\"line\">fm_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;log_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_fm.log&quot;</span></span><br><span class=\"line\">camera_fusion_instr_data=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/test/golden_test/schu_instr_executor/massive_hit/<span class=\"variable\">$&#123;case_name&#125;</span>/&quot;</span></span><br><span class=\"line\">camera_fusion_bin=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/builddir/massive_hit_<span class=\"variable\">$&#123;case_name&#125;</span>/massive_hit_<span class=\"variable\">$&#123;case_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">golden_output_bin=<span class=\"string\">&quot;<span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span>golden_output.bin&quot;</span></span><br><span class=\"line\">microbench_out_bin=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/data/microbench_camera_fusion_out.bin&quot;</span></span><br><span class=\"line\">meson_build_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/meson.build&quot;</span></span><br><span class=\"line\">testcase_resize=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/op_net/ops/test_ops/resize/testcase_resize.cpp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">pm_compile</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/builddir&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> slice_num=$(<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span> | grep -oP <span class=\"string\">&#x27;\\d+slice&#x27;</span> | grep -oP <span class=\"string\">&#x27;\\d+&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"string\">&quot;<span class=\"variable\">$slice_num</span>&quot;</span> == <span class=\"string\">&quot;1&quot;</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&#x27;s/^\\(#define MULTI_SLICE_ENABLE\\)/\\/\\/\\1/&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$testcase_resize</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&#x27;s/^\\/\\/\\(.*#define MULTI_SLICE_ENABLE.*\\)/\\1/&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$testcase_resize</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    sed -i -e <span class=\"string\">&quot;s/#define SLICE_NUM .*/#define SLICE_NUM <span class=\"variable\">$&#123;slice_num&#125;</span>/&quot;</span> \\</span><br><span class=\"line\">           -e <span class=\"string\">&quot;s/#define CASE_NAME .*/#define CASE_NAME \\&quot;<span class=\"variable\">$&#123;case_name&#125;</span>\\&quot;/&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$testcase_resize</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">&quot;executable (&#x27;resize&#x27;&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;resize ====&gt; <span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/executable (&#x27;resize&#x27;/executable (&#x27;<span class=\"variable\">$&#123;case_name&#125;</span>&#x27;/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        original_pattern=$(awk <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">            if (match($0, /MH20_Resize_Conv_16tiles_[0-9]+slice_int8/)) &#123;</span></span><br><span class=\"line\"><span class=\"string\">                print substr($0, RSTART, RLENGTH)</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;&#x27;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [[ -n <span class=\"string\">&quot;<span class=\"variable\">$original_pattern</span>&quot;</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            print_center <span class=\"string\">&quot;<span class=\"variable\">$&#123;original_pattern&#125;</span> ====&gt; <span class=\"variable\">$&#123;case_name&#125;</span>&quot;</span></span><br><span class=\"line\">            sed -i <span class=\"string\">&quot;s/<span class=\"variable\">$original_pattern</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$meson_build_file</span>&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$case_name</span> pm compile start ================&quot;</span></span><br><span class=\"line\">    ninja <span class=\"variable\">$&#123;case_name&#125;</span> &amp;&gt; <span class=\"variable\">$&#123;pm_log&#125;</span> || &#123; print_center <span class=\"string\">&quot;Compilation failed, exiting...&quot;</span>; <span class=\"built_in\">exit</span> 1; &#125;</span><br><span class=\"line\">    ./<span class=\"variable\">$&#123;case_name&#125;</span> &gt;&gt; <span class=\"variable\">$&#123;pm_log&#125;</span> 2&gt;&amp;1</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$case_name</span> pm compile end ================&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">runtime_compile</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ ! -d \\&quot;<span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span>\\&quot; ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> -rf <span class=\"variable\">$&#123;workspace_dir&#125;</span>/dataflow_net/builddir/net_dataflow/<span class=\"variable\">$&#123;case_name&#125;</span>/* <span class=\"variable\">$&#123;camera_fusion_instr_data&#125;</span></span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> runtime compile start ================&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;include($&#123;GOLDEN_ROOT&#125;/schu_instr_executor/CMakeLists.txt)&#x27;</span> &gt; <span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/test/golden_test/CMakeLists.txt</span><br><span class=\"line\">    <span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/build.sh fm --cf-case=<span class=\"variable\">$&#123;case_name&#125;</span> &amp;&gt; <span class=\"variable\">$&#123;runtime_log&#125;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> runtime compile end ================&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;workspace_dir&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">fm_execute</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> fm execute start ================&quot;</span></span><br><span class=\"line\">    <span class=\"variable\">$&#123;workspace_dir&#125;</span>/ebb_model/fm/test/spike_fm_smoke/old_fm_d_smoke_test.bin <span class=\"variable\">$&#123;camera_fusion_bin&#125;</span> &amp;&gt; <span class=\"variable\">$&#123;fm_log&#125;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> fm execute end ================&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">python_check_result</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> pyton check result start ================&quot;</span></span><br><span class=\"line\">    python <span class=\"variable\">$&#123;workspace_dir&#125;</span>/project_dxm/rotate/cosine_similarity.py <span class=\"variable\">$&#123;golden_output_bin&#125;</span> <span class=\"variable\">$&#123;microbench_out_bin&#125;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;================ <span class=\"variable\">$&#123;case_name&#125;</span> python check result end ================&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">declare</span> -A stages=(</span><br><span class=\"line\">    [<span class=\"string\">&quot;pm&quot;</span>]=<span class=\"string\">&quot;pm_compile&quot;</span></span><br><span class=\"line\">    [<span class=\"string\">&quot;runtime&quot;</span>]=<span class=\"string\">&quot;runtime_compile&quot;</span></span><br><span class=\"line\">    [<span class=\"string\">&quot;fm&quot;</span>]=<span class=\"string\">&quot;fm_execute&quot;</span></span><br><span class=\"line\">    [<span class=\"string\">&quot;python&quot;</span>]=<span class=\"string\">&quot;python_check_result&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">execute=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"string\">&quot;pm&quot;</span> <span class=\"string\">&quot;runtime&quot;</span> <span class=\"string\">&quot;fm&quot;</span> <span class=\"string\">&quot;python&quot;</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$stage</span> == <span class=\"variable\">$key</span> || <span class=\"variable\">$execute</span> == <span class=\"literal\">true</span> || -z <span class=\"variable\">$stage</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        execute=<span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"built_in\">eval</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;stages[$key]&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"dxm-vdk-sh\"><a href=\"#dxm-vdk-sh\" class=\"headerlink\" title=\"dxm_vdk.sh\"></a>dxm_vdk.sh</h3><blockquote>\n<p><code>./dxm_vdk_rotate.sh -c rotate -s 1 -e 10</code></p>\n</blockquote>\n<h4 id=\"shell-script-1\"><a href=\"#shell-script-1\" class=\"headerlink\" title=\"shell_script\"></a>shell_script</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">usage</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">cat</span> &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">    Usage: $0 [options]</span></span><br><span class=\"line\"><span class=\"string\">    Options:</span></span><br><span class=\"line\"><span class=\"string\">    -h|--help               Show this message.</span></span><br><span class=\"line\"><span class=\"string\">    -s|--start              Start frame number to process.</span></span><br><span class=\"line\"><span class=\"string\">    -e|--end                End frame number to process (if not provided, defaults to start frame).</span></span><br><span class=\"line\"><span class=\"string\">    -c|--case_name          Case name to process (default is $&#123;case_name&#125;).</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">print_center</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> text=<span class=\"variable\">$1</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> cols=$(tput cols)</span><br><span class=\"line\">    <span class=\"built_in\">printf</span> <span class=\"string\">&quot;%*s\\n&quot;</span> $(((<span class=\"variable\">$&#123;#text&#125;</span>+<span class=\"variable\">$cols</span>)/<span class=\"number\">2</span>)) <span class=\"string\">&quot;<span class=\"variable\">$text</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">initialize</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span> -euo pipefail</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Initializing script variables and paths...&quot;</span></span><br><span class=\"line\">    workspace_dir=$(<span class=\"built_in\">pwd</span>)</span><br><span class=\"line\">    runtime_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime&quot;</span></span><br><span class=\"line\">    fm_test_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/ebb_model/fm/test/spike_fm_smoke&quot;</span></span><br><span class=\"line\">    sample_data_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/data&quot;</span></span><br><span class=\"line\">    python_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/project_dxm/rotate&quot;</span></span><br><span class=\"line\">    frame_id=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    frame_start=<span class=\"string\">&quot;-1&quot;</span></span><br><span class=\"line\">    frame_end=<span class=\"string\">&quot;-1&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Initialization complete.&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">config</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Configuring paths and names for frame <span class=\"variable\">$&#123;frame_id&#125;</span>...&quot;</span></span><br><span class=\"line\">    case_name=<span class=\"string\">&quot;microbench_ipu_rotate_32tiles_fp8_nearest&quot;</span></span><br><span class=\"line\">    input_original_name=<span class=\"string\">&quot;input_200x400x8_fp8_32tile_nearest&quot;</span></span><br><span class=\"line\">    output_original_name=<span class=\"string\">&quot;output_200x400x8_fp8_32tile_nearest&quot;</span></span><br><span class=\"line\">    input_target_name=<span class=\"string\">&quot;rotate_nearest_pytorch_frame<span class=\"variable\">$&#123;frame_id&#125;</span>_input_nhwc&quot;</span></span><br><span class=\"line\">    output_target_name=<span class=\"string\">&quot;rotate_nearest_pytorch_frame<span class=\"variable\">$&#123;frame_id&#125;</span>_output_nhwc&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    golden_test=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/runtime/test/golden_test&quot;</span></span><br><span class=\"line\">    target_cmakelists=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/CMakeLists.txt&quot;</span></span><br><span class=\"line\">    golden_test_dir=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/data&quot;</span></span><br><span class=\"line\">    cmake_file_path=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/CMakeLists.txt&quot;</span></span><br><span class=\"line\">    rotate_h_path=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>/include/rotate.h&quot;</span></span><br><span class=\"line\">    angle_bin_path=<span class=\"string\">&quot;<span class=\"variable\">$&#123;workspace_dir&#125;</span>/project_dxm/golden_data/rotate/frame<span class=\"variable\">$&#123;frame_id&#125;</span>/Input.angle.fp32.bin&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Configuration for frame <span class=\"variable\">$&#123;frame_id&#125;</span> done.&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parse_options</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Parsing command line options...&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> [ <span class=\"variable\">$#</span> -gt 0 ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">            -s|--start)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                    frame_start=<span class=\"variable\">$2</span></span><br><span class=\"line\">                    <span class=\"built_in\">shift</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    print_center <span class=\"string\">&quot;Error: Missing start frame number&quot;</span></span><br><span class=\"line\">                    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                <span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            -e|--end)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                    frame_end=<span class=\"variable\">$2</span></span><br><span class=\"line\">                    <span class=\"built_in\">shift</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    print_center <span class=\"string\">&quot;Error: Missing end frame number&quot;</span></span><br><span class=\"line\">                    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                <span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            -c|--case_name)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$2</span> ]] &amp;&amp; [[ <span class=\"variable\">$2</span> != -* ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">                    case_name=<span class=\"variable\">$2</span></span><br><span class=\"line\">                    <span class=\"built_in\">shift</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    print_center <span class=\"string\">&quot;Error: Missing case name&quot;</span></span><br><span class=\"line\">                    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                <span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            -*|-h|--<span class=\"built_in\">help</span>)</span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">            *)</span><br><span class=\"line\">                print_center <span class=\"string\">&quot;Error: Invalid argument&quot;</span></span><br><span class=\"line\">                usage</span><br><span class=\"line\">                <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">                ;;</span><br><span class=\"line\">        <span class=\"keyword\">esac</span></span><br><span class=\"line\">        <span class=\"built_in\">shift</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$frame_start</span> -ne -1 ]] &amp;&amp; [[ <span class=\"variable\">$frame_end</span> -eq -1 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        frame_end=<span class=\"variable\">$frame_start</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Command line options parsed successfully. Start Frame: <span class=\"variable\">$&#123;frame_start&#125;</span>, End Frame: <span class=\"variable\">$&#123;frame_end&#125;</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">run_python_script_and_process_files</span></span>() &#123;</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Running Python script for frame ID: <span class=\"variable\">$&#123;frame_id&#125;</span>...&quot;</span></span><br><span class=\"line\">    python_script=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/rotate_dxm.py&quot;</span></span><br><span class=\"line\">    python_command=<span class=\"string\">&quot;python <span class=\"variable\">$&#123;python_script&#125;</span> -f <span class=\"variable\">$&#123;frame_id&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"variable\">$&#123;python_command&#125;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Python script executed successfully.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Failed to execute Python script.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Copying generated NHWC bin files to golden test directory...&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> input_src=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/data_pytorch/<span class=\"variable\">$&#123;input_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> output_src=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/data_pytorch/<span class=\"variable\">$&#123;output_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> input_dst=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test_dir&#125;</span>/<span class=\"variable\">$&#123;input_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> output_dst=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test_dir&#125;</span>/<span class=\"variable\">$&#123;output_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">local</span> path_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for input src file: <span class=\"variable\">$&#123;md5_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for input src file: <span class=\"variable\">$&#123;path_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_src&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">local</span> path_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;input_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for input dst file: <span class=\"variable\">$&#123;md5_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for input dst file: <span class=\"variable\">$&#123;path_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    md5_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    path_file_src=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_src&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for output src file: <span class=\"variable\">$&#123;md5_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for output src file: <span class=\"variable\">$&#123;path_file_src&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_src&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    md5_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    path_file_dst=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;output_dst&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for output dst file: <span class=\"variable\">$&#123;md5_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;path for output dst file: <span class=\"variable\">$&#123;path_file_dst&#125;</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">update_cmake_and_related_files</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;include(\\$&#123;GOLDEN_ROOT&#125;/<span class=\"variable\">$&#123;case_name&#125;</span>/CMakeLists.txt)&quot;</span> &gt; <span class=\"string\">&quot;<span class=\"variable\">$target_cmakelists</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">&quot;<span class=\"variable\">$input_original_name</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/<span class=\"variable\">$input_original_name</span>/<span class=\"variable\">$&#123;input_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/rotate_nearest_pytorch_frame[0-9]*_input_nhwc/<span class=\"variable\">$&#123;input_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> grep -q <span class=\"string\">&quot;<span class=\"variable\">$output_original_name</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/<span class=\"variable\">$output_original_name</span>/<span class=\"variable\">$&#123;output_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        sed -i <span class=\"string\">&quot;s/rotate_nearest_pytorch_frame[0-9]*_output_nhwc/<span class=\"variable\">$&#123;output_target_name&#125;</span>/g&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$cmake_file_path</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    angle_value=$(python read_angle.py <span class=\"string\">&quot;<span class=\"variable\">$&#123;angle_bin_path&#125;</span>&quot;</span>)</span><br><span class=\"line\">    sed -i <span class=\"string\">&quot;s/#define ANGLE .*/#define ANGLE (<span class=\"variable\">$&#123;angle_value&#125;</span>)/&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;rotate_h_path&#125;</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">compile_and_run_tests</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> runtime_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;runtime_dir&#125;</span>/runtime_frame<span class=\"variable\">$&#123;frame_id&#125;</span>.log&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> fm_log=<span class=\"string\">&quot;<span class=\"variable\">$&#123;runtime_dir&#125;</span>/fm_frame<span class=\"variable\">$&#123;frame_id&#125;</span>.log&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Compiling runtime environment. Logs can be found in <span class=\"variable\">$&#123;runtime_log&#125;</span>&quot;</span></span><br><span class=\"line\">    (<span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;runtime_dir&#125;</span> &amp;&amp; ./build.sh fm) &gt; <span class=\"string\">&quot;<span class=\"variable\">$&#123;runtime_log&#125;</span>&quot;</span> 2&gt;&amp;1</span><br><span class=\"line\">    </span><br><span class=\"line\">    print_center <span class=\"string\">&quot;Executing fm_d_smoke_test. Logs can be found in <span class=\"variable\">$&#123;fm_log&#125;</span>&quot;</span></span><br><span class=\"line\">    (<span class=\"variable\">$&#123;fm_test_dir&#125;</span>/old_fm_d_smoke_test.bin <span class=\"variable\">$&#123;runtime_dir&#125;</span>/builddir/<span class=\"variable\">$&#123;case_name&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>.bin) &gt; <span class=\"string\">&quot;<span class=\"variable\">$&#123;fm_log&#125;</span>&quot;</span> 2&gt;&amp;1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">calculate_cosine_similarity</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> golden_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_test_dir&#125;</span>/<span class=\"variable\">$&#123;output_target_name&#125;</span>.bin&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> sample_file=<span class=\"string\">&quot;<span class=\"variable\">$&#123;sample_data_dir&#125;</span>/<span class=\"variable\">$&#123;case_name&#125;</span>_out.bin&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file1=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_file&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">local</span> md5_file2=$(<span class=\"built_in\">md5sum</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;sample_file&#125;</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for golden: <span class=\"variable\">$&#123;md5_file1&#125;</span>&quot;</span></span><br><span class=\"line\">    print_center <span class=\"string\">&quot;MD5 for sample: <span class=\"variable\">$&#123;md5_file2&#125;</span>&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$&#123;md5_file1&#125;</span>&quot;</span> == <span class=\"string\">&quot;<span class=\"variable\">$&#123;md5_file2&#125;</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Files are identical, proceeding to calculate cosine similarity.&quot;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">local</span> cosine_script=<span class=\"string\">&quot;<span class=\"variable\">$&#123;python_dir&#125;</span>/cosine_similarity.py&quot;</span></span><br><span class=\"line\">        python <span class=\"string\">&quot;<span class=\"variable\">$&#123;cosine_script&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;golden_file&#125;</span>&quot;</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;sample_file&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Files differ, exiting.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">main</span></span>() &#123;</span><br><span class=\"line\">    initialize</span><br><span class=\"line\">    parse_options <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$frame_start</span> -eq -1 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Error: No frame specified to process.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> frame <span class=\"keyword\">in</span> $(<span class=\"built_in\">seq</span> <span class=\"variable\">$frame_start</span> <span class=\"variable\">$frame_end</span>); <span class=\"keyword\">do</span></span><br><span class=\"line\">        frame_id=<span class=\"variable\">$frame</span></span><br><span class=\"line\">        print_center <span class=\"string\">&quot;Processing frame <span class=\"variable\">$&#123;frame_id&#125;</span>...&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        config</span><br><span class=\"line\">        run_python_script_and_process_files</span><br><span class=\"line\">        update_cmake_and_related_files</span><br><span class=\"line\">        compile_and_run_tests</span><br><span class=\"line\">        calculate_cosine_similarity</span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">main <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"python-script\"><a href=\"#python-script\" class=\"headerlink\" title=\"python_script\"></a>python_script</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> argparse</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torchvision</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> torchvision.transforms.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics.pairwise <span class=\"keyword\">import</span> cosine_similarity</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置打印选项</span></span><br><span class=\"line\">np.set_printoptions(linewidth=<span class=\"number\">400</span>)</span><br><span class=\"line\">torch.set_printoptions(linewidth=<span class=\"number\">200</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置参数</span></span><br><span class=\"line\">ENABLE_FP8_DATA_TYPE = <span class=\"literal\">True</span></span><br><span class=\"line\">ENABLE_OUTPUT_BINARY = <span class=\"literal\">True</span></span><br><span class=\"line\">ENABLE_PRINT = <span class=\"literal\">True</span></span><br><span class=\"line\">ENABLE_NHWC_2_NCHW = <span class=\"literal\">True</span></span><br><span class=\"line\">INTERPOLATE_MODE = <span class=\"string\">&quot;nearest&quot;</span></span><br><span class=\"line\">N, C, H, W = <span class=\"number\">32</span>, <span class=\"number\">8</span>, <span class=\"number\">400</span>, <span class=\"number\">200</span>  <span class=\"comment\"># tile_num, Channels, Height, Width</span></span><br><span class=\"line\">center = (W/<span class=\"number\">2</span>, H/<span class=\"number\">2</span>)</span><br><span class=\"line\">DATA_PATH = <span class=\"string\">&quot;/home/dugen/scc_dxm/project_dxm/golden_data/rotate&quot;</span></span><br><span class=\"line\">dtype = np.uint8 <span class=\"keyword\">if</span> ENABLE_FP8_DATA_TYPE <span class=\"keyword\">else</span> np.int8</span><br><span class=\"line\">interpolation_mode = torchvision.transforms.InterpolationMode.NEAREST</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 居中打印</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">print_centered</span>(<span class=\"params\">text</span>):</span><br><span class=\"line\">    terminal_size = os.get_terminal_size().columns</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(text.center(terminal_size))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">parse_args</span>():</span><br><span class=\"line\">    parser = argparse.ArgumentParser(description=<span class=\"string\">&quot;Process one or more frames.&quot;</span>)</span><br><span class=\"line\">    parser.add_argument(<span class=\"string\">&#x27;-f&#x27;</span>, <span class=\"string\">&#x27;--frame&#x27;</span>, nargs=<span class=\"string\">&#x27;+&#x27;</span>, dest=<span class=\"string\">&#x27;frame_ids&#x27;</span>, required=<span class=\"literal\">True</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;Frame ID(s) to process.&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> parser.parse_args()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取二进制文件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_bin_file</span>(<span class=\"params\">file_path, dtype</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(file_path):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.fromfile(file_path, dtype=dtype)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print_centered(<span class=\"string\">&quot;File does not exist:&quot;</span>, file_path)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取角度值</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">read_angle_from_bin_file</span>(<span class=\"params\">file_path</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(file_path):</span><br><span class=\"line\">        print_centered(<span class=\"string\">&quot;Angle file does not exist:&quot;</span>, file_path)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_path, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        angle_fp64 = np.fromfile(file_path, dtype=np.float32)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        angle_fp32 = <span class=\"built_in\">float</span>(angle_fp64)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> angle_fp32, angle_fp64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">transform_and_save</span>(<span class=\"params\">data, original_layout, N, H, W, C, filename_prefix</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    此函数将保存的文件路径修改为脚本所在目录的data_pytorch子目录。</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    save_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), <span class=\"string\">&#x27;data_pytorch&#x27;</span>)</span><br><span class=\"line\">    os.makedirs(save_dir, exist_ok=<span class=\"literal\">True</span>)  <span class=\"comment\"># 确保目录存在</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> original_layout == <span class=\"string\">&#x27;NCHW&#x27;</span>:</span><br><span class=\"line\">        tensor = torch.from_numpy(data.reshape(N, C, H, W))</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> original_layout == <span class=\"string\">&#x27;NHWC&#x27;</span>:</span><br><span class=\"line\">        tensor = torch.from_numpy(data.reshape(N, H, W, C)).permute(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;Unsupported original layout. Expected &#x27;NCHW&#x27; or &#x27;NHWC&#x27;.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 文件保存路径调整</span></span><br><span class=\"line\">    filename_nchw = os.path.join(save_dir, <span class=\"string\">f&quot;rotate_<span class=\"subst\">&#123;INTERPOLATE_MODE&#125;</span>_pytorch_<span class=\"subst\">&#123;filename_prefix&#125;</span>_nchw.bin&quot;</span>)</span><br><span class=\"line\">    tensor.numpy().tofile(filename_nchw)</span><br><span class=\"line\">    print_centered(<span class=\"string\">f&quot;Saved NCHW layout to <span class=\"subst\">&#123;filename_nchw&#125;</span>, shape: <span class=\"subst\">&#123;tensor.shape&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    tensor_nhwc = tensor.permute(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    filename_nhwc = os.path.join(save_dir, <span class=\"string\">f&quot;rotate_<span class=\"subst\">&#123;INTERPOLATE_MODE&#125;</span>_pytorch_<span class=\"subst\">&#123;filename_prefix&#125;</span>_nhwc.bin&quot;</span>)</span><br><span class=\"line\">    tensor_nhwc.numpy().tofile(filename_nhwc)</span><br><span class=\"line\">    print_centered(<span class=\"string\">f&quot;Saved NHWC layout to <span class=\"subst\">&#123;filename_nhwc&#125;</span>, shape: <span class=\"subst\">&#123;tensor_nhwc.shape&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Tensor余弦相似度与MSE比较</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">tensor_cosine_similarity</span>(<span class=\"params\">tensor_a, tensor_b, thd=<span class=\"number\">0.999</span></span>):</span><br><span class=\"line\">    tensor_a = tensor_a.numpy().reshape(<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\">    tensor_b = tensor_b.numpy().reshape(<span class=\"number\">1</span>, -<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        cos_sim = cosine_similarity(tensor_a, tensor_b)[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">        mse = mean_squared_error(tensor_a, tensor_b)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;Error calculating metrics: <span class=\"subst\">&#123;e&#125;</span>&quot;</span>)</span><br><span class=\"line\">        sys.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    result = <span class=\"string\">&#x27;pass&#x27;</span> <span class=\"keyword\">if</span> cos_sim &gt; thd <span class=\"keyword\">else</span> <span class=\"string\">&#x27;fail&#x27;</span></span><br><span class=\"line\">    print_centered(<span class=\"string\">f&quot;Cosine similarity: <span class=\"subst\">&#123;cos_sim&#125;</span>, Mean square error: <span class=\"subst\">&#123;mse&#125;</span>, Test result: <span class=\"subst\">&#123;result&#125;</span>&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span> <span class=\"keyword\">if</span> result == <span class=\"string\">&#x27;pass&#x27;</span> <span class=\"keyword\">else</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rotate_manual</span>(<span class=\"params\">images_nchw, angle, interpolation_mode, center</span>):</span><br><span class=\"line\">    N, C, H, W = images_nchw.shape</span><br><span class=\"line\">    x_c, y_c = center[<span class=\"number\">0</span>] - <span class=\"number\">0.5</span>, center[<span class=\"number\">1</span>] - <span class=\"number\">0.5</span></span><br><span class=\"line\">    angle_rad = math.radians(angle)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算 cos 和 sin 的值</span></span><br><span class=\"line\">    cos_theta = math.cos(angle_rad)</span><br><span class=\"line\">    sin_theta = math.sin(angle_rad)</span><br><span class=\"line\">    x_center = x_c - x_c * cos_theta + y_c * sin_theta</span><br><span class=\"line\">    y_center = y_c - x_c * sin_theta - y_c * cos_theta</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 创建一个与输入相同形状的张量来存储旋转后的图像</span></span><br><span class=\"line\">    rotated_images_nchw_optimized = torch.zeros_like(images_nchw)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 创建网格</span></span><br><span class=\"line\">    y_grid, x_grid = torch.meshgrid(torch.arange(H), torch.arange(W), indexing=<span class=\"string\">&#x27;ij&#x27;</span>)  </span><br><span class=\"line\">    y_grid = y_grid.<span class=\"built_in\">float</span>()</span><br><span class=\"line\">    x_grid = x_grid.<span class=\"built_in\">float</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算旋转后的位置</span></span><br><span class=\"line\">    y_i = x_grid * sin_theta + y_grid * cos_theta + y_center</span><br><span class=\"line\">    x_i = x_grid * cos_theta - y_grid * sin_theta + x_center</span><br><span class=\"line\">    a1 = y_i</span><br><span class=\"line\">    b1 = x_i</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将新位置的值赋给输出张量的对应位置</span></span><br><span class=\"line\">    x_ir = torch.<span class=\"built_in\">round</span>(x_i).long()</span><br><span class=\"line\">    y_ir = torch.<span class=\"built_in\">round</span>(y_i).long()</span><br><span class=\"line\"></span><br><span class=\"line\">    x_i = torch.clamp(x_ir, <span class=\"number\">0</span>, W-<span class=\"number\">1</span>)</span><br><span class=\"line\">    y_i = torch.clamp(y_ir, <span class=\"number\">0</span>, H-<span class=\"number\">1</span>)</span><br><span class=\"line\">    mask = (x_ir &gt;= <span class=\"number\">0</span>) &amp; (x_ir &lt; W) &amp; (y_ir &gt;= <span class=\"number\">0</span>) &amp; (y_ir &lt; H)</span><br><span class=\"line\"></span><br><span class=\"line\">    rotated_images_nchw_optimized[:, :, mask] = images_nchw[:, :, y_i[mask], x_i[mask]]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ENABLE_PRINT:</span><br><span class=\"line\">        <span class=\"comment\"># 在 c, h, w 维度进行打印</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(C):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(H):</span><br><span class=\"line\">                <span class=\"keyword\">for</span> w <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(W):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> mask[h, w]:</span><br><span class=\"line\">                        print_centered(<span class=\"string\">f&quot;(c, y, x) = (<span class=\"subst\">&#123;c&#125;</span>, <span class=\"subst\">&#123;h&#125;</span>, <span class=\"subst\">&#123;w&#125;</span>)\\t(y_i, x_i) = (<span class=\"subst\">&#123;a1[h, w]&#125;</span>, <span class=\"subst\">&#123;b1[h, w]&#125;</span>)\\t(round_yi, round_xi) = (<span class=\"subst\">&#123;y_ir[h, w]&#125;</span>, <span class=\"subst\">&#123;x_ir[h, w]&#125;</span>)\\t(int_yi, int_xi) = (<span class=\"subst\">&#123;y_i[h, w]&#125;</span>, <span class=\"subst\">&#123;x_i[h, w]&#125;</span>)&quot;</span>)</span><br><span class=\"line\">                        <span class=\"comment\"># print_centered(f&quot;rotated_images_nchw_optimized[&#123;c&#125;, &#123;h&#125;, &#123;w&#125;] = &#123;rotated_images_nchw_optimized[c, h, w]&#125;&quot;)</span></span><br><span class=\"line\">                        <span class=\"comment\"># print_centered(f&quot;images_nchw[&#123;c&#125;, &#123;y_i[h, w]&#125;, &#123;x_i[h, w]&#125;] = &#123;images_nchw[c, y_i[h, w], x_i[h, w]]&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;==================== default close rotate debug print func ====================\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> rotated_images_nchw_optimized</span><br><span class=\"line\"><span class=\"comment\">##################################### PYTHON_MANUAL_ROTATE_FUNC #####################################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    args = parse_args()</span><br><span class=\"line\">    frame_ids = args.frame_ids  <span class=\"comment\"># 这将是一个帧ID列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> frame_id <span class=\"keyword\">in</span> frame_ids:</span><br><span class=\"line\">        frame = <span class=\"string\">f&quot;frame<span class=\"subst\">&#123;frame_id&#125;</span>&quot;</span></span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;Testing <span class=\"subst\">&#123;frame&#125;</span>...&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># input_name = f&quot;&#123;DATA_PATH&#125;/&#123;frame&#125;/Input.prev_bev.1x256x400x200.fp8.bin&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># angle_name = f&quot;&#123;DATA_PATH&#125;/&#123;frame&#125;/Input.angle.fp64.bin&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># output_name = f&quot;&#123;DATA_PATH&#125;/&#123;frame&#125;/Golden.prev_bev_out.1x256x400x200.fp8.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        input_name = <span class=\"string\">f&quot;<span class=\"subst\">&#123;DATA_PATH&#125;</span>/<span class=\"subst\">&#123;frame&#125;</span>/Input.prev_bev.32x400x200x8.fp8.bin&quot;</span></span><br><span class=\"line\">        angle_name = <span class=\"string\">f&quot;<span class=\"subst\">&#123;DATA_PATH&#125;</span>/<span class=\"subst\">&#123;frame&#125;</span>/Input.angle.fp32.bin&quot;</span></span><br><span class=\"line\">        output_name = <span class=\"string\">f&quot;<span class=\"subst\">&#123;DATA_PATH&#125;</span>/<span class=\"subst\">&#123;frame&#125;</span>/Golden.prev_bev_out.32x400x200x8.fp8.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 读取输入和输出数据</span></span><br><span class=\"line\">        input_bin = read_bin_file(input_name, dtype)</span><br><span class=\"line\">        output_bin = read_bin_file(output_name, dtype)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ENABLE_NHWC_2_NCHW:</span><br><span class=\"line\">            original_layout = <span class=\"string\">&#x27;NHWC&#x27;</span></span><br><span class=\"line\">            input_tensor = torch.from_numpy(input_bin.reshape(N, H, W, C)).permute(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">            output_tensor = torch.from_numpy(output_bin.reshape(N, H, W, C)).permute(<span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            original_layout = <span class=\"string\">&#x27;NCHW&#x27;</span></span><br><span class=\"line\">            input_tensor = torch.from_numpy(input_bin.reshape(N, C, H, W))</span><br><span class=\"line\">            output_tensor = torch.from_numpy(output_bin.reshape(N, C, H, W))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ENABLE_OUTPUT_BINARY:</span><br><span class=\"line\">            output_tensor = rotate_manual(input_tensor, angle_fp32, interpolation_mode, center)</span><br><span class=\"line\"></span><br><span class=\"line\">        transform_and_save(input_bin, original_layout, N, H, W, C, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;frame&#125;</span>_input&#x27;</span>)</span><br><span class=\"line\">        transform_and_save(output_bin, original_layout, N, H, W, C, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;frame&#125;</span>_output&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 读取角度</span></span><br><span class=\"line\">        angle_fp32, angle_fp64 = read_angle_from_bin_file(angle_name) <span class=\"keyword\">if</span> os.path.exists(angle_name) <span class=\"keyword\">else</span> (<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;[<span class=\"subst\">&#123;frame&#125;</span>] angle (fp64): <span class=\"subst\">&#123;angle_fp64:<span class=\"number\">.9</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;[<span class=\"subst\">&#123;frame&#125;</span>] angle (fp32): <span class=\"subst\">&#123;angle_fp32:<span class=\"number\">.9</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        rotated_pytorch_tensor = torchvision.transforms.functional.rotate(</span><br><span class=\"line\">            input_tensor, angle=angle_fp32, interpolation=interpolation_mode, center=center)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 比较结果</span></span><br><span class=\"line\">        comparison_result = tensor_cosine_similarity(rotated_pytorch_tensor, output_tensor)</span><br><span class=\"line\">        print_centered(<span class=\"string\">f&quot;[<span class=\"subst\">&#123;frame&#125;</span>] Comparison result: <span class=\"subst\">&#123;<span class=\"string\">&#x27;Pass&#x27;</span> <span class=\"keyword\">if</span> comparison_result <span class=\"keyword\">else</span> <span class=\"string\">&#x27;Fail&#x27;</span>&#125;</span>\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><h2 id=\"gitlab\"><a href=\"#gitlab\" class=\"headerlink\" title=\"gitlab\"></a>gitlab</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init                           <span class=\"comment\"># 初始化git仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> &lt;repository_url&gt;         <span class=\"comment\"># 克隆远程仓库</span></span><br><span class=\"line\">git checkout -b &lt;branch_name&gt;      <span class=\"comment\"># 创建一个新的分支</span></span><br><span class=\"line\">git add .                          <span class=\"comment\"># 添加文件到暂存区</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;&lt;your_message&gt;&quot;</span>     <span class=\"comment\"># 提交更改到本地仓库</span></span><br><span class=\"line\">git push origin rotate_local:rotate_remote    <span class=\"comment\"># 推送该分支到远程仓库并指定名称为rotate_remote</span></span><br><span class=\"line\">git branch --set-upstream-to=origin/rotate_remote rotate_local    <span class=\"comment\"># 绑定local与remote分支</span></span><br><span class=\"line\">git branch -u origin/rotate_remote rotate_local                   <span class=\"comment\"># 简写</span></span><br><span class=\"line\">git push origin rotate_remote      <span class=\"comment\"># 推送更改到远程分支</span></span><br><span class=\"line\">git pull origin master             <span class=\"comment\"># 拉取远程仓库的最新更改</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge &lt;branch_name&gt;            <span class=\"comment\"># 将feature合入master</span></span><br><span class=\"line\">git branch -d &lt;branch_name&gt;        <span class=\"comment\"># 删除分支</span></span><br><span class=\"line\">git push origin --delete rotate    <span class=\"comment\"># 删除origin的远程仓库中的rotate分支</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># demo001</span></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;dxm_first_blog&quot;</span></span><br><span class=\"line\">git remote add origin git@github.com:dxm2301/blog_ddd.git</span><br><span class=\"line\">git remote set-url origin git@github.com:dxm2301/blog_ddd.git</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h2 id=\"girret\"><a href=\"#girret\" class=\"headerlink\" title=\"girret\"></a>girret</h2><h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><h2 id=\"software-install\"><a href=\"#software-install\" class=\"headerlink\" title=\"software install\"></a>software install</h2><h3 id=\"apt\"><a href=\"#apt\" class=\"headerlink\" title=\"apt\"></a>apt</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ./package_file.deb\t<span class=\"comment\"># apt安装deb包</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"aptitude\"><a href=\"#aptitude\" class=\"headerlink\" title=\"aptitude\"></a>aptitude</h3><h3 id=\"dpkg\"><a href=\"#dpkg\" class=\"headerlink\" title=\"dpkg\"></a>dpkg</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i package_file.deb\t<span class=\"comment\"># dpkg安装deb包</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf dxm.tar.gz</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>-x</code>：解压文件；</li>\n<li><code>-z</code>：待解压文件是用 gzip 压缩；</li>\n<li><code>-v</code>：解压过程中显示文件名；</li>\n<li><code>-f</code>：待解压文件名；</li>\n</ul>\n<h2 id=\"tree\"><a href=\"#tree\" class=\"headerlink\" title=\"tree\"></a>tree</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree -L 2 -af path/to/directory</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>-L 2</code>：指定要显示的树的最大深度；</li>\n<li><code>-a</code>：显示所有文件和目录，包括隐藏的文件和目录；</li>\n<li><code>-f</code>：打印每个文件的完整路径前缀；</li>\n<li><code>path/to/directory</code>：显示树结构的目录路径；</li>\n</ul>\n<h2 id=\"批量改名\"><a href=\"#批量改名\" class=\"headerlink\" title=\"批量改名\"></a>批量改名</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rename <span class=\"string\">&#x27;s/MH20/MH20_1slice/&#x27;</span> MH20_Resize_Conv_16tiles_1slice_int8*.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"scp-sftp\"><a href=\"#scp-sftp\" class=\"headerlink\" title=\"scp&#x2F;sftp\"></a>scp&#x2F;sftp</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sftp lixiang@10.243.120.94    <span class=\"comment\"># 输入密码</span></span><br><span class=\"line\"><span class=\"comment\"># ls查看远程服务器目录，lls查看本地服务器目录</span></span><br><span class=\"line\">lcd /home/dugen/scc_dxm/directory    <span class=\"comment\"># 更改本地目录到要包含复制文件的目录</span></span><br><span class=\"line\">put file.txt                         <span class=\"comment\"># 使用put命令将文件从本地复制到远程服务器</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span>                                   <span class=\"comment\"># 使用ls确认成功复制到远程服务器</span></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/note/general/recording/001_wp.png","slug":"001_wp.png","post":"clv88mb06000587uf3x19adyt","modified":0,"renderable":0},{"_id":"source/_posts/note/general/tutorial_linux/001.png","slug":"001.png","post":"clv88mb08000987uf1jqq6m23","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clv88mb06000587uf3x19adyt","category_id":"clv88mb07000787uf1qus9u6m","_id":"clv88mb09000e87uf4y4333dp"},{"post_id":"clv88mb06000687ufahvchp8n","category_id":"clv88mb07000787uf1qus9u6m","_id":"clv88mb0a000g87uf723qazpy"},{"post_id":"clv88mb08000987uf1jqq6m23","category_id":"clv88mb07000787uf1qus9u6m","_id":"clv88mb0a000j87ufhb1qbhoq"}],"PostTag":[{"post_id":"clv88mb06000587uf3x19adyt","tag_id":"clv88mb07000887ufbu8e30z1","_id":"clv88mb09000c87uf06t8f0fd"},{"post_id":"clv88mb06000687ufahvchp8n","tag_id":"clv88mb08000b87uf9lee1jsr","_id":"clv88mb0a000i87uffu7v3yu2"},{"post_id":"clv88mb06000687ufahvchp8n","tag_id":"clv88mb09000f87ufaq8ybc3l","_id":"clv88mb0a000k87uf78jkhbhn"},{"post_id":"clv88mb08000987uf1jqq6m23","tag_id":"clv88mb0a000h87uf8ppa3f2p","_id":"clv88mb0b000n87uf2g4bgt9l"},{"post_id":"clv88mb08000987uf1jqq6m23","tag_id":"clv88mb0a000l87uf83v65kgg","_id":"clv88mb0b000o87uf8wer0ee8"},{"post_id":"clv88mb08000987uf1jqq6m23","tag_id":"clv88mb0a000m87uf50cpcboy","_id":"clv88mb0b000p87ufdplm607r"}],"Tag":[{"name":"dxm_recording","_id":"clv88mb07000887ufbu8e30z1"},{"name":"conv2d","_id":"clv88mb08000b87uf9lee1jsr"},{"name":"convTranspose2d","_id":"clv88mb09000f87ufaq8ybc3l"},{"name":"Linux","_id":"clv88mb0a000h87uf8ppa3f2p"},{"name":"Vim","_id":"clv88mb0a000l87uf83v65kgg"},{"name":"Git","_id":"clv88mb0a000m87uf50cpcboy"}]}}